from discord.ext import commands
import discord
import random
import json
from mongodbs import *
import requests
from truth_dare import truths, dares
import random
from discord.ext.commands import cooldown, BucketType
import asyncio
from discord_components import *
from random import randint


class funs(commands.Cog, name='fun'):

    def __init__(self, bot):
        self.bot = bot

    def cog_load(self):
        print("loaded")

    def cog_unload(self):
        print(f'Fun was unloaded')

    @commands.command(aliases=['me'])
    @commands.guild_only()
    async def meme(self, ctx):
        '''Post a meme'''
        r = requests.get("https://memes.blademaker.tv/api?lang=en")
        res = r.json()
        title = res["title"]
        ups = res["ups"]
        downs = res["downs"]
        comments = res['score']
        memes = discord.Embed(title=f"{title}")
        memes.set_image(url=res["image"])
        memes.set_footer(text=f"👍 : {ups}   💬 : {comments}")
        return await ctx.send(embed=memes)

    @commands.command()
    @commands.guild_only()
    @commands.cooldown(1, 3, commands.BucketType.user)
    async def fact_cat(self, ctx):
        '''Post a cat fact'''
        r = requests.get("https://catfact.ninja/fact")
        res = r.json()
        embed = discord.Embed(title=f"Did you know this cat-fact?",
                              description=res["fact"], colour=randint(0, 0xffffff))
        return await ctx.send(embed=embed)

    @commands.command()
    @commands.guild_only()
    @commands.cooldown(1, 3, commands.BucketType.user)
    async def dog(self, ctx):
        '''Post a cat fact'''
        r = requests.get("https://dog.ceo/api/breeds/image/random")
        res = r.json()
        embed = discord.Embed(
            title=f"Have you seen this dog?", colour=randint(0, 0xffffff))
        embed.set_image(url=res["message"])
        return await ctx.send(embed=embed)

    @commands.command()
    @commands.guild_only()
    @commands.cooldown(1, 5, commands.BucketType.user)
    async def ip(self, ctx, ip_address: str):
        '''Post a cat fact'''
        try:
            r = requests.get(f"https://ipinfo.io/{ip_address}/geo")
            res = r.json()
            embed = discord.Embed(
                title=f"Random ip-address", description=res["ip"], colour=randint(0, 0xffffff))
            embed.add_field(name="City", value=res["city"], inline=False)
            embed.add_field(name="Region", value=res["region"], inline=False)
            embed.add_field(name="Country", value=res["country"], inline=False)
            embed.add_field(name="Location", value=res["loc"], inline=False)
            embed.add_field(name="Organisation",
                            value=res["org"], inline=False)
            embed.add_field(name="Postal-number",
                            value=res["postal"], inline=False)
            embed.set_footer(text=f"Timezone: {res['timezone']}")
            return await ctx.send(embed=embed)
        except:
            embed = discord.Embed(title=f"Ip address will be in the format",
                                  description="117.200.149.23", colour=randint(0, 0xffffff))
            embed.add_field(name="Example Command:",
                            value="?ip 117.200.149.23")
            embed.set_footer(
                text=f"Change the number in the ip address to see actually what exists in that address")
            return await ctx.send(embed=embed)

    @commands.command()
    @commands.guild_only()
    @commands.cooldown(1, 3, commands.BucketType.user)
    async def bored(self, ctx):
        '''Post a cat fact'''
        r = requests.get("https://www.boredapi.com/api/activity")
        res = r.json()
        embed = discord.Embed(title=f"Try this to get away from :sleeping: :sleeping:",
                              description=res["activity"], colour=randint(0, 0xffffff))
        embed.set_footer(text=f"Type :  {res['type']}")
        return await ctx.send(embed=embed)

    @commands.command(aliases=['tru'])
    @commands.guild_only()
    @commands.cooldown(1, 5, commands.BucketType.user)
    async def truth(self, ctx):
        serverId = ctx.message.guild.id
        allowed = True
        try:
            x = list(server_info.find({"id": serverId}))[0]['disabled']
            if "truth" in x:
                allowed = False
        except:
            pass
        if(allowed == True):
            embed = discord.Embed(
                title=f'{random.choice(truths)}',
                colour=randint(0, 0xffffff))
            await ctx.send(embed=embed)

    @commands.command(aliases=['dru'])
    @commands.guild_only()
    @commands.cooldown(1, 3, commands.BucketType.user)
    async def dare(self, ctx):
        serverId = ctx.message.guild.id
        allowed = True
        try:
            x = list(server_info.find({"id": serverId}))[0]['disabled']
            if "dare" in x:
                allowed = False
        except:
            pass
        if(allowed == True):
            embed = discord.Embed(
                title=f'{random.choice(dares)}',
                colour=randint(0, 0xffffff))
            await ctx.send(embed=embed)

    @commands.command(aliases=['av', 'ava'])
    @commands.guild_only()
    @commands.cooldown(1, 3, commands.BucketType.user)
    async def avatar(self, ctx: commands.Context, member: discord.Member = None):
        serverId = ctx.message.guild.id
        allowed = True
        try:
            x = list(server_info.find({"id": serverId}))[0]['disabled']
            if "avatar" in x:
                allowed = False
        except:
            pass
        if(allowed == True):
            if(member == None):
                await ctx.send(ctx.author.avatar_url)
            else:
                try:
                    await ctx.send(member.avatar_url)
                except:
                    await ctx.send("Mention someone properly!!!")

    @commands.command(aliases=['hck'])
    @commands.guild_only()
    @commands.cooldown(1, 25, commands.BucketType.user)
    async def hack(self, ctx: commands.Context, member: discord.Member):
        serverId = ctx.message.guild.id
        allowed = True
        try:
            x = list(server_info.find({"id": serverId}))[0]['disabled']
            if "hack" in x:
                allowed = False
        except:
            pass
        if(allowed == True):
            if(member == ctx.author):
                await ctx.send(f"I thought not to hack you my friend {member.mention} !. Since you insisted i started hacking you!!!")
                await asyncio.sleep(2)
            if(member == self.bot.user):
                await ctx.send("I am the Hacker 🎭 who hacks everyone. You tried to mess with me so i started hacking your system now 💀💀⌛⌛")
                await asyncio.sleep(2)
                member = ctx.author
            my_msg = await ctx.send(f"Started hacking..... {member.mention}")
            x = random.randint(0, 1000)
            texts = ["Collecting sensitive information ⚠️ from phishing once done on you... ",
                     "Launching Malware ☣️ attacks on you !!",
                     "Injecting ransware and pegasus in your system 👾👾 👾 ",
                     "Encrypting your important files 🔑🔐.....Making it unreadable to u 🖾🖾🖾",
                     "Launching Brute-Force-Attack and adding your ip address to botnets!!! 📍📍📍",
                     f"Selling your sensitive data to ha*** 🎭 and got a profit worth {x} dollars 🤑 ",
                     f"The dangerous hack has been completed and {member.mention} system has been filled with viruses 💀💀💀!!!"]
            for i in texts:
                await asyncio.sleep(3)
                await my_msg.edit(content=i)

    @commands.command()  # closes the terminal 😁:)
    @commands.cooldown(1, 5, commands.BucketType.user)
    async def close(self, ctx):
        '''Used to stop the bot. Only available for developers 😅'''
        if ctx.author.id in [768016269269925911, 811919559086702642, 790790711326277652]:
            await ctx.send(f'{ctx.author.mention}You successfully closed the bot!!!')
            await quit()
        else:
            await ctx.reply('This is only for owners 😎!')

    @commands.command(aliases=['i', 'inv'])  # invite link for the bot
    @commands.cooldown(1, 5, commands.BucketType.user)
    async def invite(self, ctx):
        try:
            serverId = ctx.message.guild.id
            allowed = True
            try:
                x = list(server_info.find({"id": serverId}))[0]['disabled']
                if "invite" in x:
                    allowed = False
            except:
                pass
            if(allowed == True):
                dbl_invite = Button(style=ButtonStyle.URL, label="DBL invite",
                                    url="https://discordbotlist.com/bots/exploiter")
                top_invite = Button(style=ButtonStyle.URL, label="Top.gg Invite",
                                    url="https://top.gg/bot/839421874646548530")
                server_invite = Button(style=ButtonStyle.URL, label="Join official server",
                                       url="https://top.gg/servers/850200666798161941")
                # await ctx.send("http://tiny.cc/EXPLOITER")
                await ctx.send("You can invite in any one of the link!",
                               components=[
                                   [dbl_invite, top_invite], [server_invite]]
                               )
        except:
            dbl_invite = Button(style=ButtonStyle.URL, label="DBL invite",
                                url="https://discordbotlist.com/bots/exploiter")
            top_invite = Button(style=ButtonStyle.URL, label="Top.gg Invite",
                                url="https://top.gg/bot/839421874646548530")
            server_invite = Button(style=ButtonStyle.URL, label="Join official server",
                                   url="https://top.gg/servers/850200666798161941")
            # await ctx.send("http://tiny.cc/EXPLOITER")
            await ctx.send("You can invite in any one of the link!",
                           components=[
                               [dbl_invite, top_invite], [server_invite]]
                           )

    @commands.command(aliases=['v', 'vt'])  # invite link for the bot
    @commands.cooldown(1, 5, commands.BucketType.user)
    async def vote(self, ctx):
        try:
            serverId = ctx.message.guild.id
            allowed = True
            try:
                x = list(server_info.find({"id": serverId}))[0]['disabled']
                if "vote" in x:
                    allowed = False
            except:
                pass
            if(allowed == True):
                dbl_vote = Button(style=ButtonStyle.URL, label="DBL vote",
                                  url="https://discordbotlist.com/bots/exploiter/upvote")
                top_vote = Button(style=ButtonStyle.URL, label="Top.gg vote",
                                  url="https://top.gg/bot/839421874646548530/vote")
                server_invite = Button(style=ButtonStyle.URL, label="Join official server",
                                       url="https://top.gg/servers/850200666798161941")
                # await ctx.send("http://tiny.cc/EXPLOITER")
                await ctx.send("You can vote in any link!",
                               components=[
                                   [dbl_vote, top_vote], [server_invite]]
                               )
        except:
            dbl_vote = Button(style=ButtonStyle.URL, label="DBL vote",
                              url="https://discordbotlist.com/bots/exploiter/upvote")
            top_vote = Button(style=ButtonStyle.URL, label="Top.gg vote",
                              url="https://top.gg/bot/839421874646548530/vote")
            server_invite = Button(style=ButtonStyle.URL, label="Join official server",
                                   url="https://top.gg/servers/850200666798161941")
            # await ctx.send("http://tiny.cc/EXPLOITER")
            await ctx.send("You can invite in any link!",
                           components=[[dbl_vote, top_vote], [server_invite]]
                           )

    @commands.command(aliases=['q', 'qte'])
    @commands.guild_only()
    @commands.cooldown(1, 3, commands.BucketType.user)
    async def quote(self, ctx: commands.context, day: str = None):
        serverId = ctx.message.guild.id
        allowed = True
        try:
            x = list(server_info.find({"id": serverId}))[0]['disabled']
            if "quote" in x:
                allowed = False
        except:
            pass
        if(allowed == True):
            if(day == None):
                response = requests.get("https://zenquotes.io/api/random")
                zen = (response.json())
                await ctx.reply(zen[0]['q']+"\n                                          \t\t\t-"+zen[0]['a'])
            elif(day == "today"):
                response = requests.get("https://zenquotes.io/api/today")
                zen = response.json()
                await ctx.reply(zen[0]['q']+"\n                                          \t\t\t-"+zen[0]['a'])
            else:
                await ctx.reply("``?quote`` to get random quote and ``?quote today`` to get today's quote")


def setup(bot):
    bot.add_cog(funs(bot))
    print(f'Fun was loaded!')
