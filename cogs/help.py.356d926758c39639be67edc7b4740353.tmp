from discord.ext import commands
import asyncio
import discord
from random import randint
import json
import requests
from discord_components import (
    Button,
    ButtonStyle,
    Select,
    SelectOption,
    Interaction
)
from cogs.embeds import *
from discord.ext.commands import cooldown, BucketType
global commands_available,moderation_available,giveaway_available,music_available,fun_available,games_available,modes_available,utils_available,ticket_available,others_available,greetings_available



commands_available=["custom_command","tag","custom","move","playlist","search","shuffle","skipto","stop","uptime","ttt","hand_cricket","rps","changeprefix","current_count","eball","wikipedia","youtube","voice_logs","cancel_voice_logs","action_logs","cancel_action_logs","check","lock","unlock","fact","emoji","emoji_search","emoji_list","channel_status","calculator","button_role","punch","slap","kick","ban","mute","unmute","unban","clear","greroll","gend","gstart","gcreate","grole","gdrop","play","pause","resume","loop","queue","np","skip","volume","remove","song","track","meme","quote","fact_cat","dog","ip","bored","avatar","hack","aki","caki","truth","dare","rip","wanted","remember","tran","ping","poll","send","ticketmention","createticket","closeticket","dropticket","serverinfo","info","globalchatstart","globalchatstop","set_welcome","set_leave","cancel_welcome","cancel_leave","start","beg","resources","fight","scout","profile","potion","train","train_cost","invite","vote","count_channel","count_reset","cancel_count","change_count"]
modes_available=["moderation","giveaway","games","music","fun","utils","ticket","others"]
moderation_available=["voice_logs","cancel_voice_logs","action_logs","cancel_action_logs","check","lock","unlock","kick","ban","mute","unmute","unban","clear","button_role"]
giveaway_available=["greroll","gend","gstart","gcreate","grole","gdrop"]
music_available=["move","playlist","search","shuffle","skipto","stop","uptime","play","pause","resume","loop","queue","np","skip","volume","remove","song","track"]
fun_available=["ttt","hand_cricket","rps","punch","slap","meme","quote","fact_cat","dog","ip","bored","avatar","hack","aki","caki","truth","dare","rip","wanted","count_channel","eball","count_reset","cancel_count","change_count","current_count"]
utils_available=["changeprefix","wikipedia","youtube","calculator","remember","tran","ping","poll","send","tag","custom","custom_command"]
ticket_available=["ticketmention","createticket","closeticket","dropticket"]
others_available=["serverinfo","info","globalchatstart","globalchatstop","fact","emoji","emoji_search","emoji_list","channel_status"]
greetings_available=["set_welcome","set_leave","cancel_welcome","cancel_leave"]
games_available=["start","beg","resources","fight","scout","profile","potion","train","train_cost"]

class Help(commands.Cog, name='help'):

    def __init__(self, bot):
        self.bot = bot

    def cog_load(self):
      
      print("Help was loaded")
    def cog_unload(self):
        print(f'Help was unloaded')

    @commands.group(invoke_without_command=True,aliases=['h'])
    @commands.cooldown(1, 5, commands.BucketType.user)
    async def help(self,ctx):
      oth_page2=discord.Embed(
          title="Others", description="Other commands", colour=randint(0, 0xffffff))
      oth_page2.set_thumbnail(
          url="https://cdn.discordapp.com/avatars/839421874646548530/0c3f5a2ee26def577afe60154cd106cd.webp?size=1024") 
      oth_page2.add_field(name="Fact",value="Sends random fact",inline=False)  
      oth_page2.add_field(name="Emoji",value="Sends the emoji of the query you sent",inline=False)
      oth_page2.add_field(name="Emoji_search",value="Sends upto 5 emojis based on ur query",inline=False)    
      oth_page2.add_field(name="Emoji_list",value="Sends the name of the emojis of the name available according to ur query",inline=False)      
      oth_page2.add_field(name="Channel_status",value="Used to check the status of the channel",inline=False) 
      oth_page2.set_footer(text="? help <cmd> to see more details  ─ Page 2 of 2")  

      oth_page1=discord.Embed(
          title="Others", description="Other commands", colour=randint(0, 0xffffff))
      oth_page1.set_thumbnail(
          url="https://cdn.discordapp.com/avatars/839421874646548530/0c3f5a2ee26def577afe60154cd106cd.webp?size=1024") 
      oth_page1.add_field(name="Serverinfo",value="Sends the info of the server",inline=False) 
      oth_page1.add_field(name="Info",value="Sends the info of the specified person",inline=False)
      oth_page1.add_field(name="Invite",value="Used to invite the bot to ur server",inline=False)
      oth_page1.add_field(name="Vote",value="Used to vote the bot",inline=False)  
      oth_page1.add_field(name="GlobalChatStart",value="Used to make global chat channel in ur server",inline=False)  
      oth_page1.add_field(name="GlobalChatStop",value="Used to stop global chat in ur server",inline=False)   
      oth_page1.set_footer(text="? help <cmd> to see more details  ─ Page 1 of 2")         


      gre_page2=discord.Embed(
          title="Greetings", description="Commands regarding Greetings", colour=randint(0, 0xffffff))
      gre_page2.set_thumbnail(
          url="https://cdn.discordapp.com/avatars/839421874646548530/0c3f5a2ee26def577afe60154cd106cd.webp?size=1024") 
      gre_page2.add_field(name="Cancel_welcome",value="Used to cancel greeting channel for joined members",inline=False)
      gre_page2.add_field(name="Cancel_leave",value="Used to cancel greetings for leaving persons",inline=False)   
      gre_page2.set_footer(text="? help <cmd> to see more details  ─ Page 2 of 2") 

      gre_page1=discord.Embed(
          title="Greetings", description="Commands regarding Greetings", colour=randint(0, 0xffffff))
      gre_page1.set_thumbnail(
          url="https://cdn.discordapp.com/avatars/839421874646548530/0c3f5a2ee26def577afe60154cd106cd.webp?size=1024") 
      gre_page1.add_field(name="Set_welcome",value="Used to set greeting channel for joined members",inline=False)
      gre_page1.add_field(name="Set_leave",value="Used to set greetings for leaving persons",inline=False)   
      gre_page1.set_footer(text="? help <cmd> to see more details  ─ Page 1 of 2") 


      tic_page2=discord.Embed(
          title="Tickets", description="Commands regarding tickets", colour=randint(0, 0xffffff))
      tic_page2.set_thumbnail(
          url="https://cdn.discordapp.com/avatars/839421874646548530/0c3f5a2ee26def577afe60154cd106cd.webp?size=1024") 
      tic_page2.add_field(name="Ticketmentiom",value="used to make the roles to get pinged when someone create tickets",inline=False)
      tic_page2.add_field(name="Dropticket",value="Used to drop the ticket in ur server",inline=False)   
      tic_page2.set_footer(text="? help <cmd> to see more details  ─ Page 2 of 2")  

      tic_page1=discord.Embed(
          title="Tickets", description="Commands regarding tickets", colour=randint(0, 0xffffff))
      tic_page1.set_thumbnail(
          url="https://cdn.discordapp.com/avatars/839421874646548530/0c3f5a2ee26def577afe60154cd106cd.webp?size=1024") 
      tic_page1.add_field(name="Createticket",value="Used to make tickets",inline=False)
      tic_page1.add_field(name="Closeticket",value="Used to close the ticket",inline=False)   
      tic_page1.set_footer(text="? help <cmd> to see more details  ─ Page 1 of 2")  

      uti_page2=discord.Embed(
          title="Utils", description="Utilities or useful commands", colour=randint(0, 0xffffff))
      uti_page2.set_thumbnail(
          url="https://cdn.discordapp.com/avatars/839421874646548530/0c3f5a2ee26def577afe60154cd106cd.webp?size=1024") 
      uti_page2.add_field(name="Remember",value="Used to remind the important event at specified time for specified people",inline=False)      
      uti_page2.add_field(name="Tran",value="Used to translate from any language to specified language",inline=False)
      uti_page2.add_field(name="Ping",value="Sends the ping speed of bot",inline=False)
      uti_page2.add_field(name="Poll",value="Used to make poll",inline=False)
      uti_page2.add_field(name="Send",value="Sends the given message in embed",inline=False)
      uti_page2.add_field(name="Custom",value="Used to make custom commands",inline=False)
      uti_page2.add_field(name="Custom_command",value="Used to see the custom-commands available in the server",inline=False)  
      uti_page2.add_field(name="Tag",value="Command to use the custom commands",inline=False)      
      uti_page2.set_footer(text="? help <cmd> to see more details  ─ Page 2 of 2") 

      
      uti_page1=discord.Embed(
          title="Utils", description="Utilities or useful commands", colour=randint(0, 0xffffff))
      uti_page1.set_thumbnail(
          url="https://cdn.discordapp.com/avatars/839421874646548530/0c3f5a2ee26def577afe60154cd106cd.webp?size=1024") 
      uti_page1.add_field(name="changeprefix",value="Used to change-prefix of the bot",inline=False)   
      uti_page1.add_field(name="Enable",value="Used to enable the specified command",inline=False) 
      uti_page1.add_field(name="Disable",value="Used to disable the specified commamnd",inline=False) 
      uti_page1.add_field(name="Wikipedia",value="Searches the query in wikipedia and sends some information about it",inline=False)   
      uti_page1.add_field(name="Youtube",value="Searches the query in youtube and sends the first link",inline=False) 
      uti_page1.add_field(name="Calculator",value="Used to use Exploiter's calculator",inline=False)
      
      uti_page1.set_footer(text="? help <cmd> to see more details  ─ Page 1 of 2")  

      fun_page4=discord.Embed(
          title="Funs", description="commands that are used to make play musics", colour=randint(0, 0xffffff))
      fun_page4.set_thumbnail(
          url="https://cdn.discordapp.com/avatars/839421874646548530/0c3f5a2ee26def577afe60154cd106cd.webp?size=1024") 
      fun_page4.add_field(name="Ttt",value="Used to play Tic Tac Toe Game",inline=False)   
      fun_page4.add_field(name="hand_cricket",value="Used to play Hand Cricket Match",inline=False)   
      fun_page4.add_field(name="Count_channel",value="Used to specfies the counting channel",inline=False)   
      fun_page4.add_field(name="Count_reset",value="Used to reset the count in counting channel",inline=False)  
      fun_page4.add_field(name="Cancel_count",value="Used to cancel the counting game in the count channel",inline=False) 
      fun_page4.add_field(name="Change_count",value="Used to change the counting channel",inline=False)  
      fun_page4.add_field(name="Current_Count",value="Sends the current count going in counting channel",inline=False) 
      fun_page4.set_footer(text="? help <cmd> to see more details  ─ Page 4 of 4")        

      fun_page3=discord.Embed(
          title="Funs", description="commands that are used to make play musics", colour=randint(0, 0xffffff))
      fun_page3.set_thumbnail(
          url="https://cdn.discordapp.com/avatars/839421874646548530/0c3f5a2ee26def577afe60154cd106cd.webp?size=1024") 
      fun_page3.add_field(name="Truth",value="Sends the truth question",inline=False)     
      fun_page3.add_field(name="Dare",value="Sends the dare question",inline=False) 
      fun_page3.add_field(name="Rip",value="Sends the rip image of specified people",inline=False) 
      fun_page3.add_field(name="Wanted",value="Sends the wanted image of specified people",inline=False) 
      fun_page3.add_field(name="Eball",value="Used to play eball game",inline=False) 
      fun_page3.add_field(name="Rps",value="Used to play Rock paper scissor game",inline=False) 
      fun_page3.set_footer(text="? help <cmd> to see more details  ─ Page 3 of 4")

      fun_page2=discord.Embed(
          title="Funs", description="commands that are used to make play musics", colour=randint(0, 0xffffff))
      fun_page2.set_thumbnail(
          url="https://cdn.discordapp.com/avatars/839421874646548530/0c3f5a2ee26def577afe60154cd106cd.webp?size=1024") 
      fun_page2.add_field(name="Ip",value="Sends the landmark of specified ip-location",inline=False) 
      fun_page2.add_field(name="Bored",value="Sends some task for bored people",inline=False)
      fun_page2.add_field(name="Avatar",value="Sends the avatar of specified people",inline=False)
      fun_page2.add_field(name="Hack",value="Sends the hacking message of specified person",inline=False)
      fun_page2.add_field(name="Aki",value="Used to play akinator game",inline=False)
      fun_page2.add_field(name="Caki",value="Specifies the channel for akinator",inline=False) 
      fun_page2.set_footer(text="? help <cmd> to see more details  ─ Page 2 of 4")    

      fun_page1=discord.Embed(
          title="Funs", description="commands that are used to make play musics", colour=randint(0, 0xffffff))
      fun_page1.set_thumbnail(
          url="https://cdn.discordapp.com/avatars/839421874646548530/0c3f5a2ee26def577afe60154cd106cd.webp?size=1024") 
      fun_page1.add_field(name="Punch",value="Sends the punch image of mentioned person",inline=False)  
      fun_page1.add_field(name="Slap",value="Sends the slap image of mentioned person",inline=False) 
      fun_page1.add_field(name="Meme",value="Sends the random meme",inline=False) 
      fun_page1.add_field(name="Quote",value="Sends the random quote",inline=False)
      fun_page1.add_field(name="Fact_cat",value="Sends the fact of cat",inline=False)
      fun_page1.add_field(name="Dog",value="Sends the image of dog",inline=False) 
      fun_page1.set_footer(text="? help <cmd> to see more details  ─ Page 1 of 4")      


      mus_page3=discord.Embed(
    title="Musics", description="commands that are used to make play musics", colour=randint(0, 0xffffff))
      mus_page3.set_thumbnail(
      url="https://cdn.discordapp.com/avatars/839421874646548530/0c3f5a2ee26def577afe60154cd106cd.webp?size=1024") 
      mus_page3.add_field(name="Skipto",value="Skips to the selected queue number",inline=False) 
      mus_page3.add_field(name="Stop",value="Stops the playing music and clears the queue",inline=False) 
      mus_page3.add_field(name="Song",value="Sends the url of the playing song of mentioned person",inline=False) 
      mus_page3.add_field(name="Track",value="Sends the track of playing song of others",inline=False) 
      mus_page3.add_field(name="uptime",value="Send how much time the music-node is up. Won't work if the music node is down",inline=False) 
      mus_page3.set_footer(text="? help <cmd> to see more details  ─ Page 3 of 3") 
      #search,skipto,stop,uptime,volume
      mus_page2=discord.Embed(
          title="Musics", description="commands that are used to control and play musics", colour=randint(0, 0xffffff))
      mus_page2.set_thumbnail(
          url="https://cdn.discordapp.com/avatars/839421874646548530/0c3f5a2ee26def577afe60154cd106cd.webp?size=1024") 
      mus_page2.add_field(name="Remove",value="Removes song from the queue",inline=False) 
      mus_page2.add_field(name="Queue",value="Shows the music queue and the playing songs. Aliases=[q]",inline=False) 
      mus_page2.add_field(name="Resume",value="Resumes the paused song",inline=False) 
      mus_page2.add_field(name="Shuffle",value="Shuffles the queue",inline=False) 
      mus_page2.add_field(name="Skip",value="Skips the current playing song. Aliases=[s]",inline=False) 
      mus_page2.add_field(name="Search",value="Searches the query and makes us to select any one from the ten options to play music",inline=False) 
      mus_page2.set_footer(text="? help <cmd> to see more details  ─ Page 2 of 3") 

      mus_page1=discord.Embed(
          title="Musics", description="commands that are used to control and play musics", colour=randint(0, 0xffffff))
      mus_page1.set_thumbnail(
          url="https://cdn.discordapp.com/avatars/839421874646548530/0c3f5a2ee26def577afe60154cd106cd.webp?size=1024") 
      mus_page1.add_field(name="loop",value="Loops the current playing song. Aliases=[l]",inline=False) 
      mus_page1.add_field(name="np",value="Shows the song that are playing now",inline=False) 
      mus_page1.add_field(name="Pause",value="Pause the playing song",inline=False) 
      mus_page1.add_field(name="Move",value="Moves the song around in the queue",inline=False) 
      mus_page1.add_field(name="Play",value="Join the voice channel and play the song. Aliases=[p]",inline=False) 
      mus_page1.add_field(name="Playlist",value="Play a playlist from youtube",inline=False) 
      mus_page1.set_footer(text="? help <cmd> to see more details  ─ Page 1 of 3") 



      gam_page2=discord.Embed(
          title="Games", description="commands that are used to  play a mini-games", colour=randint(0, 0xffffff))
      gam_page2.set_thumbnail(
          url="https://cdn.discordapp.com/avatars/839421874646548530/0c3f5a2ee26def577afe60154cd106cd.webp?size=1024") 
      gam_page2.add_field(name="Profile",value="Sends the profile in game",inline=False)    
      gam_page2.add_field(name="Potion",value="Sends the potion count",inline=False)
      gam_page2.add_field(name="Train",value="Trains the soldier",inline=False)
      gam_page2.add_field(name="Train_cost",value="Says the training cost of soldiers",inline=False)
      gam_page2.set_footer(text="? help <cmd> to see more details  ─ Page 2 of 2") 


      gam_page1=discord.Embed(
          title="Games", description="commands that are used to play a mini-games", colour=randint(0, 0xffffff))
      gam_page1.set_thumbnail(
          url="https://cdn.discordapp.com/avatars/839421874646548530/0c3f5a2ee26def577afe60154cd106cd.webp?size=1024") 
      gam_page1.add_field(name="Start",value="Command to start playing this game",inline=False)    
      gam_page1.add_field(name="Beg",value="Used to get small amount of potions(low-probability)",inline=False)   
      gam_page1.add_field(name="Resources",value="Used to get many potions(less probability)",inline=False)   
      gam_page1.add_field(name="Fight",value="Used to attack other players",inline=False)
      gam_page1.add_field(name="Scout",value="Used to scout other player troops",inline=False)  
      gam_page1.set_footer(text="? help <cmd> to see more details  ─ Page 1 of 2")  
             




      giv_page2=discord.Embed(
          title="Giveaways", description="commands that are used to make giveaway in the server", colour=randint(0, 0xffffff))
      giv_page2.set_thumbnail(
          url="https://cdn.discordapp.com/avatars/839421874646548530/0c3f5a2ee26def577afe60154cd106cd.webp?size=1024") 
      giv_page2.add_field(name="Gcreate",value="Creates the giveaway in specified channel",inline=False)
      giv_page2.add_field(name="Grole",value="Set the role to use the giveaway commamds",inline=False)
      giv_page2.add_field(name="Gdrop",value="Drops the giveaway",inline=False)
      giv_page2.set_footer(text="? help <cmd> to see more details  ─ Page 2 of 2") 

      giv_page1=discord.Embed(
          title="Giveaways", description="commands that are used to make giveaway in the server", colour=randint(0, 0xffffff))
      giv_page1.set_thumbnail(
          url="https://cdn.discordapp.com/avatars/839421874646548530/0c3f5a2ee26def577afe60154cd106cd.webp?size=1024")
      giv_page1.add_field(name="Greroll",value="Rerolls the giveaway",inline=False)    
      giv_page1.add_field(name="Gend",value="Ends the giveaway",inline=False)    
      giv_page1.add_field(name="Gstart",value="Starts the quick giveaway in current cchannel",inline=False)
      giv_page1.set_footer(text="? help <cmd> to see more details  ─ Page 1 of 2") 

      mod_page2=discord.Embed(
          title="Moderation", description="commands that are used to moderate the server", colour=randint(0, 0xffffff))
      mod_page2.set_thumbnail(
          url="https://cdn.discordapp.com/avatars/839421874646548530/0c3f5a2ee26def577afe60154cd106cd.webp?size=1024")
      mod_page2.add_field(name="Kick",value="Kick the specified members",inline=False)
      mod_page2.add_field(name="Ban",value="Bans the specified members",inline=False)
      mod_page2.add_field(name="Mute",value="Mutes the specified members by removing all their roles for a specific time",inline=False)
      mod_page2.add_field(name="Unmute",value="Unmutes the specified member",inline=False)
      mod_page2.add_field(name="Unban",value="Unbans the specified member",inline=False)
      mod_page2.add_field(name="Clear",value="Clears the specified number of messages",inline=False)
      mod_page2.add_field(name="Button_role",value="Creates button-roles",inline=False)
      mod_page2.set_footer(text="? help <cmd> to see more details  ─ Page 2 of 2") 

      mod_page1=discord.Embed(
          title="Moderation", description="commands that are used to moderate the server", colour=randint(0, 0xffffff))
      mod_page1.set_thumbnail(
          url="https://cdn.discordapp.com/avatars/839421874646548530/0c3f5a2ee26def577afe60154cd106cd.webp?size=1024")   
      mod_page1.add_field(name="Action_logs",value="Set-up action-logging channel",inline=False)  
      mod_page1.add_field(name="Cancel_action_logs",value="Used to cancel the action logging channel",inline=False) 
      mod_page1.add_field(name="Voice_logs",value="Set-up voice-logging channel",inline=False)  
      mod_page1.add_field(name="Cancel_voice_logs",value="Used to cancel the voice logging channel",inline=False) 
      mod_page1.add_field(name="Check",value="Checks the number of message sent by specific person on specific time",inline=False)   
      mod_page1.add_field(name="Lock",value="Locks the channel for the mentioned role peoples",inline=False)   
      mod_page1.add_field(name="Unlock",value="Unlocks the channel for mentioned role peoples",inline=False)  
      mod_page1.set_footer(text="? help <cmd> to see more details  ─ Page 1 of 2") 



      helps = discord.Embed(
          title="Help", description="Use ``?enable`` and ``?disable`` to disable and enable only commands you want", colour=randint(0, 0xffffff))
      helps.set_thumbnail(
          url="https://cdn.discordapp.com/avatars/839421874646548530/0c3f5a2ee26def577afe60154cd106cd.webp?size=1024")
      helps.add_field(name="Moderation",
                  value="``kick,ban,mute,unmute,unban,clear,button_role,voice_logs,cancel_voice_logs,action_logs,cancel_action_logs,check,lock,unlock``", inline=False)
      helps.add_field(name="Giveaway",
                  value="Warning :Need specific role(fixed by ``grole``) to use.\ncommands:``greroll,gend,gstart,gcreate,grole,gdrop``", inline=False)
      helps.add_field(
          name="Games", value="``start,beg,resources,fight,scout,profile,potion,train,train_cost``", inline=False)
      helps.add_field(name="Musics",value="``loop,move,np,pause,play,playlist,queue,remove,resume,search,shuffle,skip,skipto,stop,uptime,volume,song,track``",inline=False)   
      helps.add_field(
          name="Fun", value="``hand_cricket,ttt,rps,punch,slap,meme,quote,fact_cat,dog,ip,bored,avatar,hack,aki,caki,truth,dare,rip,wanted,count_channel,count_reset,cancel_count,change_count,current_count,eball``", inline=False)
      helps.add_field(name="Utils", value="``custom_command,custom,tag,changeprefix,wikipedia,youtube,calculator,remember,tran,ping,poll,send``", inline=False)    
      helps.add_field(name="Ticket", value="``ticketmention,createticket,closeticket,dropticket``", inline=False)   
      helps.add_field(name="Greetings", value="``set_welcome,set_leave,cancel_welcome,cancel_leave``", inline=False) 
      helps.add_field(name="Others", value="``serverinfo,info,globalchatstart,globalchatstop,fact,emoji,emoji_search,emoji_list,channel_status``", inline=False)    
      helps.add_field(name="Disable-commands", value="``enable,disable``", inline=False)
      helps.set_footer(text="Use ?help <command or category> to understand how to use that")
################################################
      # embed = oth_page2
      # embed.set_footer(text="")
      # embed.title=""
      # embed.description=""
      # await ctx.send(embed=embed)
      
##########################################
      
      mod_pages=[mod_page1,mod_page2]
      giv_pages=[giv_page1,giv_page2]
      gam_pages=[gam_page1,gam_page2]
      mus_pages=[mus_page1,mus_page2,mus_page3]
      fun_pages=[fun_page1,fun_page2,fun_page3,fun_page4]
      uti_pages=[uti_page1,uti_page2]
      tic_pages=[tic_page1,tic_page2]
      gre_pages=[gre_page1,gre_page2]
      oth_pages=[oth_page1,oth_page2]
      all_pages=[mod_pages,giv_pages,gam_pages,mus_pages,fun_pages,uti_pages,tic_pages,gre_pages,oth_pages]
      all_pages_combined=[helps]
      all_pages_combined+=mod_pages+giv_pages+gam_pages+mus_pages+fun_pages+uti_pages+tic_pages+gre_pages+oth_pages
      total_pages=len(all_pages_combined)
      for i in range(total_pages):
        if(i!=0):
          all_pages_combined[i].title="All commands"
          all_pages_combined[i].description="Below are the list of commands of this bot"
        all_pages_combined[i].set_footer(text=f"? help <cmd> to see more details  ─ Page {str(i+1)} of {str(total_pages)}")
      all_pages+=[all_pages_combined]


      mod_pages_copy=[mod_page1_copy,mod_page2_copy]
      giv_pages_copy=[giv_page1_copy,giv_page2_copy]
      gam_pages_copy=[gam_page1_copy,gam_page2_copy]
      mus_pages_copy=[mus_page1_copy,mus_page2_copy,mus_page3_copy]
      fun_pages_copy=[fun_page1_copy,fun_page2_copy,fun_page3_copy,fun_page4_copy]
      uti_pages_copy=[uti_page1_copy,uti_page2_copy]
      tic_pages_copy=[tic_page1_copy,tic_page2_copy]
      gre_pages_copy=[gre_page1_copy,gre_page2_copy]
      oth_pages_copy=[oth_page1_copy,oth_page2_copy]
      all_pages=[mod_pages_copy,giv_pages_copy,gam_pages_copy,mus_pages_copy,fun_pages_copy,uti_pages_copy,tic_pages_copy,gre_pages_copy,oth_pages_copy,all_pages_combined]
      pages=all_pages[9]
      page = 0
      category="All"
      components = [
          [
              Select(
                  placeholder="Select something",
                  options=[
                      SelectOption(label='Moderation', value='Moderation', emoji='🛡️',description="Moderation features of Exploiter",default=False),
                      SelectOption(label='Giveaway', value='Giveaway',description="Commands used to make giveaways", emoji='🎉'),
                      SelectOption(label='Games', value='Games', emoji='🎮',description="Mini-game of Exploiter",default=False),
                      SelectOption(label='Music', value='Music', emoji='🎵',description="Commands to control music",default=False),
                      SelectOption(label='Fun', value='Fun', emoji='😄',description="It contains Mini-games and many features that gives fun",default=False),
                      SelectOption(label='Utils', value='Utils', emoji='🛠️',description="Useful commands to control bot and custom commands",default=False),
                      SelectOption(label='Tickets', value='Tickets', description="Commands to control tickets of Exploiter",emoji='🎫',default=False),
                      SelectOption(label='Greetings', value='Greetings', description="Used to setup greetings for joined and left people",emoji='⚜️',default=False),
                      SelectOption(label='Others', value='Others', description="commands to control and use emojis and some other things",emoji='✨',default=False),
                      SelectOption(label='All', value='All', description="Everything else",emoji='📜',default=True)
                      ],min_values=1,
                max_values=1
              )
          ],
          [
              Button(emoji="⏮️",label=' ', style=ButtonStyle.blue, custom_id='move_to_first',disabled=True),
              Button(emoji="⬅️",label=' ', style=ButtonStyle.blue, custom_id='move_to_back',disabled=True),
              Button(emoji="➡️",label=' ', style=ButtonStyle.blue, custom_id='move_to_next'),
              Button(emoji="⏭️",label=' ', style=ButtonStyle.blue, custom_id='move_to_last')
          ]
      ]

      message = await ctx.send(embed=pages[page], components=components)

      while True:
          try:
              interaction = await self.bot.wait_for(
                  'interaction',
                  check=lambda inter: inter.message.id == message.id,
                  timeout=30
              )
          except asyncio.TimeoutError:
              for row in components:
                  row.disable_components()
              return await message.edit( components=components)

          if interaction.author.id == ctx.author.id:
            pass
          else:
            await interaction.send("Hey! This is not for you!")      



          if isinstance(interaction.component, Select):
            if interaction.author.id == ctx.author.id:
              categories=["Moderation","Giveaway","Games","Music","Fun","Utils","Tickets","Greetings","Others","All"]
              index_before = categories.index(category)
              index_now=categories.index(interaction.values[0])
              category=interaction.values[0]
              components[0][0].options[index_before].default=False
              components[0][0].options[index_now].default=True
              pages=all_pages[index_now]
              # pages=page1
              page=0
              components[1][1].disabled = True
              components[1][0].disabled = True
              components[1][2].disabled=False
              components[1][3].disabled=False
              await interaction.edit_origin(embed=pages[page],components=components)
            else:
              await interaction.send("Hey! This is not for you!")   


          # else:
          if isinstance(interaction.component, Button):
            if interaction.author.id == ctx.author.id:
              if interaction.custom_id=="move_to_first": 
                if(page==len(pages)-1):
                  components[1][2].disabled = False
                  components[1][3].disabled = False
                page=0  
                components[1][1].disabled = True
                components[1][0].disabled = True

              if interaction.custom_id=="move_to_last": 
                if(page==0):
                  components[1][1].disabled = False
                  components[1][0].disabled = False
                page=len(pages)-1 
                components[1][2].disabled = True
                components[1][3].disabled = True  

              if interaction.custom_id == 'move_to_back':
                if page == len(pages)-1:
                    components[1][2].disabled = False
                    components[1][3].disabled = False
                page -= 1
                if page == 0:
                    components[1][1].disabled = True
                    components[1][0].disabled = True
              elif interaction.custom_id == 'move_to_next':
                if page == 0:
                    components[1][1].disabled = False
                    components[1][0].disabled = False
                page += 1
                if page == len(pages)-1:
                    components[1][2].disabled = True
                    components[1][3].disabled = True
              await interaction.edit_origin(embed=pages[page], components=components)
            else:
              await interaction.send("Hey! This is not for you!")   
      
    @help.command()
    @commands.cooldown(1, 3, commands.BucketType.user)
    async def poll(self,ctx):
        em = discord.Embed(
            title="Poll", description="Used to make a poll", colour=randint(0, 0xffffff))
        em.set_thumbnail(
            url="https://cdn.discordapp.com/avatars/839421874646548530/0c3f5a2ee26def577afe60154cd106cd.webp?size=1024")
        em.add_field(
            name="Syntax:", value="?poll <time in mins> <max votes> <Title> <choices......> ", inline=False)
        em.add_field(
            name="Note:", value="1)Time should be greater than 15 minutes\n2)Max votes should not be greater than million\n3)Your title and choices should be within ``double quotes`` otherwise it will consider the text after space as next command", inline=False)  
        em.add_field(
            name="Example:", value='?poll 17 5 "Select your favorite sports" "cricket" "football" "baseball" "volleyball" ', inline=False)      
        await ctx.send(embed=em)   

    @help.command()
    @commands.cooldown(1, 3, commands.BucketType.user)
    async def button_role(self,ctx):#1-blue,2-grey,3-green,4-red
        em = discord.Embed(
            title="Button-Role", description="Used to make button-roles.1-blue,2-grey,3-green,4-red", colour=randint(0, 0xffffff))
        em.set_thumbnail(
            url="https://cdn.discordapp.com/avatars/839421874646548530/0c3f5a2ee26def577afe60154cd106cd.webp?size=1024")
        em.add_field(name="Hint",value="```shell\nAnswer the following questions properly to set the button roles\nIf you gave incorrect values. Set-up will be started  from first. And incorrect emoji-ids will be detected atlast\n```")
                   
        await ctx.send(embed=em)        


    @help.command()
    @commands.cooldown(1, 3, commands.BucketType.user)
    async def createticket(self,ctx):
        em = discord.Embed(
            title="Ticket-Creation", description="Used to create ticket in the specified channel", colour=randint(0, 0xffffff))
        em.set_thumbnail(
            url="https://cdn.discordapp.com/avatars/839421874646548530/0c3f5a2ee26def577afe60154cd106cd.webp?size=1024")
        em.add_field(name="Syntax",value="?createticket <channel to send the ticket msg> <Any argument you want to give as title for the ticket>",inline=False)
        em.add_field(name="Example:",value="?createticket #general Create tickets if you have any query in this server ")   
        em.set_footer(text="Once the people reacts it will create a channel for them only the roles specified in ticket mention and the person reacted can see. Only one ticket can be created in a server") 
        await ctx.send(embed=em)

    @help.command()
    @commands.cooldown(1, 3, commands.BucketType.user)
    async def closeticket(self,ctx):
        em = discord.Embed(
            title="Ticket-closing", description="Used to close the ticket of the mentioned member", colour=randint(0, 0xffffff))
        em.set_thumbnail(
            url="https://cdn.discordapp.com/avatars/839421874646548530/0c3f5a2ee26def577afe60154cd106cd.webp?size=1024")
        em.add_field(name="Syntax",value="?closeticket <member>",inline=False)
        em.add_field(name="Example:",value="?closeticket @never-fall-down ")   
        em.set_footer(text="Note:You should only mention that member not his roles") 
        await ctx.send(embed=em)

    @help.command()
    @commands.cooldown(1, 3, commands.BucketType.user)
    async def ttt(self,ctx):
        em = discord.Embed(
            title="Tic Tac Toe", description="Used to play Tic Tac Toe game", colour=randint(0, 0xffffff))
        em.set_thumbnail(
            url="https://cdn.discordapp.com/avatars/839421874646548530/0c3f5a2ee26def577afe60154cd106cd.webp?size=1024")
        em.add_field(name="Example:1",value="command:``?ttt``-Used to play ttt game with exploiter",inline=False)
        em.add_field(name="Example:2",value="Command: ``?ttt @people`` - Used to play ttt game with mentioned person",inline=False)
        await ctx.send(embed=em)

    @help.command()
    @commands.cooldown(1, 3, commands.BucketType.user)
    async def rps(self,ctx):
        em = discord.Embed(
            title="Rock paper scissor", description="Used to play Rock paper scissor game", colour=randint(0, 0xffffff))
        em.set_thumbnail(
            url="https://cdn.discordapp.com/avatars/839421874646548530/0c3f5a2ee26def577afe60154cd106cd.webp?size=1024")
        em.add_field(name="Example:1",value="command:``?rps``-Used to play rps game with exploiter",inline=False)
        em.add_field(name="Example:2",value="Command: ``?rps @people`` - Used to play rps game with mentioned person",inline=False)
        await ctx.send(embed=em)

    @help.command()
    @commands.cooldown(1, 3, commands.BucketType.user)
    async def hand_cricket(self,ctx):
        em = discord.Embed(
            title="Hand Cricket", description="Used to play Hand Cricket Game", colour=randint(0, 0xffffff))
        em.set_thumbnail(
            url="https://cdn.discordapp.com/avatars/839421874646548530/0c3f5a2ee26def577afe60154cd106cd.webp?size=1024")
        em.add_field(name="Example:1",value="command:``?hand_cricket``-Used to play Hand Cricket game with exploiter",inline=False)
        em.add_field(name="Example:2",value="Command: ``?hand_cricket @people`` - Used to play Hand Cricket game with mentioned person",inline=False)
        await ctx.send(embed=em)

    @help.command()
    @commands.cooldown(1, 3, commands.BucketType.user)
    async def eball(self,ctx):
        em = discord.Embed(
            title="Eight ball", description="Used to play 8 ball game", colour=randint(0, 0xffffff))
        em.set_thumbnail(
            url="https://cdn.discordapp.com/avatars/839421874646548530/0c3f5a2ee26def577afe60154cd106cd.webp?size=1024")
        em.add_field(name="Syntax",value="?eball <qn>",inline=False)
        em.add_field(name="Example:",value="?eball have u voted me? ")   
        await ctx.send(embed=em)


    @help.command()
    @commands.cooldown(1, 3, commands.BucketType.user)
    async def wikipedia(self,ctx):
        em = discord.Embed(
            title="Wikipedia", description="Used to search the query in wikipedia", colour=randint(0, 0xffffff))
        em.set_thumbnail(
            url="https://cdn.discordapp.com/avatars/839421874646548530/0c3f5a2ee26def577afe60154cd106cd.webp?size=1024")
        em.add_field(name="Syntax",value="?wikipedia <query>",inline=False)
        em.add_field(name="Example:",value="?wikipedia Jackiechan")   
        em.set_footer(text="Note: Sends upto upto 3 sentences. All queries won't work/ Try to use different names if it is not working") 
        await ctx.send(embed=em)


    @help.command()
    @commands.cooldown(1, 3, commands.BucketType.user)
    async def youtube(self,ctx):
        em = discord.Embed(
            title="Youtube", description="Search the query in youtube and sends the link", colour=randint(0, 0xffffff))
        em.set_thumbnail(
            url="https://cdn.discordapp.com/avatars/839421874646548530/0c3f5a2ee26def577afe60154cd106cd.webp?size=1024")
        em.add_field(name="Syntax",value="?youtube <query>",inline=False)
        em.add_field(name="Example:",value="?youtube Hello World")   
        em.set_footer(text="Note: sends the link of first result") 
        await ctx.send(embed=em)        

    @help.command()
    @commands.cooldown(1, 3, commands.BucketType.user)
    async def send(self,ctx):
        em = discord.Embed(
            title="Sender", description="This sends your message in embed form", colour=randint(0, 0xffffff))
        em.set_thumbnail(
            url="https://cdn.discordapp.com/avatars/839421874646548530/0c3f5a2ee26def577afe60154cd106cd.webp?size=1024")
        em.add_field(name="Syntax",value="?send <Message you want to send as embed>",inline=False)
        em.add_field(name="Example:",value="?send Hi guys How are you ")   
        em.set_footer(text="Note: Once you use this command your original message will be deleted") 
        await ctx.send(embed=em)


    @help.command()
    @commands.cooldown(1, 3, commands.BucketType.user)
    async def dropticket(self,ctx):
        em = discord.Embed(
            title="Drop-Ticket", description="Used to drop the ticket created in your server", colour=randint(0, 0xffffff))
        em.set_thumbnail(
            url="https://cdn.discordapp.com/avatars/839421874646548530/0c3f5a2ee26def577afe60154cd106cd.webp?size=1024")
        em.set_footer(text="Note:Please delete the ticket embed to avoid confusion in future")    
        em.add_field(name="Command",value="?dropticket",inline=False)
        await ctx.send(embed=em)  

    @help.command()
    @commands.cooldown(1, 3, commands.BucketType.user)
    async def moderation(self,ctx):
        em = discord.Embed(
            title="Moderation", description="Used for moderating people in server", colour=randint(0, 0xffffff))
        em.set_thumbnail(
            url="https://cdn.discordapp.com/avatars/839421874646548530/0c3f5a2ee26def577afe60154cd106cd.webp?size=1024")
        em.add_field(name="Category",value="Moderation",inline=True)
        em.add_field(name="Commands are",value=f"{moderation_available}",inline=False)
        em.set_footer(text="To see how to use each command use ?help <command>")
        await ctx.send(embed=em)
        

    @help.command()
    @commands.cooldown(1, 3, commands.BucketType.user)
    async def giveaway(self,ctx):
        em = discord.Embed(
            title="Giveaway", description="Used to make  giveaway in your server", colour=randint(0, 0xffffff))
        em.set_thumbnail(
            url="https://cdn.discordapp.com/avatars/839421874646548530/0c3f5a2ee26def577afe60154cd106cd.webp?size=1024")
        em.add_field(name="Category",value="Giveaway",inline=True)
        em.add_field(name="Commands are",value=f"{giveaway_available}",inline=False)
        em.set_footer(text="To see how to use each command use ?help <command>")
        await ctx.send(embed=em)

    @help.command()
    @commands.cooldown(1, 3, commands.BucketType.user)
    async def games(self,ctx):
        em = discord.Embed(
            title="Games", description="Used to play a minigame in ur server", colour=randint(0, 0xffffff))
        em.set_thumbnail(
            url="https://cdn.discordapp.com/avatars/839421874646548530/0c3f5a2ee26def577afe60154cd106cd.webp?size=1024")
        em.add_field(name="Category",value="Games",inline=True)
        em.add_field(name="Commands are",value=f"{games_available}",inline=False)
        em.set_footer(text="To see how to use each command use ?help <command>")
        await ctx.send(embed=em)

    @help.command()
    @commands.cooldown(1, 3, commands.BucketType.user)
    async def music(self,ctx):
        em = discord.Embed(
            title="Music", description="Used to control music in server", colour=randint(0, 0xffffff))
        em.set_thumbnail(
            url="https://cdn.discordapp.com/avatars/839421874646548530/0c3f5a2ee26def577afe60154cd106cd.webp?size=1024")
        em.add_field(name="Category",value="Music",inline=True)
        em.add_field(name="Commands are",value=f"{music_available}",inline=False)
        em.set_footer(text="To see how to use each command use ?help <command>")
        await ctx.send(embed=em)        

    @help.command()
    @commands.cooldown(1, 3, commands.BucketType.user)
    async def fun(self,ctx):
        em = discord.Embed(
            title="Fun", description="These commands gives fun ", colour=randint(0, 0xffffff))
        em.set_thumbnail(
            url="https://cdn.discordapp.com/avatars/839421874646548530/0c3f5a2ee26def577afe60154cd106cd.webp?size=1024")
        em.add_field(name="Category",value="Fun",inline=True)
        em.add_field(name="Commands are",value=f"{fun_available}",inline=False)
        em.set_footer(text="To see how to use each command use ?help <command>")
        await ctx.send(embed=em)

    @help.command()
    @commands.cooldown(1, 3, commands.BucketType.user)
    async def utils(self,ctx):
        em = discord.Embed(
            title="Utils", description="These commands are hepful for server people and server moderator for understanding the server", colour=randint(0, 0xffffff))
        em.set_thumbnail(
            url="https://cdn.discordapp.com/avatars/839421874646548530/0c3f5a2ee26def577afe60154cd106cd.webp?size=1024")
        em.add_field(name="Category",value="Utils",inline=True)
        em.add_field(name="Commands are",value=f"{utils_available}",inline=False)
        em.set_footer(text="To see how to use each command use ?help <command>")
        await ctx.send(embed=em)


    @help.command()
    @commands.cooldown(1, 3, commands.BucketType.user)
    async def ticket(self,ctx):
        em = discord.Embed(
            title="Ticket", description="These are ticket commands used to interact with people anonymously", colour=randint(0, 0xffffff))
        em.set_thumbnail(
            url="https://cdn.discordapp.com/avatars/839421874646548530/0c3f5a2ee26def577afe60154cd106cd.webp?size=1024")
        em.add_field(name="Category",value="Ticket",inline=True)
        em.add_field(name="Commands are",value=f"{ticket_available}",inline=False)
        em.set_footer(text="To see how to use each command use ?help <command>")
        await ctx.send(embed=em)    

    @help.command()
    @commands.cooldown(1, 3, commands.BucketType.user)
    async def others(self,ctx):
        em = discord.Embed(
            title="Others", description="These commands make people globally interact with others and used to understand the condition of server", colour=randint(0, 0xffffff))
        em.set_thumbnail(
            url="https://cdn.discordapp.com/avatars/839421874646548530/0c3f5a2ee26def577afe60154cd106cd.webp?size=1024")
        em.add_field(name="Category",value="Others",inline=True)
        em.add_field(name="Commands are",value=f"{others_available}",inline=False)
        em.set_footer(text="To see how to use each command use ?help <command>")
        await ctx.send(embed=em)


    @help.command()
    @commands.cooldown(1, 3, commands.BucketType.user)
    async def enable(self,ctx):
        em = discord.Embed(
            title="Enable", description="Used to enable the disabled commands or category", colour=randint(0, 0xffffff))
        em.set_thumbnail(
            url="https://cdn.discordapp.com/avatars/839421874646548530/0c3f5a2ee26def577afe60154cd106cd.webp?size=1024")
        em.add_field(
            name="Syntax:", value="?enable <command or category>", inline=False)
        em.add_field(name="Categories are",value=f"{modes_available}",inline=False)
        em.add_field(name="Commands are",value=f"{commands_available}.\nSome commands can not be disabled",inline=False)    
        em.add_field(name="Example1:",
                    value="?enable fight", inline=False) 
        em.add_field(name="Example2:",
                    value="?enable moderation", inline=False)
        em.set_footer(text="To see the commands on each categories use ?help <category>")
        await ctx.send(embed=em)

    @help.command()
    @commands.cooldown(1, 3, commands.BucketType.user)
    async def disable(self,ctx):
        em = discord.Embed(
            title="Enable", description="Used to disable the commands or category", colour=randint(0, 0xffffff))
        em.set_thumbnail(
            url="https://cdn.discordapp.com/avatars/839421874646548530/0c3f5a2ee26def577afe60154cd106cd.webp?size=1024")
        em.add_field(
            name="Syntax:", value="?disable <command or category>", inline=False)
        em.add_field(name="Categories are",value=f"{modes_available}",inline=False)
        em.add_field(name="Commands are",value=f"{commands_available}",inline=False)    
        em.add_field(name="Example1:",
                    value="?disable fight", inline=False) 
        em.add_field(name="Example2:",
                    value="?disable moderation", inline=False)
        em.set_footer(text="To see the commands on each categories use ?help <category>")
        await ctx.send(embed=em)


    @help.command()
    @commands.cooldown(1, 3, commands.BucketType.user)
    async def ticketmention(self,ctx):
        em = discord.Embed(
            title="Mentioning a specific role people", description="Used to ping role people once someone created ticket", colour=randint(0, 0xffffff))
        em.set_thumbnail(
            url="https://cdn.discordapp.com/avatars/839421874646548530/0c3f5a2ee26def577afe60154cd106cd.webp?size=1024")
        em.add_field(
            name="Syntax:", value="?ticketmention <roles...>", inline=False)
        em.add_field(name="Example:",
                    value="?ticketmention @owner @mod", inline=False)
        em.set_footer(text="In this way you can add which are the roles to be pinged when someone create ticket")            
        await ctx.send(embed=em)


    @help.command()
    @commands.cooldown(1, 3, commands.BucketType.user)
    async def kick(self,ctx):
        em = discord.Embed(
            title="Kick", description="Kicks a member from the server", colour=randint(0, 0xffffff))
        em.set_thumbnail(
            url="https://cdn.discordapp.com/avatars/839421874646548530/0c3f5a2ee26def577afe60154cd106cd.webp?size=1024")
        em.add_field(
            name="Syntax:", value="?kick <member> <reason for kick(optional)>", inline=False)
        em.add_field(name="Example:",
                    value="?kick @Exploiter checking", inline=False)
        await ctx.send(embed=em)


    @help.command()
    @commands.cooldown(1, 3, commands.BucketType.user)
    async def ban(self,ctx):
        em = discord.Embed(
            title="Ban", description="Bans a member from the server", colour=randint(0, 0xffffff))
        em.set_thumbnail(
            url="https://cdn.discordapp.com/avatars/839421874646548530/0c3f5a2ee26def577afe60154cd106cd.webp?size=1024")
        em.add_field(
            name="Syntax:", value="?ban <member> <reason for ban(optional)>", inline=False)
        em.add_field(name="Example:",
                    value="?ban @Exploiter checking", inline=False)
        await ctx.send(embed=em)


    @help.command()
    @commands.cooldown(1, 3, commands.BucketType.user)
    async def mute(self,ctx):
        em = discord.Embed(
            title="Mute", description="Mutes a member in the server", colour=randint(0, 0xffffff))
        em.set_thumbnail(
            url="https://cdn.discordapp.com/avatars/839421874646548530/0c3f5a2ee26def577afe60154cd106cd.webp?size=1024")
        em.add_field(
            name="Syntax:", value="?mute <(Required time to mute in int)+``s-seconds,m-minutes,h-hours,d-days> <reason for mute(optional)>", inline=False)
        em.add_field(name="Example:",
                    value="?mute 10m @Exploiter checking", inline=False)
        await ctx.send(embed=em)


    @help.command()
    @commands.cooldown(1, 3, commands.BucketType.user)
    async def unmute(self,ctx):
        em = discord.Embed(
            title="Unmute", description="Unmutes a member in the server", colour=randint(0, 0xffffff))
        em.set_thumbnail(
            url="https://cdn.discordapp.com/avatars/839421874646548530/0c3f5a2ee26def577afe60154cd106cd.webp?size=1024")
        em.add_field(
            name="Syntax:", value="?unmute <member>", inline=False)
        em.add_field(name="Example:",
                    value="?unmute @Exploiter", inline=False)
        await ctx.send(embed=em)


    @help.command()
    @commands.cooldown(1, 3, commands.BucketType.user)
    async def unban(self,ctx):
        em = discord.Embed(
            title="Unban", description="Unbans a member in the server", colour=randint(0, 0xffffff))
        em.set_thumbnail(
            url="https://cdn.discordapp.com/avatars/839421874646548530/0c3f5a2ee26def577afe60154cd106cd.webp?size=1024")
        em.add_field(
            name="Syntax:", value="?unban <member> ", inline=False)
        em.add_field(name="Example:",
                    value="?unban @Exploiter", inline=False)
        await ctx.send(embed=em)


    @help.command()
    @commands.cooldown(1, 3, commands.BucketType.user)
    async def clear(self,ctx):
        em = discord.Embed(
            title="Clear", description="Clears the n-number of messages in the channel", colour=randint(0, 0xffffff))
        em.set_thumbnail(
            url="https://cdn.discordapp.com/avatars/839421874646548530/0c3f5a2ee26def577afe60154cd106cd.webp?size=1024")
        em.add_field(
            name="Syntax:", value="?clear <amount of messages to be cleared(optional and default=2)>", inline=False)
        em.add_field(name="Example:",
                    value="?clear 100", inline=False)
        await ctx.send(embed=em)


    @help.command()
    @commands.cooldown(1, 3, commands.BucketType.user)
    async def check(self,ctx):
        em = discord.Embed(
            title="Checking number of messages", description="Used to check the number of messages sent by a specific person on specific channel at a specific time", colour=randint(0, 0xffffff))
        em.set_thumbnail(
            url="https://cdn.discordapp.com/avatars/839421874646548530/0c3f5a2ee26def577afe60154cd106cd.webp?size=1024")
        em.add_field(
            name="Syntax:", value="?check <(integer(only available for day)) <#channel> <member>", inline=False)
        em.add_field(name="Example:",
                    value="?check 7 #chat @LifeOnWheels!#5395", inline=False)
        await ctx.send(embed=em)


    @help.command()
    @commands.cooldown(1, 3, commands.BucketType.user)
    async def gstart(self,ctx):
        em = discord.Embed(
            title="Gstart", description="Starts the give away in the current channel", colour=randint(0, 0xffffff))
        em.set_thumbnail(
            url="https://cdn.discordapp.com/avatars/839421874646548530/0c3f5a2ee26def577afe60154cd106cd.webp?size=1024")
        em.add_field(name="Warning:",
                    value="Need specific role(fixed by ``grole``) to use", inline=False)
        em.add_field(
            name="Syntax:", value="?gstart <(time in int)+``s-seconds,m-minutes,h-hours,d-days``> <(number of winners)+``w``> <prize>", inline=False)
        em.add_field(name="Example:",
                    value="?gstart 1m 1w Coins", inline=False)
        await ctx.send(embed=em)

    @help.command()
    @commands.cooldown(1, 3, commands.BucketType.user)
    async def custom(self,ctx):
        em = discord.Embed(
            title="Custom", description="Used to make custom commands", colour=randint(0, 0xffffff))
        em.set_thumbnail(
            url="https://cdn.discordapp.com/avatars/839421874646548530/0c3f5a2ee26def577afe60154cd106cd.webp?size=1024")
        em.add_field(name="Hint", value="```shell\nWe can make both message and embed custom commands using this command. To create a custom command. Answer each of the following questions once you used ?custom command\n```", inline=False)
        await ctx.send(embed=em)

    @help.command()
    @commands.cooldown(1, 3, commands.BucketType.user)
    async def custom_command(self,ctx):
        em = discord.Embed(
            title="Custom_command", description="Used to see the custom commands in the server", colour=randint(0, 0xffffff))
        em.set_thumbnail(
            url="https://cdn.discordapp.com/avatars/839421874646548530/0c3f5a2ee26def577afe60154cd106cd.webp?size=1024")
        em.add_field(name="command", value="``?custom_command``. To create custom command use ``?custom`` and to use that command use ``?tag <custom_command>``", inline=False)
        await ctx.send(embed=em)
  
    @help.command()
    @commands.cooldown(1, 3, commands.BucketType.user)
    async def tag(self,ctx):
        em = discord.Embed(
            title="Tag", description="Used to call the custom commands that was created in the server", colour=randint(0, 0xffffff))
        em.set_thumbnail(
            url="https://cdn.discordapp.com/avatars/839421874646548530/0c3f5a2ee26def577afe60154cd106cd.webp?size=1024")
        em.add_field(name="Hint", value="```shell\nTo call the custom command. Use ?tag <custom-command>.A server can have a maximum of 25 custom commands\n```", inline=False)
        await ctx.send(embed=em)
  
  
    @help.command()
    @commands.cooldown(1, 3, commands.BucketType.user)
    async def gcreate(self,ctx):
        em = discord.Embed(
            title="Gcreate", description="Starts the give away in the given channel. Once the qns are answered", colour=randint(0, 0xffffff))
        em.set_thumbnail(
            url="https://cdn.discordapp.com/avatars/839421874646548530/0c3f5a2ee26def577afe60154cd106cd.webp?size=1024")
        em.add_field(name="Warning:",
                    value="Need specific role(fixed by ``grole``) to use", inline=False)
        em.add_field(name="Q1 Syntax:",
                    value="<#channel> Eg:``#giveaway``", inline="false")
        em.add_field(name="Q2 Syntax:",
                    value="<(time in int)+``s-seconds,m-minutes,h-hours,d-days``> Eg:``10m``", inline=False)
        em.add_field(name="Q3 Syntax:",
                    value="<Number of winners>. Eg:``2``", inline=False)
        em.add_field(name="Q4 Syntax:",
                    value="<prize of giveaway> Eg:``Coins``", inline=False)
        await ctx.send(embed=em)


    @help.command()
    @commands.cooldown(1, 3, commands.BucketType.user)
    async def set_welcome(self,ctx):
        em = discord.Embed(
            title="Welcome-Set-up", description="Used to setup welcome page when someone join your server", colour=randint(0, 0xffffff))
        em.set_thumbnail(
            url="https://cdn.discordapp.com/avatars/839421874646548530/0c3f5a2ee26def577afe60154cd106cd.webp?size=1024")
        em.add_field(name="Warning:",
                    value="if you need to cancel that welcome page. Use ``?cancel_welcome``", inline=False)
        em.add_field(name="Q1 Syntax:",
                    value="<#channel> Eg:``#welcome``", inline="false")
        em.add_field(name="Q2 Syntax:",
                    value="<Any message you want> Eg:``Welcome to our server``", inline=False)
        em.set_footer(text="Note:It will automatically mention the new joiners and then your msg will be added with it. \nUse ?cancel_welcome to cancel this welcome page")
        await ctx.send(embed=em)

    @help.command()
    @commands.cooldown(1, 3, commands.BucketType.user)
    async def set_leave(self,ctx):
        em = discord.Embed(
            title="Leave-Page-Set-up", description="Used to setup the leaver's page who left your server", colour=randint(0, 0xffffff))
        em.set_thumbnail(
            url="https://cdn.discordapp.com/avatars/839421874646548530/0c3f5a2ee26def577afe60154cd106cd.webp?size=1024")
        em.add_field(name="Warning:",
                    value="if you need to cancel that leave page. Use ``?cancel_leave``", inline=False)
        em.add_field(name="Q1 Syntax:",
                    value="<#channel> Eg:``#leave``", inline="false")
        em.add_field(name="Q2 Syntax:",
                    value="<Any message you want> Eg:``Bye man hope we see you soon``", inline=False)
        em.set_footer(text="Note:It will automatically mention the leaving people once they leave and then your msg will be added with it.\nUse ?cancel_leave to cancel the leave page")
        await ctx.send(embed=em)


    @help.command()
    @commands.cooldown(1, 3, commands.BucketType.user)
    async def remember(self,ctx):
        em = discord.Embed(
            title="Remember", description="Used to remember any tasks", colour=randint(0, 0xffffff))
        em.set_thumbnail(
            url="https://cdn.discordapp.com/avatars/839421874646548530/0c3f5a2ee26def577afe60154cd106cd.webp?size=1024")
        em.add_field(name="Command:",
                    value="``?remember``", inline=False)
        em.add_field(name="Q1 Syntax:",
                    value="<%yyyy/%mm/%dd hh:mm:ss> Eg:``2021-11-09 23:50:41``", inline="false")
        em.add_field(name="Q2 Syntax:",
                    value="``<Any tasks you want to remind>`` Eg:``My friend's birthday``", inline=False)
        em.add_field(name="Q3 Syntax:",
                    value="``<Ping the people whom you want to remind>`` Eg:``@EXPLOITER @OWNER``", inline=False) 
        em.set_footer(text="Note: Enter the time in 24hrs format and you can only schedule future tasks")                       
        await ctx.send(embed=em)

    @help.command()
    @commands.cooldown(1, 3, commands.BucketType.user)
    async def greroll(self,ctx):
        em = discord.Embed(
            title="Greroll", description="Reroll the ended giveaway", colour=randint(0, 0xffffff))
        em.set_thumbnail(
            url="https://cdn.discordapp.com/avatars/839421874646548530/0c3f5a2ee26def577afe60154cd106cd.webp?size=1024")
        em.add_field(name="Warning:",
                    value="Need specific role(fixed by ``grole``) to use", inline=False)
        em.add_field(
            name="Syntax:", value="?greroll <#channel-name in which the giveaway ended> <id of the ended giveaway>", inline=False)
        em.add_field(name="Example:",
                    value="?greroll #giveaway 897425147110232094", inline=False)
        await ctx.send(embed=em)


    @help.command()
    @commands.cooldown(1, 3, commands.BucketType.user)
    async def gend(self,ctx):
        em = discord.Embed(
            title="Gend", description="Ends the active giveaway", colour=randint(0, 0xffffff))
        em.set_thumbnail(
            url="https://cdn.discordapp.com/avatars/839421874646548530/0c3f5a2ee26def577afe60154cd106cd.webp?size=1024")
        em.add_field(name="Warning:",
                    value="Need specific role(fixed by ``grole``) to use", inline=False)
        em.add_field(
            name="Syntax:", value="?gend <#channel-name in which the giveaway is going> <id of the active giveaway>", inline=False)
        em.add_field(name="Example:",
                    value="?gend #giveaway 897425147110232094", inline=False)
        await ctx.send(embed=em)

    @help.command()
    @commands.cooldown(1, 3, commands.BucketType.user)
    async def gdrop(self,ctx):
        em = discord.Embed(
            title="Gdrop", description="Used to drop the giveaway", colour=randint(0, 0xffffff))
        em.set_thumbnail(
            url="https://cdn.discordapp.com/avatars/839421874646548530/0c3f5a2ee26def577afe60154cd106cd.webp?size=1024")
        em.add_field(name="Warning:",
                    value="Need specific role(fixed by ``grole``) to use", inline=False)
        em.add_field(
            name="Syntax:", value="?gdrop <#channel-name in which the giveaway is going> <id of the active giveaway>", inline=False)
        em.add_field(name="Example:",
                    value="?gdrop #giveaway 897425147110232094", inline=False)
        await ctx.send(embed=em)

    @help.command()
    @commands.cooldown(1, 3, commands.BucketType.user)
    async def grole(self,ctx):
        em = discord.Embed(
            title="Grole", description="Use this command to fix a role for the giveaway", colour=randint(0, 0xffffff))
        em.set_thumbnail(
            url="https://cdn.discordapp.com/avatars/839421874646548530/0c3f5a2ee26def577afe60154cd106cd.webp?size=1024")
        em.add_field(name="Syntax:",
                    value="``?grole<@specific_role>``", inline=False) 
        em.add_field(name="Example:",
                    value="``?grole @giveaway``", inline=False)
        await ctx.send(embed=em)

    @help.command()
    @commands.cooldown(1, 3, commands.BucketType.user)
    async def start(self,ctx):
        em = discord.Embed(
            title="Start", description="Use this command to start playing the games", colour=randint(0, 0xffffff))
        em.set_thumbnail(
            url="https://cdn.discordapp.com/avatars/839421874646548530/0c3f5a2ee26def577afe60154cd106cd.webp?size=1024")
        em.add_field(name="Command:",
                    value="``?start``", inline=False)
        await ctx.send(embed=em)


    @help.command()
    @commands.cooldown(1, 3, commands.BucketType.user)
    async def beg(self,ctx):
        em = discord.Embed(
            title="Beg", description="Use this command to get training potion(Less amount high probability)", colour=randint(0, 0xffffff))
        em.set_thumbnail(
            url="https://cdn.discordapp.com/avatars/839421874646548530/0c3f5a2ee26def577afe60154cd106cd.webp?size=1024")
        em.add_field(name="Command:",
                    value="``?beg``", inline=False)
        await ctx.send(embed=em)


    @help.command()
    @commands.cooldown(1, 3, commands.BucketType.user)
    async def resources(self,ctx):
        em = discord.Embed(
            title="Resources", description="Use this command to get training potion(Higher amount less probability)", colour=randint(0, 0xffffff))
        em.set_thumbnail(
            url="https://cdn.discordapp.com/avatars/839421874646548530/0c3f5a2ee26def577afe60154cd106cd.webp?size=1024")
        em.add_field(name="Command:",
                    value="``?resources``", inline=False)
        await ctx.send(embed=em)


    @help.command()
    @commands.cooldown(1, 3, commands.BucketType.user)
    async def fight(self,ctx):
        em = discord.Embed(
            title="Fight", description="Use this command to attack other players and gain potions", colour=randint(0, 0xffffff))
        em.set_thumbnail(
            url="https://cdn.discordapp.com/avatars/839421874646548530/0c3f5a2ee26def577afe60154cd106cd.webp?size=1024")
        em.add_field(name="Syntax:",
                    value="?fight <Tag other player>", inline=False)
        em.add_field(name="Example:",
                    value="``?fight @EXPLOITER#6889``", inline=False)
        await ctx.send(embed=em)


    @help.command()
    @commands.cooldown(1, 3, commands.BucketType.user)
    async def scout(self,ctx):
        em = discord.Embed(
            title="Scout", description="Used to scout other players might,potions and troop count", colour=randint(0, 0xffffff))
        em.set_thumbnail(
            url="https://cdn.discordapp.com/avatars/839421874646548530/0c3f5a2ee26def577afe60154cd106cd.webp?size=1024")
        em.add_field(name="Syntax:",
                    value="?scout <Tag other player>", inline=False)
        em.add_field(name="Example:",
                    value="``?scout @EXPLOITER#6889``", inline=False)
        await ctx.send(embed=em)


    @help.command()
    @commands.cooldown(1, 3, commands.BucketType.user)
    async def profile(self,ctx):
        em = discord.Embed(
            title="Profile", description="Used to see our troops, might and potions count and enemies might", colour=randint(0, 0xffffff))
        em.set_thumbnail(
            url="https://cdn.discordapp.com/avatars/839421874646548530/0c3f5a2ee26def577afe60154cd106cd.webp?size=1024")
        em.add_field(
            name="Type1:", value="``?profile``- Sends our troops,potion and might total in dm. If it is blocked it will send in the channel", inline=False)
        em.add_field(name="Type2:",
                    value="?profile <Tag others> Eg:``?profile @EXPLOITER#6889``. Sends enemy might", inline=False)
        await ctx.send(embed=em)

    @help.command()
    @commands.cooldown(1, 3, commands.BucketType.user)
    async def song(self,ctx):
        em = discord.Embed(
            title="Song", description="It sends the url of the spotify song if playing", colour=randint(0, 0xffffff))
        em.set_thumbnail(
            url="https://cdn.discordapp.com/avatars/839421874646548530/0c3f5a2ee26def577afe60154cd106cd.webp?size=1024")
        em.add_field(
            name="Type1:", value="``?song``- Sends the url of your playing song", inline=False)
        em.add_field(name="Type2:",
                    value="?song <Tag others> Eg:``?song @EXPLOITER#6889``. Sends the url of the playing song of exploiter", inline=False)
        await ctx.send(embed=em)

    @help.command()
    @commands.cooldown(1, 3, commands.BucketType.user)
    async def track(self,ctx):
        em = discord.Embed(
            title="Track", description="Just send the photo of track of the playing song", colour=randint(0, 0xffffff))
        em.set_thumbnail(
            url="https://cdn.discordapp.com/avatars/839421874646548530/0c3f5a2ee26def577afe60154cd106cd.webp?size=1024")
        em.add_field(
            name="Type1:", value="``?track``- Sends your playing song photo", inline=False)
        em.add_field(name="Type2:",
                    value="?track <Tag others> Eg:``?track @EXPLOITER#6889``. Sends the photo of track of playing song of the tagged member", inline=False)
        await ctx.send(embed=em)        



    @help.command()
    @commands.cooldown(1, 3, commands.BucketType.user)
    async def rip(self,ctx):
        em = discord.Embed(
            title="RIP :skull_crossbones: :skull_crossbones:", description="Used to make rip images of others", colour=randint(0, 0xffffff))
        em.set_thumbnail(
            url="https://cdn.discordapp.com/avatars/839421874646548530/0c3f5a2ee26def577afe60154cd106cd.webp?size=1024")
        em.add_field(
            name="Type1:", value="``?rip``- Sends your rip image", inline=False)
        em.add_field(name="Type2:",
                    value="?profile <Tag others> Eg:``?rip @EXPLOITER#6889``. Sends the rip image of EXPLOITER", inline=False)
        await ctx.send(embed=em)

    @help.command()
    @commands.cooldown(1, 3, commands.BucketType.user)
    async def wanted(self,ctx):
        em = discord.Embed(
            title="Wanted :moneybag: :moneybag:", description="Sends the wanted poster", colour=randint(0, 0xffffff))
        em.set_thumbnail(
            url="https://cdn.discordapp.com/avatars/839421874646548530/0c3f5a2ee26def577afe60154cd106cd.webp?size=1024")
        em.add_field(
            name="Type1:", value="``?wanted``- Sends the wanted poster of you", inline=False)
        em.add_field(name="Type2:",
                    value="?wanted <Tag others> Eg:``?wanted @EXPLOITER#6889``. Sends the wanted poster of EXPLOITER", inline=False)
        await ctx.send(embed=em)        



    @help.command()
    @commands.cooldown(1, 3, commands.BucketType.user)
    async def info(self,ctx):
        em = discord.Embed(
            title="Information of Members", description="Used to get the information of the mentioned user", colour=randint(0, 0xffffff))
        em.set_thumbnail(
            url="https://cdn.discordapp.com/avatars/839421874646548530/0c3f5a2ee26def577afe60154cd106cd.webp?size=1024")
        em.add_field(
            name="Type1:", value="``?info``- Sends the information of the author", inline=False)
        em.add_field(name="Type2:",
                    value="?info <Mention people whose inf u want to know> Eg:``?info @EXPLOITER#6889``. Sends the mentioned people information", inline=False)
        await ctx.send(embed=em)


    @help.command()
    @commands.cooldown(1, 3, commands.BucketType.user)
    async def tran(self,ctx):
        em = discord.Embed(
            title="Translator", description="Used to translate message in our required language", colour=randint(0, 0xffffff))
        em.set_thumbnail(
            url="https://cdn.discordapp.com/avatars/839421874646548530/0c3f5a2ee26def577afe60154cd106cd.webp?size=1024")
        em.add_field(
            name="Type1:", value="``?tran <lang> <msg>``- Translates the message", inline=False)
        em.add_field(
            name="Example:", value="``?tran en Guten Morgen`` -Output: Good Morning", inline=False)    
        em.add_field(name="Type2:",
                    value="``?tran <lang> <msg id>``- Translates the content of the msg id", inline=False)
        em.add_field(
            name="Example:", value="``?tran en 906530461784866826``", inline=False) 
        em.set_footer(text="You can refer the below file to translate to any of the languages that is available")             
        await ctx.send(embed=em)
        await ctx.send(file=discord.File(".//assets//trans_prefix.txt"))

    @help.command()
    @commands.cooldown(1, 3, commands.BucketType.user)
    async def potion(self,ctx):
        em = discord.Embed(
            title="Potion", description="Used to see our potion count", colour=randint(0, 0xffffff))
        em.set_thumbnail(
            url="https://cdn.discordapp.com/avatars/839421874646548530/0c3f5a2ee26def577afe60154cd106cd.webp?size=1024")
        em.add_field(name="Command:",
                    value="``?potion``", inline=False)
        await ctx.send(embed=em)


    @help.command()
    @commands.cooldown(1, 3, commands.BucketType.user)
    async def train(self,ctx):
        em = discord.Embed(
            title="Train", description="Used to train troops from tier 1-3", colour=randint(0, 0xffffff))
        em.set_thumbnail(
            url="https://cdn.discordapp.com/avatars/839421874646548530/0c3f5a2ee26def577afe60154cd106cd.webp?size=1024")
        em.add_field(name="Syntax:",
                    value="?train <tier> <amount>", inline=False)
        em.add_field(name="Example:", value="``?train 3 1000``")
        await ctx.send(embed=em)


    @help.command()
    @commands.cooldown(1, 3, commands.BucketType.user)
    async def train_cost(self,ctx):
        em = discord.Embed(
            title="Cost and Might of troops", description="Use this command to see the troops might and cost of training", colour=randint(0, 0xffffff))
        em.set_thumbnail(
            url="https://cdn.discordapp.com/avatars/839421874646548530/0c3f5a2ee26def577afe60154cd106cd.webp?size=1024")
        em.add_field(name="Command:",
                    value="``?train_cost``", inline=False)
        await ctx.send(embed=em)




    @help.command()
    @commands.cooldown(1, 3, commands.BucketType.user)
    async def cancel_voice_logs(self,ctx):
        em = discord.Embed(
            title="Cancelling voice logs", description="Use this to cancel voice loging", colour=randint(0, 0xffffff))
        em.set_thumbnail(
            url="https://cdn.discordapp.com/avatars/839421874646548530/0c3f5a2ee26def577afe60154cd106cd.webp?size=1024")
        em.add_field(name="Command:",
                    value="``?cancel_voice_logs``", inline=False)
        await ctx.send(embed=em)

    @help.command()
    @commands.cooldown(1, 3, commands.BucketType.user)
    async def cancel_action_logs(self,ctx):
        em = discord.Embed(
            title="Cancelling action logging", description="Used to cancel the action log", colour=randint(0, 0xffffff))
        em.set_thumbnail(
            url="https://cdn.discordapp.com/avatars/839421874646548530/0c3f5a2ee26def577afe60154cd106cd.webp?size=1024")
        em.add_field(name="Command:",
                    value="``?cancel_action_logs``", inline=False)
        await ctx.send(embed=em)



    @help.command()
    @commands.cooldown(1, 3, commands.BucketType.user)
    async def fact(self,ctx):
        em = discord.Embed(
            title="Facts", description="Sends a random facte", colour=randint(0, 0xffffff))
        em.set_thumbnail(
            url="https://cdn.discordapp.com/avatars/839421874646548530/0c3f5a2ee26def577afe60154cd106cd.webp?size=1024")
        em.add_field(name="Command:",
                    value="``?fact``", inline=False)
        await ctx.send(embed=em)

    @help.command()
    @commands.cooldown(1, 3, commands.BucketType.user)
    async def unlock(self,ctx):
        em = discord.Embed(
            title="Unlocks channel", description="Used to unlocks the channel that is locked", colour=randint(0, 0xffffff))
        em.set_thumbnail(
            url="https://cdn.discordapp.com/avatars/839421874646548530/0c3f5a2ee26def577afe60154cd106cd.webp?size=1024")
        em.add_field(name="Syntax:",
                    value="``?unlock <#channel> <@role-1 @role-2....>``", inline=False)
        em.add_field(name="Example:",
                    value="``?unlock #chat @members @staffs``", inline=False)            
        em.set_footer(text="Remember if you didn't mentioned any roles it will unlock the default role i.e) @everyone")            
        await ctx.send(embed=em)


    @help.command()
    @commands.cooldown(1, 3, commands.BucketType.user)
    async def lock(self,ctx):
        em = discord.Embed(
            title="Locks channel", description="Used to lock to prevent mentioned roles from messaging", colour=randint(0, 0xffffff))
        em.set_thumbnail(
            url="https://cdn.discordapp.com/avatars/839421874646548530/0c3f5a2ee26def577afe60154cd106cd.webp?size=1024")
        em.add_field(name="Syntax:",
                    value="``?lock <#channel> <@role-1 @role-2....>``", inline=False)
        em.add_field(name="Example:",
                    value="``?lock #chat @members @staffs``", inline=False)            
        em.set_footer(text="Remember if you didn't mentioned any roles it will lock the default role i.e) @everyone")            
        await ctx.send(embed=em)


    @help.command()
    @commands.cooldown(1, 3, commands.BucketType.user)
    async def current_count(self,ctx):
        em = discord.Embed(
            title="Current_count", description="Sends the last count in the counting channel", colour=randint(0, 0xffffff))
        em.set_thumbnail(
            url="https://cdn.discordapp.com/avatars/839421874646548530/0c3f5a2ee26def577afe60154cd106cd.webp?size=1024")
        em.add_field(name="Command:",
                    value="``?current_count``", inline=False)
        await ctx.send(embed=em)

    @help.command()
    @commands.cooldown(1, 3, commands.BucketType.user)
    async def stop(self,ctx):
        em = discord.Embed(
            title="Stop", description="Use this command to stop the music and clears the queue", colour=randint(0, 0xffffff))
        em.set_thumbnail(
            url="https://cdn.discordapp.com/avatars/839421874646548530/0c3f5a2ee26def577afe60154cd106cd.webp?size=1024")
        em.add_field(name="Command:",
                    value="``?stop``", inline=False)
        em.set_footer(text="Once you used this command the bot will automatically leave in few seconds")            
        await ctx.send(embed=em)

    @help.command()
    @commands.cooldown(1, 3, commands.BucketType.user)
    async def changeprefix(self,ctx):
        em = discord.Embed(
            title="Changes prefix", description="Used to change the prefix of the bot in ur server", colour=randint(0, 0xffffff))
        em.set_thumbnail(
            url="https://cdn.discordapp.com/avatars/839421874646548530/0c3f5a2ee26def577afe60154cd106cd.webp?size=1024")
        em.add_field(name="Syntax:",
                    value="``?changeprefix <new prefix>``", inline=False)
        em.add_field(name="Command:",
                    value="``?changeprefix !``-changes prefix from ? to !", inline=False)            
        await ctx.send(embed=em)

    @help.command()
    @commands.cooldown(1, 3, commands.BucketType.user)
    async def meme(self,ctx):
        em = discord.Embed(
            title="Meme", description="Sends a random meme", colour=randint(0, 0xffffff))
        em.set_thumbnail(
            url="https://cdn.discordapp.com/avatars/839421874646548530/0c3f5a2ee26def577afe60154cd106cd.webp?size=1024")
        em.add_field(name="Command:",
                    value="``?meme``", inline=False)
        await ctx.send(embed=em)

    @help.command()
    @commands.cooldown(1, 3, commands.BucketType.user)
    async def calculator(self,ctx):
        em = discord.Embed(
            title="calculator", description="Sends a calculator full of buttons which you can interact", colour=randint(0, 0xffffff))
        em.set_thumbnail(
            url="https://cdn.discordapp.com/avatars/839421874646548530/0c3f5a2ee26def577afe60154cd106cd.webp?size=1024")
        em.add_field(name="Command:",
                    value="``?calculator``", inline=False)
        em.set_footer(text="It has both normal and scientific calculator!")            
        await ctx.send(embed=em)    

    @help.command()
    @commands.cooldown(1, 3, commands.BucketType.user)
    async def command(self,ctx):
        em = discord.Embed(
            title="Commands", description="Shows the commands available", colour=randint(0, 0xffffff))
        em.set_thumbnail(
            url="https://cdn.discordapp.com/avatars/839421874646548530/0c3f5a2ee26def577afe60154cd106cd.webp?size=1024")
        em.add_field(name="Commands:",
                    value=f"{commands_available}", inline=False)
        em.set_footer(text="To know how to use each command use ?help <command>")            
        await ctx.send(embed=em)

    @help.command()
    @commands.cooldown(1, 3, commands.BucketType.user)
    async def category(self,ctx):
        em = discord.Embed(
            title="Category", description="Shows the categories that are available", colour=randint(0, 0xffffff))
        em.set_thumbnail(
            url="https://cdn.discordapp.com/avatars/839421874646548530/0c3f5a2ee26def577afe60154cd106cd.webp?size=1024")
        em.add_field(name="Categories:",
                    value=f"{modes_available}", inline=False)
        em.set_footer(text="To know how to use each command use ?help <command>")                 
        await ctx.send(embed=em)


    @help.command()
    @commands.cooldown(1, 3, commands.BucketType.user)
    async def globalchatstart(self,ctx):
        em = discord.Embed(
            title="Global-Chat-Starter", description="Starts the global chat in the specified channel", colour=randint(0, 0xffffff))
        em.set_thumbnail(
            url="https://cdn.discordapp.com/avatars/839421874646548530/0c3f5a2ee26def577afe60154cd106cd.webp?size=1024")
        em.add_field(name="Syntax:",
                    value="``?globalchatstart <channel where you want to start global chat>``", inline=False)
        em.add_field(name="Value:",
                    value="``?globalchatstart #global-chat``-It starts the global chat in the #global-chat channel", inline=False)                    
        await ctx.send(embed=em)    

    @help.command()
    @commands.cooldown(1, 3, commands.BucketType.user)
    async def globalchatstop(self,ctx):
        em = discord.Embed(
            title="Global-Chat-Stop", description="Stops the global-chat in your server", colour=randint(0, 0xffffff))
        em.set_thumbnail(
            url="https://cdn.discordapp.com/avatars/839421874646548530/0c3f5a2ee26def577afe60154cd106cd.webp?size=1024")
        em.add_field(name="Command:",
                    value="``?globalchatstop``", inline=False)
        await ctx.send(embed=em)            


    @help.command()
    @commands.cooldown(1, 3, commands.BucketType.user)
    async def cancel_welcome(self,ctx):
        em = discord.Embed(
            title="Cancel-Welcome", description="Used to cancel the welcome page", colour=randint(0, 0xffffff))
        em.set_thumbnail(
            url="https://cdn.discordapp.com/avatars/839421874646548530/0c3f5a2ee26def577afe60154cd106cd.webp?size=1024")
        em.add_field(name="Command:",
                    value="``?cancel_welcome``", inline=False)
        await ctx.send(embed=em)


    @help.command()
    @commands.cooldown(1, 3, commands.BucketType.user)
    async def cancel_leave(self,ctx):
        em = discord.Embed(
            title="Cancelling-leave", description="Used to cancel the leave page", colour=randint(0, 0xffffff))
        em.set_thumbnail(
            url="https://cdn.discordapp.com/avatars/839421874646548530/0c3f5a2ee26def577afe60154cd106cd.webp?size=1024")
        em.add_field(name="Command:",
                    value="``?cancel_leave``", inline=False)
        await ctx.send(embed=em)        



    @help.command()
    @commands.cooldown(1, 3, commands.BucketType.user)
    async def serverinfo(self,ctx):
        em = discord.Embed(
            title="Server Info", description="Sends many information about the server", colour=randint(0, 0xffffff))
        em.set_thumbnail(
            url="https://cdn.discordapp.com/avatars/839421874646548530/0c3f5a2ee26def577afe60154cd106cd.webp?size=1024")
        em.add_field(name="Command:",
                    value="``?serverinfo``", inline=False)
        await ctx.send(embed=em)        

    @help.command()
    @commands.cooldown(1, 3, commands.BucketType.user)
    async def ping(self,ctx):
        em = discord.Embed(
            title="Ping", description="Shows the bot latency", colour=randint(0, 0xffffff))
        em.set_thumbnail(
            url="https://cdn.discordapp.com/avatars/839421874646548530/0c3f5a2ee26def577afe60154cd106cd.webp?size=1024")
        em.add_field(name="Command:",
                    value="``?ping``", inline=False)
        await ctx.send(embed=em)


    @help.command()
    @commands.cooldown(1, 3, commands.BucketType.user)
    async def fact_cat(self,ctx):
        em = discord.Embed(
            title="Cat facts", description="Sends a random fact about cat", colour=randint(0, 0xffffff))
        em.set_thumbnail(
            url="https://cdn.discordapp.com/avatars/839421874646548530/0c3f5a2ee26def577afe60154cd106cd.webp?size=1024")
        em.add_field(name="Command:",
                    value="``?fact_cat``", inline=False)
        await ctx.send(embed=em)  

    @help.command()
    @commands.cooldown(1, 3, commands.BucketType.user)
    async def dog(self,ctx):
        em = discord.Embed(
            title="Dog", description="Sends a random dog photo", colour=randint(0, 0xffffff))
        em.set_thumbnail(
            url="https://cdn.discordapp.com/avatars/839421874646548530/0c3f5a2ee26def577afe60154cd106cd.webp?size=1024")
        em.add_field(name="Command:",
                    value="``?dog``", inline=False)
        await ctx.send(embed=em)    


    @help.command()
    @commands.cooldown(1, 3, commands.BucketType.user)
    async def bored(self,ctx):
        em = discord.Embed(
            title="Bored", description="Tells some tasks to do to prevent booooooring :sleepy: :sleepy:", colour=randint(0, 0xffffff))
        em.set_thumbnail(
            url="https://cdn.discordapp.com/avatars/839421874646548530/0c3f5a2ee26def577afe60154cd106cd.webp?size=1024")
        em.add_field(name="Command:",
                    value="``?bored``", inline=False)
        await ctx.send(embed=em)    

    @help.command()
    @commands.cooldown(1, 3, commands.BucketType.user)
    async def ip(self,ctx):
        em = discord.Embed(
            title="Ip", description="Used to find the landmark near the ip address", colour=randint(0, 0xffffff))
        em.set_thumbnail(
            url="https://cdn.discordapp.com/avatars/839421874646548530/0c3f5a2ee26def577afe60154cd106cd.webp?size=1024")
        em.add_field(name="Syntax:",
                    value="Command: ``?ip 117.200.149.23`` -Sends the landmark near the ip address. \nNote:ip-address will be in the above example format.You can change the interger to find the landmark near that ip address ", inline=False)
        await ctx.send(embed=em)         


    @help.command()
    @commands.cooldown(1, 3, commands.BucketType.user)
    async def hack(self,ctx):
        em = discord.Embed(
            title="Hacking", description="Used to hack others", colour=randint(0, 0xffffff))
        em.set_thumbnail(
            url="https://cdn.discordapp.com/avatars/839421874646548530/0c3f5a2ee26def577afe60154cd106cd.webp?size=1024")
        em.add_field(name="Syntax:",
                    value="Command: ``?hack @EXPLOITER#6889`` -Sends some hacking messages", inline=False)
        await ctx.send(embed=em)

    
    @help.command()
    @commands.cooldown(1, 3, commands.BucketType.user)
    async def slap(self,ctx):
        em = discord.Embed(
            title="Slap", description="Used to slap others", colour=randint(0, 0xffffff))
        em.set_thumbnail(
            url="https://cdn.discordapp.com/avatars/839421874646548530/0c3f5a2ee26def577afe60154cd106cd.webp?size=1024")
        em.add_field(name="Syntax:",
                    value="Command: ``?slap @DANKMEMER`` -Slaps Dank Memer", inline=False)
        await ctx.send(embed=em)    

    @help.command()
    @commands.cooldown(1, 3, commands.BucketType.user)
    async def punch(self,ctx):
        em = discord.Embed(
            title="Punch", description="Used to punch others", colour=randint(0, 0xffffff))
        em.set_thumbnail(
            url="https://cdn.discordapp.com/avatars/839421874646548530/0c3f5a2ee26def577afe60154cd106cd.webp?size=1024")
        em.add_field(name="Syntax:",
                    value="Command: ``?punch @DANKMEMER`` -punches Dank Memer", inline=False)
        await ctx.send(embed=em)        

    @help.command()
    @commands.cooldown(1, 3, commands.BucketType.user)
    async def quote(self,ctx):
        em = discord.Embed(
            title="Quote", description="Sends the quote randomly and for each day", colour=randint(0, 0xffffff))
        em.set_thumbnail(
            url="https://cdn.discordapp.com/avatars/839421874646548530/0c3f5a2ee26def577afe60154cd106cd.webp?size=1024")
        em.add_field(name="Type 1:",
                    value="Command: ``?quote`` -Sends a random quote", inline=False)
        em.add_field(name="Type 2:",
                    value="Command: ``?quote today`` -Sends the quote of today", inline=False)
        await ctx.send(embed=em)


    @help.command()
    @commands.cooldown(1, 3, commands.BucketType.user)
    async def invite(self,ctx):
        em = discord.Embed(
            title="Invite", description="Sends the invite link of the bot", colour=randint(0, 0xffffff))
        em.set_thumbnail(
            url="https://cdn.discordapp.com/avatars/839421874646548530/0c3f5a2ee26def577afe60154cd106cd.webp?size=1024")
        em.add_field(name="Command:",
                    value="``?invite``", inline=False)
        await ctx.send(embed=em)

    @help.command()
    @commands.cooldown(1, 3, commands.BucketType.user)
    async def vote(self,ctx):
        em = discord.Embed(
            title="Upvote", description="Sends the upvote link for the bot", colour=randint(0, 0xffffff))
        em.set_thumbnail(
            url="https://cdn.discordapp.com/avatars/839421874646548530/0c3f5a2ee26def577afe60154cd106cd.webp?size=1024")
        em.add_field(name="Command:",
                    value="``?vote``", inline=False)
        await ctx.send(embed=em)


    @help.command()
    @commands.cooldown(1, 3, commands.BucketType.user)
    async def close(self,ctx):
        em = discord.Embed(
            title="Close", description="Used to close the bot for updates(Only available for developers)", colour=randint(0, 0xffffff))
        em.set_thumbnail(
            url="https://cdn.discordapp.com/avatars/839421874646548530/0c3f5a2ee26def577afe60154cd106cd.webp?size=1024")
        em.add_field(name="Command:",
                    value="``?close``", inline=False)
        await ctx.send(embed=em)


    @help.command()
    @commands.cooldown(1, 3, commands.BucketType.user)
    async def avatar(self,ctx):
        em = discord.Embed(
            title="Avatar", description="Sends the avatar of required one link", colour=randint(0, 0xffffff))
        em.set_thumbnail(
            url="https://cdn.discordapp.com/avatars/839421874646548530/0c3f5a2ee26def577afe60154cd106cd.webp?size=1024")
        em.add_field(name="Type 1:",
                    value="Command: ``?avatar`` -Sends our own avatar with link", inline=False)
        em.add_field(name="Type 2:",
                    value="Command: ``?avatar @EXPLOITER#6889`` -Sends the avatar of @EXPLOITER#6889", inline=False)
        await ctx.send(embed=em)



    @help.command()
    @commands.cooldown(1, 3, commands.BucketType.user)
    async def aki(self,ctx):
        desc_helpme = '__**HOW TO PLAY**__\n\nUse the `?aki` command followed by the game mode you want to play. Here is ' \
          'a list of currently available game modes : **people, animals, objects**.\nFor example : `.guess people`\n\n__**GAME MODES**__\n\n' \
          '**People** : This is the game mode for guessing people (fictional or real)\n**Animals** : ' \
          'This is the game mode for guessing animals\n**Objects** : This is the game mode for guessing objects' \
          '\n\n__**MISCELLANEOUS**__\n\n**1.**Wait until all emojis are displayed before adding your reaction, or' \
          ' else it will not register it and you will have to react again once it is done displaying' \
          '\n**2.**The game ends in 45 seconds if you do not answer the question by reacting with the right' \
          ' emoji\n**3.** The bot might sometimes be slow, please be patient and wait for it to ask you the questions. If it is stuck, do not worry the game will automatically end in 30 seconds and you can start playing again\n**4.** Only one person can play at a time\n\n' \
          '__**EMOJI MEANINGS**__\n\n✅ = This emoji means "yes"\n❌ = This emoji means "no"\n🤷 = This emoji means' \
          '"I do not know"\n👍 = This emoji means "probably"\n👎 = This emoji means "probably not"\n⏮ = This ' \
          'emoji repeats the question before\n🛑 = This emoji ends the game being played'
        embed_var_helpme = discord.Embed(description=desc_helpme, color=0x00FF00)
        embed_var_helpme.set_thumbnail(
            url="https://cdn.discordapp.com/avatars/839421874646548530/0c3f5a2ee26def577afe60154cd106cd.webp?size=1024")
        await ctx.send(embed=embed_var_helpme)



    @help.command()
    @commands.cooldown(1, 3, commands.BucketType.user)
    async def voice_logs(self,ctx):
        em = discord.Embed(
            title="Channel for voice logging", description="Use this command to fix the channel for voice log", colour=randint(0, 0xffffff))
        em.set_thumbnail(
            url="https://cdn.discordapp.com/avatars/839421874646548530/0c3f5a2ee26def577afe60154cd106cd.webp?size=1024")
        em.add_field(name="Syntax:",
                    value="``?voice_logs<#specific channel>``", inline=False) 
        em.add_field(name="Example:",
                    value="``?voice_logs #general``", inline=False)
        await ctx.send(embed=em)


    @help.command()
    @commands.cooldown(1, 3, commands.BucketType.user)
    async def action_logs(self,ctx):
        em = discord.Embed(
            title="Channel for action logging", description="Use this command to fix the channel for action log", colour=randint(0, 0xffffff))
        em.set_thumbnail(
            url="https://cdn.discordapp.com/avatars/839421874646548530/0c3f5a2ee26def577afe60154cd106cd.webp?size=1024")
        em.add_field(name="Syntax:",
                    value="``?action_logs<#specific channel>``", inline=False) 
        em.add_field(name="Example:",
                    value="``?action_logs #general``", inline=False)
        await ctx.send(embed=em)



    @help.command()
    @commands.cooldown(1, 3, commands.BucketType.user)
    async def emoji_list(self,ctx):
        em = discord.Embed(
            title="Sends the list of emoji names based on ur query", description="Use this command to send the list of emojis available on your message", colour=randint(0, 0xffffff))
        em.set_thumbnail(
            url="https://cdn.discordapp.com/avatars/839421874646548530/0c3f5a2ee26def577afe60154cd106cd.webp?size=1024")
        em.add_field(name="Syntax:",
                    value="``?emoji_list<message>``", inline=False) 
        em.add_field(name="Example:",
                    value="``?emoji_list bye``", inline=False)
        em.set_footer(text="Some emojis doesn't match with the thing you search")            
        await ctx.send(embed=em)


    @help.command()
    @commands.cooldown(1, 3, commands.BucketType.user)
    async def emoji_search(self,ctx):
        em = discord.Embed(
            title="Sends 5 emojis based on ur query", description="Use this command to send 5 emoji based on the title", colour=randint(0, 0xffffff))
        em.set_thumbnail(
            url="https://cdn.discordapp.com/avatars/839421874646548530/0c3f5a2ee26def577afe60154cd106cd.webp?size=1024")
        em.add_field(name="Syntax:",
                    value="``?emoji_search<message>``", inline=False) 
        em.add_field(name="Example:",
                    value="``?emoji_search bye``", inline=False)
        em.set_footer(text="Some emojis doesn't match with the thing you search")            
        await ctx.send(embed=em)


    @help.command()
    @commands.cooldown(1, 3, commands.BucketType.user)
    async def emoji(self,ctx):
        em = discord.Embed(
            title="Sends the emoji based on ur query", description="Use this command to send the emoji based on the title", colour=randint(0, 0xffffff))
        em.set_thumbnail(
            url="https://cdn.discordapp.com/avatars/839421874646548530/0c3f5a2ee26def577afe60154cd106cd.webp?size=1024")
        em.add_field(name="Syntax:",
                    value="``?emoji<message>``", inline=False) 
        em.add_field(name="Example:",
                    value="``?emoji bye``", inline=False)
        em.set_footer(text="Some emojis doesn't match with the thing you search. You can use ?emoji_list<message> to get the names of emoji available")            
        await ctx.send(embed=em)


    @help.command()
    @commands.cooldown(1, 3, commands.BucketType.user)
    async def channel_status(self,ctx):
        em = discord.Embed(
            title="Find average message per day of each person and check the health of channel", description="used to send the number of messages in this channel on specific days", colour=randint(0, 0xffffff))
        em.set_thumbnail(
            url="https://cdn.discordapp.com/avatars/839421874646548530/0c3f5a2ee26def577afe60154cd106cd.webp?size=1024")
        em.add_field(name="Syntax:",
                    value="``?channel_status <integer(days of messages)> <#specific channel>``", inline=False) 
        em.add_field(name="Example:",
                    value="``?channel_status 20 #general``", inline=False)
        await ctx.send(embed=em)


    @help.command()
    @commands.cooldown(1, 3, commands.BucketType.user)
    async def caki(self,ctx):
        em = discord.Embed(
            title="Channel for akinator", description="Use this command to fix the channel for akinator", colour=randint(0, 0xffffff))
        em.set_thumbnail(
            url="https://cdn.discordapp.com/avatars/839421874646548530/0c3f5a2ee26def577afe60154cd106cd.webp?size=1024")
        em.add_field(name="Syntax:",
                    value="``?caki<#specific channel>``", inline=False) 
        em.add_field(name="Example:",
                    value="``?caki #general``", inline=False)
        await ctx.send(embed=em)


    @help.command()
    @commands.cooldown(1, 3, commands.BucketType.user)
    async def change_count(self,ctx):
        em = discord.Embed(
            title="Change the Channel for Counting game", description="Use this command to change the channel for counting game without resetting the counter", colour=randint(0, 0xffffff))
        em.set_thumbnail(
            url="https://cdn.discordapp.com/avatars/839421874646548530/0c3f5a2ee26def577afe60154cd106cd.webp?size=1024")
        em.add_field(name="Syntax:",
                    value="``?change_count <#specific channel>``", inline=False) 
        em.add_field(name="Example:",
                    value="``?change_count #counter``", inline=False)
        await ctx.send(embed=em)


    @help.command()
    @commands.cooldown(1, 3, commands.BucketType.user)
    async def cancel_count(self,ctx):
        em = discord.Embed(
            title="Stops count game", description="Use this command to stop the count game", colour=randint(0, 0xffffff))
        em.set_thumbnail(
            url="https://cdn.discordapp.com/avatars/839421874646548530/0c3f5a2ee26def577afe60154cd106cd.webp?size=1024")
        em.add_field(name="Commands",
                    value="``?cancel_count``", inline=False) 
        em.set_footer(text="Warning: This can't be undone. Only you can start the new game by ``?count_channel``")            
        await ctx.send(embed=em)


    @help.command()
    @commands.cooldown(1, 3, commands.BucketType.user)
    async def count_reset(self,ctx):
        em = discord.Embed(
            title="Resets counter in count game", description="Use this command to reset the counter in counting game", colour=randint(0, 0xffffff))
        em.set_thumbnail(
            url="https://cdn.discordapp.com/avatars/839421874646548530/0c3f5a2ee26def577afe60154cd106cd.webp?size=1024")
        em.add_field(name="Commands",
                    value="``?count_reset``", inline=False) 
        await ctx.send(embed=em)


    @help.command()
    @commands.cooldown(1, 3, commands.BucketType.user)
    async def count_channel(self,ctx):
        em = discord.Embed(
            title="Channel for Counting game", description="Use this command to fix the channel for counting game", colour=randint(0, 0xffffff))
        em.set_thumbnail(
            url="https://cdn.discordapp.com/avatars/839421874646548530/0c3f5a2ee26def577afe60154cd106cd.webp?size=1024")
        em.add_field(name="Syntax:",
                    value="``?count_channel <#specific channel>``", inline=False) 
        em.add_field(name="Example:",
                    value="``?count_channel #chat``", inline=False)
        await ctx.send(embed=em)


    @help.command()
    @commands.cooldown(1, 3, commands.BucketType.user)
    async def play(self,ctx):
        em = discord.Embed(
            title="Play", description="Use this command to play a song", colour=randint(0, 0xffffff))
        em.set_thumbnail(
            url="https://cdn.discordapp.com/avatars/839421874646548530/0c3f5a2ee26def577afe60154cd106cd.webp?size=1024")
        em.add_field(name="Syntax:",
                    value="``?play <song name>``", inline=False)
        em.add_field(name="Example:",
                    value="``?play arcade``", inline=False)
        await ctx.send(embed=em)

    @help.command()
    @commands.cooldown(1, 3, commands.BucketType.user)
    async def pause(self,ctx):
        em = discord.Embed(
            title="Pause", description="Use this command to pause a song that is playing currently", colour=randint(0, 0xffffff))
        em.set_thumbnail(
            url="https://cdn.discordapp.com/avatars/839421874646548530/0c3f5a2ee26def577afe60154cd106cd.webp?size=1024")
        em.add_field(name="Command:",
                    value="``?pause``", inline=False)
        await ctx.send(embed=em)


    @help.command()
    @commands.cooldown(1, 3, commands.BucketType.user)
    async def resume(self,ctx):
        em = discord.Embed(
            title="Resume", description="Use this command to resume the song that is currently paused", colour=randint(0, 0xffffff))
        em.set_thumbnail(
            url="https://cdn.discordapp.com/avatars/839421874646548530/0c3f5a2ee26def577afe60154cd106cd.webp?size=1024")
        em.add_field(name="Command:",
                    value="``?resume``\nAliases=r", inline=False)
        await ctx.send(embed=em)


    @help.command()
    @commands.cooldown(1, 3, commands.BucketType.user)
    async def loop(self,ctx):
        em = discord.Embed(
            title="Loop", description="Use this command to loop the song that is currently playing", colour=randint(0, 0xffffff))
        em.set_thumbnail(
            url="https://cdn.discordapp.com/avatars/839421874646548530/0c3f5a2ee26def577afe60154cd106cd.webp?size=1024")
        em.add_field(name="Command:",
                    value="``?loop``\nAliases= ``l``", inline=False)
        await ctx.send(embed=em)

    @help.command()
    @commands.cooldown(1, 3, commands.BucketType.user)
    async def queue(self,ctx):
        em = discord.Embed(
            title="Queue", description="Used to view the queued song", colour=randint(0, 0xffffff))
        em.set_thumbnail(
            url="https://cdn.discordapp.com/avatars/839421874646548530/0c3f5a2ee26def577afe60154cd106cd.webp?size=1024")
        em.add_field(name="Command:",
                    value="``?queue``\nAliases=q", inline=False)
        await ctx.send(embed=em)

    @help.command()
    @commands.cooldown(1, 3, commands.BucketType.user)
    async def search(self,ctx):
        em = discord.Embed(
            title="Search", description="Search the query in youtube and ask us to play which que-number to be played", colour=randint(0, 0xffffff))
        em.set_thumbnail(
            url="https://cdn.discordapp.com/avatars/839421874646548530/0c3f5a2ee26def577afe60154cd106cd.webp?size=1024")
        em.add_field(name="Command:",
                    value="``?search <name>``\nAliases=q", inline=False)
        await ctx.send(embed=em)

    @help.command()
    @commands.cooldown(1, 3, commands.BucketType.user)
    async def shuffle(self,ctx):
        em = discord.Embed(
            title="Shuffle", description="Used to shuffle the queue", colour=randint(0, 0xffffff))
        em.set_thumbnail(
            url="https://cdn.discordapp.com/avatars/839421874646548530/0c3f5a2ee26def577afe60154cd106cd.webp?size=1024")
        em.add_field(name="Command:",
                    value="``?shuffle``\nAliases=q", inline=False)
        await ctx.send(embed=em)

    @help.command()
    @commands.cooldown(1, 3, commands.BucketType.user)
    async def np(self,ctx):
        em = discord.Embed(
            title="Now-Playing", description="Used to view the currently playing song", colour=randint(0, 0xffffff))
        em.set_thumbnail(
            url="https://cdn.discordapp.com/avatars/839421874646548530/0c3f5a2ee26def577afe60154cd106cd.webp?size=1024")
        em.add_field(name="Command:",
                    value="``?np``", inline=False)
        await ctx.send(embed=em)

    @help.command()
    @commands.cooldown(1, 3, commands.BucketType.user)
    async def uptime(self,ctx):
        em = discord.Embed(
            title="Uptime", description="Used to check the music node is online or not", colour=randint(0, 0xffffff))
        em.set_thumbnail(
            url="https://cdn.discordapp.com/avatars/839421874646548530/0c3f5a2ee26def577afe60154cd106cd.webp?size=1024")
        em.add_field(name="Command:",
                    value="``?uptime``", inline=False)                
        await ctx.send(embed=em)

    @help.command()
    @commands.cooldown(1, 3, commands.BucketType.user)
    async def playlist(self,ctx):
        em = discord.Embed(
            title="Playlist", description="Used to play the playlist either by link or by name", colour=randint(0, 0xffffff))
        em.set_thumbnail(
            url="https://cdn.discordapp.com/avatars/839421874646548530/0c3f5a2ee26def577afe60154cd106cd.webp?size=1024")
        em.add_field(name="Syntax:",
                    value="``?playlist <link or name>``", inline=False)
        em.add_field(name="Example:",
                    value="``?playlist tamil songs``-plays the playlists of tamil songs\nAliases=pl", inline=False)                    
        await ctx.send(embed=em)

    @help.command()
    @commands.cooldown(1, 3, commands.BucketType.user)
    async def move(self,ctx):
        em = discord.Embed(
            title="Move", description="Used to move the song around in queue", colour=randint(0, 0xffffff))
        em.set_thumbnail(
            url="https://cdn.discordapp.com/avatars/839421874646548530/0c3f5a2ee26def577afe60154cd106cd.webp?size=1024")
        em.add_field(name="Syntax:",
                    value="``?move <Queue-number>``", inline=False)
        em.add_field(name="Example:",
                    value="``?move 2``-plays the second song in the queue\nAliases=mv", inline=False)                    
        await ctx.send(embed=em)

    @help.command()
    @commands.cooldown(1, 3, commands.BucketType.user)
    async def skipto(self,ctx):
        em = discord.Embed(
            title="Skipto", description="Used to skip the current song and moves to the specified queue-number of the queue", colour=randint(0, 0xffffff))
        em.set_thumbnail(
            url="https://cdn.discordapp.com/avatars/839421874646548530/0c3f5a2ee26def577afe60154cd106cd.webp?size=1024")
        em.add_field(name="Command:",
                    value="``?skipto <queue-number>``", inline=False)
        em.add_field(name="Example:",
                    value="``?skipto 3``Skips current playing song to 3 queued song\nAliases=st", inline=False)
        await ctx.send(embed=em)

    @help.command()
    @commands.cooldown(1, 3, commands.BucketType.user)
    async def skip(self,ctx):
        em = discord.Embed(
            title="Skip", description="Used to skip the current song and moves to next song in queue", colour=randint(0, 0xffffff))
        em.set_thumbnail(
            url="https://cdn.discordapp.com/avatars/839421874646548530/0c3f5a2ee26def577afe60154cd106cd.webp?size=1024")
        em.add_field(name="Command:",
                    value="``?skip``\nAliases=s", inline=False)
        await ctx.send(embed=em)

    @help.command()
    @commands.cooldown(1, 3, commands.BucketType.user)
    async def volume(self,ctx):
        em = discord.Embed(
            title="volume", description="Used to fix the volume of the song", colour=randint(0, 0xffffff))
        em.set_thumbnail(
            url="https://cdn.discordapp.com/avatars/839421874646548530/0c3f5a2ee26def577afe60154cd106cd.webp?size=1024")
        em.add_field(name="Syntax:",
                    value="``?volume <required percentage(0-200%)>``", inline=False)    
        em.add_field(name="Example:",
                    value="``?volume 75``", inline=False)
        await ctx.send(embed=em)

    @help.command()
    @commands.cooldown(1, 3, commands.BucketType.user)
    async def remove(self,ctx):
        em = discord.Embed(
            title="Remove", description="Removes the song by queue number", colour=randint(0, 0xffffff))
        em.set_thumbnail(
            url="https://cdn.discordapp.com/avatars/839421874646548530/0c3f5a2ee26def577afe60154cd106cd.webp?size=1024")
        em.add_field(name="Syntax:",
                    value="``?remove <Queue-number>``", inline=False)    
        em.add_field(name="Example:",
                    value="``?remove 3`` Used to remove 3rd song in the queue\nAliases=rm", inline=False)
        await ctx.send(embed=em)

    @help.command()
    @commands.cooldown(1, 3, commands.BucketType.user)
    async def truth(self,ctx):
        em = discord.Embed(
            title="Truth", description="Use this command to ask truth question", colour=randint(0, 0xffffff))
        em.set_thumbnail(
            url="https://cdn.discordapp.com/avatars/839421874646548530/0c3f5a2ee26def577afe60154cd106cd.webp?size=1024")
        em.add_field(name="Command:",
                    value="``?truth``", inline=False)
        await ctx.send(embed=em)

    @help.command()
    @commands.cooldown(1, 3, commands.BucketType.user)
    async def dare(self,ctx):
        em = discord.Embed(
            title="Dare", description="Use this command to ask dare questions", colour=randint(0, 0xffffff))
        em.set_thumbnail(
            url="https://cdn.discordapp.com/avatars/839421874646548530/0c3f5a2ee26def577afe60154cd106cd.webp?size=1024")
        em.add_field(name="Command:",
                    value="``?dare``", inline=False)
        await ctx.send(embed=em)

def setup(bot):
    # asyncio.sleep(1)
    bot.add_cog(Help(bot))
    print(f'Help was loaded!')  