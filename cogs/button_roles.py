from discord.ext import commands, tasks
from discord.ext.commands import command, Cog
from mongodbs import *
import discord
import random
from random import randint
import asyncio
from discord.utils import get
from discord.ext.commands import cooldown, BucketType
from discord_components import (
    Button,
    ButtonStyle,
    Select,
    SelectOption,
)


class ExampleCog(Cog):
    def __init__(self, bot):
        self.bot = bot

    @commands.command()
    @commands.guild_only()
    @commands.has_permissions(administrator=True)
    @commands.cooldown(1, 10, commands.BucketType.user)
    async def button_role(self,ctx,target_channel,title,description, *options):
      #1-blue,2-grey,3-green,4-red
      serverId = ctx.message.guild.id    
      if server_info.find_one({'id': serverId}):
        try:
          x=list(server_info.find({ "id":serverId }))[0]['disabled']
          if "button_role" in x:
            return
        except:
          pass
      try:
        await ctx. message. delete()
        c_id = int(target_channel[2:-1])
        chan=get(ctx.guild.text_channels,id=c_id)
        channel = self.bot.get_channel(c_id)
      except:
        await ctx.send("No such channel exists!")  
        return
      n=len(options)
      if(n%3!=0):
        await ctx.send("Can't understand what u r trying to say. To learn how to use. use ``?help button_role``")
        return
      if(n>30):
        await ctx.send("Cant assign more than 10 roles at a single time")
        return
      styles=[]  
      try:
        for i in range(2,n,3):
          if(int(options[i])<5 and int(options[i])>0):
            styles.append(int(options[i]))
          else:
            await ctx.send("use ``?help button_role`` to understand how to use this command!!!")  
            return
      except:
        await ctx.send("use ``?help button_role`` to understand how to use this command!!! lol")     
        return
      ids=[]  
      for k in range(1,n,3):
          z=len(options[k])
          try:
            ids.append(int(options[k][3:z-1]))
          except:
            await ctx.send(f"{options[k]} role doesn't exist")  
      for j in ids:
        try:
          role = get(ctx.guild.roles, id=j)
        except:
          await ctx.send(f"{j} id role doesn't exist!!!")
          return  

      if button_info.find_one({'id': serverId}):
          for i in range(0,n,3):
            button_info.update_one({'id': serverId}, {
                    '$set': {options[i]: options[i+1]}})
            await asyncio.sleep(0.5)
          await ctx.send(f"{ctx.author.mention}You fixed button roles successfully !")
      else:
        server_Doc = {
                'id': int(serverId)
            }
        button_info.insert_one(server_Doc)
        for i in range(0,n,3):
            button_info.update_one({'id': serverId}, {
                    '$set': {options[i]: options[i+1]}})
            await asyncio.sleep(0.5)        
        await ctx.send(f"{ctx.author.mention}You fixed button roles successfully !")
      if(title!="" and description!=""):
        embed = discord.Embed(title=title,description=description,timestamp=ctx.message.created_at, colour=randint(0, 0xffffff))
        embed.set_author(name=ctx.guild.name, icon_url=ctx.guild.icon_url)
        embed.set_footer(text=self.bot.user.name, icon_url=self.bot.user.avatar_url)
        embed.set_thumbnail(
            url=ctx.guild.icon_url)
      elif(title=="" and description!=""):

        embed=discord.Embed(title=description,timestamp=ctx.message.created_at, colour=randint(0, 0xffffff))
        embed.set_author(name=ctx.guild.name, icon_url=ctx.guild.icon_url)
        embed.set_footer(text=self.bot.user.name, icon_url=self.bot.user.avatar_url)
        embed.set_thumbnail(
            url=ctx.guild.icon_url)  
      elif(description=="" and title!=""):
        embed=discord.Embed(title=title,timestamp=ctx.message.created_at, colour=randint(0, 0xffffff))
        embed.set_author(name=ctx.guild.name, icon_url=ctx.guild.icon_url)
        embed.set_footer(text=self.bot.user.name, icon_url=self.bot.user.avatar_url)
        embed.set_thumbnail(
            url=ctx.guild.icon_url)  
      else:
        embed=discord.Embed(timestamp=ctx.message.created_at, colour=randint(0, 0xffffff))
        embed.set_author(name=ctx.guild.name, icon_url=ctx.guild.icon_url)
        embed.set_footer(text=self.bot.user.name, icon_url=self.bot.user.avatar_url)
        embed.set_thumbnail(
            url=ctx.guild.icon_url)              

      x=[]
      for i in range(0,n,3):
        x.append(Button(style=int(options[i+2]),label=options[i]))
      await channel.send(embed=embed,
      components=[x],)  
  


    @commands.Cog.listener()
    async def on_button_click(self,interaction):
      serverId=interaction.guild.id
      try:
        role=button_info.find_one(
                {'id': serverId})[interaction.component.label]
        user_roles=[]
        for i in interaction.author.roles:
          user_roles.append(i.name)
        try:
          role=button_info.find_one(
                {'id': serverId})[interaction.component.label]
          n=len(role)
          role=int(role[3:n-1])
          target_role=get(interaction.guild.roles, id=role)
          h=str(target_role)
        except:
          embed1=discord.Embed(title="Interaction failed!", colour=randint(0, 0xffffff))
          await interaction.respond(embed=embed1) 
          return
        if(h in user_roles):
          try:
            embed=discord.Embed(title=f"Removed {target_role.name} role from you!", colour=randint(0, 0xffffff))
            await interaction.author.remove_roles(target_role)
            await interaction.respond(embed=embed)
          except:
              embed1=discord.Embed(title="Can't remove role!", colour=randint(0, 0xffffff))
              await interaction.respond(embed=embed1)
        else:  
          try:
            embed=discord.Embed(title=f"Added {target_role.name} role to you!", colour=randint(0, 0xffffff))
            await interaction.author.add_roles(target_role) 
            await interaction.respond(embed=embed)
          except:
            embed1=discord.Embed(title="Can't add role!", colour=randint(0, 0xffffff))
            await interaction.respond(embed=embed1)  
      except:
          pass    


    # @command()
    # async def select(self, ctx):
    #     async def callback(interaction):
    #         await interaction.send(content="Yay")

    #     await ctx.send(
    #         "Select callbacks!",
    #         components=[
    #             self.bot.components_manager.add_callback(
    #                 Select(
    #                     options=[
    #                         SelectOption(label="a", value="a"),
    #                         SelectOption(label="b", value="b"),
    #                     ],
    #                 ),
    #                 callback,
    #             )
    #         ],
    #     )


def setup(bot):
    bot.add_cog(ExampleCog(bot))
    print("Button_role was added")