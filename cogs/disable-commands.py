from discord.ext import commands
from discord.ext.commands import cooldown, BucketType
import discord
from mongodbs import *


global commands_available, moderation_available, giveaway_available, music_available, fun_available, games_available, modes_available, utils_available, ticket_available, others_available, greetings_available
commands_available = ["button_role", "punch", "slap", "kick", "ban", "mute", "unmute", "unban", "clear", "greroll", "gend", "gstart", "gcreate", "grole", "gdrop", "join", "leave", "play", "pause", "resume", "stop", "loop", "queue", "np", "skip", "volume", "remove", "song", "track", "meme", "quote", "fact_cat", "dog", "ip", "bored", "avatar", "hack", "aki", "caki",
                      "truth", "dare", "rip", "wanted", "remember", "tran", "ping", "poll", "send", "ticketmention", "createticket", "closeticket", "dropticket", "serverinfo", "info", "globalchatstart", "globalchatstop", "set_welcome", "set_leave", "cancel_welcome", "cancel_leave", "start", "beg", "resources", "fight", "scout", "profile", "potion", "train", "train_cost", "invite", "vote"]
modes_available = ["moderation", "giveaway", "games",
                   "music", "fun", "utils", "ticket", "others"]
moderation_available = ["kick", "ban", "mute",
                        "unmute", "unban", "clear", "button_role"]
giveaway_available = ["greroll", "gend", "gstart", "gcreate", "grole", "gdrop"]
music_available = ["join", "leave", "play", "pause", "resume", "stop",
                   "loop", "queue", "np", "skip", "volume", "remove", "song", "track"]
fun_available = ["punch", "slap", "meme", "quote", "fact_cat", "dog", "ip",
                 "bored", "avatar", "hack", "aki", "caki", "truth", "dare", "rip", "wanted"]
utils_available = ["remember", "tran", "ping", "poll", "send"]
ticket_available = ["ticketmention",
                    "createticket", "closeticket", "dropticket"]
others_available = ["serverinfo", "info", "globalchatstart", "globalchatstop"]
greetings_available = ["set_welcome",
                       "set_leave", "cancel_welcome", "cancel_leave"]
games_available = ["start", "beg", "resources", "fight",
                   "scout", "profile", "potion", "train", "train_cost"]


class Disable(commands.Cog, name='disabler'):
    """Used to disable and enable commands"""

    def __init__(self, bot):
        self.bot = bot

    def cog_load(self):
        print("loaded")

    def cog_unload(self):
        print(f'disabler was unloaded')

    @commands.command(aliases=['en', 'e'])
    @commands.guild_only()
    @commands.has_permissions(administrator=True)
    @commands.cooldown(1, 10, commands.BucketType.user)
    async def enable(self, ctx, names: str):
        serverId = ctx.message.guild.id
        if server_info.find_one({'id': serverId}):
            try:
                x = list(server_info.find({"id": serverId}))[0]['disabled']
                if(names == "moderation"):
                    for i in x:
                        if(i in moderation_available):
                            server_info.find_one_and_update(
                                {'id': serverId}, {'$pull': {'disabled': i}})
                    await ctx.reply("Moderation commands were enabled successfully!")
                    return
                elif(names == "giveaway"):
                    for i in x:
                        if(i in giveaway_available):
                            server_info.find_one_and_update(
                                {'id': serverId}, {'$pull': {'disabled': i}})
                    await ctx.reply("Giveaway commands were enabled successfully!")
                    return
                elif(names == "games"):
                    for i in x:
                        if(i in games_available):
                            server_info.find_one_and_update(
                                {'id': serverId}, {'$pull': {'disabled': i}})
                    await ctx.reply("Games commands were enabled successfully!")
                    return
                elif(names == "music"):
                    for i in x:
                        if(i in music_available):
                            server_info.find_one_and_update(
                                {'id': serverId}, {'$pull': {'disabled': i}})
                    await ctx.reply("Music commands were enabled successfully!")
                    return
                elif(names == "fun"):
                    for i in x:
                        if(i in fun_available):
                            server_info.find_one_and_update(
                                {'id': serverId}, {'$pull': {'disabled': i}})
                    await ctx.reply("Fun commands were enabled successfully!")
                    return
                elif(names == "utils"):
                    for i in x:
                        if(i in utils_available):
                            server_info.find_one_and_update(
                                {'id': serverId}, {'$pull': {'disabled': i}})
                    await ctx.reply("Utils commands were enabled successfully!")
                    return
                elif(names == "ticket"):
                    for i in x:
                        if(i in ticket_available):
                            server_info.find_one_and_update(
                                {'id': serverId}, {'$pull': {'disabled': i}})
                    await ctx.reply("Ticket commands were enabled successfully!")
                    return
                elif(names == "others"):
                    for i in x:
                        if(i in others_available):
                            server_info.find_one_and_update(
                                {'id': serverId}, {'$pull': {'disabled': i}})
                    await ctx.reply("Others commands were enabled successfully!")
                    return
                else:
                    if names in x:
                        server_info.find_one_and_update(
                            {'id': serverId}, {'$pull': {'disabled': names}})
                        await ctx.reply(f"You enabled {names} command!!")
                        return
                    else:
                        await ctx.reply("You didn't disabled that command!")
                        return
            except:
                await ctx.reply("You didn't disabled that command!!!")
                return

        else:
            await ctx.reply("You didn't disabled that command!!!")
            return

    @commands.command(aliases=['di', 'd'])
    @commands.guild_only()
    @commands.has_permissions(administrator=True)
    @commands.cooldown(1, 10, commands.BucketType.user)
    async def disable(self, ctx, names: str):
        serverId = ctx.message.guild.id
        try:
            if server_info.find_one({'id': serverId}):
                if(names == "moderation"):
                    x = list(server_info.find({"id": serverId}))[0]['disabled']
                    for i in x:
                        if i in moderation_available:
                            server_info.find_one_and_update(
                                {'id': serverId}, {'$pull': {'disabled': i}})
                    server_info.find_one_and_update(
                        {'id': serverId}, {'$push': {'disabled': {'$each': [i for i in moderation_available]}}})
                    await ctx.reply("Moderation commands are removed successfully")
                    return
                elif(names == "giveaway"):
                    x = list(server_info.find({"id": serverId}))[0]['disabled']
                    for i in x:
                        if i in giveaway_available:
                            server_info.find_one_and_update(
                                {'id': serverId}, {'$pull': {'disabled': i}})
                    server_info.find_one_and_update(
                        {'id': serverId}, {'$push': {'disabled': {'$each': [i for i in giveaway_available]}}})
                    await ctx.reply("Giveaway commands are removed successfully")
                    return
                elif(names == "games"):
                    x = list(server_info.find({"id": serverId}))[0]['disabled']
                    for i in x:
                        if i in games_available:
                            server_info.find_one_and_update(
                                {'id': serverId}, {'$pull': {'disabled': i}})
                    server_info.find_one_and_update(
                        {'id': serverId}, {'$push': {'disabled': {'$each': [i for i in games_available]}}})
                    await ctx.send("Games commands are removed successfully")
                    return
                elif(names == "music"):
                    x = list(server_info.find({"id": serverId}))[0]['disabled']
                    for i in x:
                        if i in music_available:
                            server_info.find_one_and_update(
                                {'id': serverId}, {'$pull': {'disabled': i}})
                    server_info.find_one_and_update(
                        {'id': serverId}, {'$push': {'disabled': {'$each': [i for i in music_available]}}})
                    await ctx.send("Music commands are removed successfully")
                    return
                elif(names == "fun"):
                    x = list(server_info.find({"id": serverId}))[0]['disabled']
                    for i in x:
                        if i in fun_available:
                            server_info.find_one_and_update(
                                {'id': serverId}, {'$pull': {'disabled': i}})
                    server_info.find_one_and_update(
                        {'id': serverId}, {'$push': {'disabled': {'$each': [i for i in fun_available]}}})
                    await ctx.send("Fun commands removed successfully")
                    return
                elif(names == "utils"):
                    x = list(server_info.find({"id": serverId}))[0]['disabled']
                    for i in x:
                        if i in giveaway_available:
                            server_info.find_one_and_update(
                                {'id': serverId}, {'$pull': {'disabled': i}})
                    server_info.find_one_and_update(
                        {'id': serverId}, {'$push': {'disabled': {'$each': [i for i in utils_available]}}})
                    await ctx.reply("Utils commands are removed successfully")
                    return
                elif(names == "ticket"):
                    x = list(server_info.find({"id": serverId}))[0]['disabled']
                    for i in x:
                        if i in giveaway_available:
                            server_info.find_one_and_update(
                                {'id': serverId}, {'$pull': {'disabled': i}})
                    server_info.find_one_and_update(
                        {'id': serverId}, {'$push': {'disabled': {'$each': [i for i in ticket_available]}}})
                    await ctx.reply("Ticket commands are removed successfully")
                    return
                elif(names == "others"):
                    x = list(server_info.find({"id": serverId}))[0]['disabled']
                    for i in x:
                        if i in giveaway_available:
                            server_info.find_one_and_update(
                                {'id': serverId}, {'$pull': {'disabled': i}})
                    server_info.find_one_and_update(
                        {'id': serverId}, {'$push': {'disabled': {'$each': [i for i in others_available]}}})
                    await ctx.reply("Others commands are removed successfully")
                    return
                else:
                    x = list(server_info.find({"id": serverId}))[0]['disabled']
                    if names in x:
                        await ctx.reply("This command was already removed")
                        return
                    elif (names in commands_available):
                        server_info.find_one_and_update(
                            {'id': serverId}, {'$push': {'disabled': names}})
                        await ctx.reply(f"{names} has been disabled successfully!!!")
                    else:
                        await ctx.reply("You can't disable that command or invalid command!!!")
                        return
            else:
                if(names == "moderation"):
                    server_Doc = {
                        'id': int(serverId), 'disabled': moderation_available
                    }
                    server_info.insert_one(server_Doc)
                    await ctx.reply("Moderation commands were removed successfully!")
                    return
                elif(names == "giveaway"):
                    server_Doc = {
                        'id': int(serverId), 'disabled': giveaway_available
                    }
                    server_info.insert_one(server_Doc)
                    await ctx.reply("Giveaway commands were removed successfully!")
                    return
                elif(names == "games"):
                    server_Doc = {
                        'id': int(serverId), 'disabled': games_available
                    }
                    server_info.insert_one(server_Doc)
                    await ctx.reply("Games commands were removed successfully!")
                    return
                elif(names == "music"):
                    server_Doc = {
                        'id': int(serverId), 'disabled': music_available
                    }
                    server_info.insert_one(server_Doc)
                    await ctx.reply("Music commands were removed successfully!")
                    return
                elif(names == "fun"):
                    server_Doc = {
                        'id': int(serverId), 'disabled': fun_available
                    }
                    server_info.insert_one(server_Doc)
                    await ctx.reply("Fun commands were removed successfully!")
                    return
                elif(names == "utils"):
                    server_Doc = {
                        'id': int(serverId), 'disabled': utils_available
                    }
                    server_info.insert_one(server_Doc)
                    await ctx.reply("Utils commands were removed successfully!")
                    return
                elif(names == "ticket"):
                    server_Doc = {
                        'id': int(serverId), 'disabled': ticket_available
                    }
                    server_info.insert_one(server_Doc)
                    await ctx.reply("Ticket commands were removed successfully!")
                    return
                elif(names == "others"):
                    server_Doc = {
                        'id': int(serverId), 'disabled': giveaway_available
                    }
                    server_info.insert_one(server_Doc)
                    await ctx.reply("Others commands were removed successfully!")
                    return
                else:
                    if names in commands_available:
                        x = []
                        x.append(names)
                        server_Doc = {
                            'id': int(serverId), 'disabled': x
                        }
                        server_info.insert_one(server_Doc)
                        await ctx.reply(f"You disabled {names} in this server")
                        return
                    else:
                        await ctx.reply("No such commands exist!!!")
        except:
            if(names == "moderation"):
                server_info.update_one({'id': serverId}, {
                    '$set': {'disabled': moderation_available}})
                await ctx.reply(f"{names} commands were disabled in this server")
                return
            elif(names == "giveaway"):
                server_info.update_one({'id': serverId}, {
                    '$set': {'disabled': giveaway_available}})
                await ctx.reply(f"{names} commands were disabled in this server")
                return
            elif(names == "games"):
                server_info.update_one({'id': serverId}, {
                    '$set': {'disabled': games_available}})
                await ctx.reply(f"{names} commands were disabled in this server")
                return
            elif(names == "music"):
                server_info.update_one({'id': serverId}, {
                    '$set': {'disabled': music_available}})
                await ctx.reply(f"{names} commands were disabled in this server")
                return
            elif(names == "fun"):
                server_info.update_one({'id': serverId}, {
                    '$set': {'disabled': fun_available}})
                await ctx.reply(f"{names} commands were disabled in this server")
                return
            elif(names == "utils"):
                server_info.update_one({'id': serverId}, {
                    '$set': {'disabled': utils_available}})
                await ctx.reply(f"{names} commands were disabled in this server")
                return
            elif(names == "ticket"):
                server_info.update_one({'id': serverId}, {
                    '$set': {'disabled': ticket_available}})
                await ctx.reply(f"{names} commands were disabled in this server")
                return
            elif(names == "others"):
                server_info.update_one({'id': serverId}, {
                    '$set': {'disabled': others_available}})
                await ctx.reply(f"{names} commands were disabled in this server")
                return
            else:
                if names in commands_available:
                    x = []
                    x.append(names)
                    server_info.update_one({'id': serverId}, {
                        '$set': {'disabled': x}})
                    await ctx.reply(f"You disabled {names} in this server")
                    return
                else:
                    await ctx.reply("This commands cannot be disabled or no such commands exists!")
                    return


def setup(bot):
    bot.add_cog(Disable(bot))
    print(f'disabler was loaded!')
