from discord.ext import commands
import asyncio
import discord
from random import randint
import json
import requests
from discord.ext.commands import cooldown, BucketType
global commands_available,moderation_available,giveaway_available,music_available,fun_available,games_available,modes_available,utils_available,ticket_available,others_available,greetings_available



commands_available=["repair","current_count","eball","wikipedia","youtube","voice_logs","cancel_voice_logs","action_logs","cancel_action_logs","check","lock","fact","emoji","emoji_search","emoji_list","channel_status","calculator","button_role","punch","slap","kick","ban","mute","unmute","unban","clear","greroll","gend","gstart","gcreate","grole","gdrop","join","leave","play","pause","resume","loop","queue","np","skip","volume","remove","song","track","meme","quote","fact_cat","dog","ip","bored","avatar","hack","aki","caki","truth","dare","rip","wanted","remember","tran","ping","poll","send","ticketmention","createticket","closeticket","dropticket","serverinfo","info","globalchatstart","globalchatstop","set_welcome","set_leave","cancel_welcome","cancel_leave","start","beg","resources","fight","scout","profile","potion","train","train_cost","invite","vote","count_channel","count_reset","cancel_count","change_count"]
modes_available=["moderation","giveaway","games","music","fun","utils","ticket","others"]
moderation_available=["voice_logs","cancel_voice_logs","action_logs","cancel_action_logs","check","lock","kick","ban","mute","unmute","unban","clear","button_role"]
giveaway_available=["greroll","gend","gstart","gcreate","grole","gdrop"]
music_available=["repair","join","leave","play","pause","resume","loop","queue","np","skip","volume","remove","song","track"]
fun_available=["punch","slap","meme","quote","fact_cat","dog","ip","bored","avatar","hack","aki","caki","truth","dare","rip","wanted","count_channel","eball","count_reset","cancel_count","change_count","current_count"]
utils_available=["wikipedia","youtube","calculator","remember","tran","ping","poll","send"]
ticket_available=["ticketmention","createticket","closeticket","dropticket"]
others_available=["serverinfo","info","globalchatstart","globalchatstop","fact","emoji","emoji_search","emoji_list","channel_status"]
greetings_available=["set_welcome","set_leave","cancel_welcome","cancel_leave"]
games_available=["start","beg","resources","fight","scout","profile","potion","train","train_cost"]

class Help(commands.Cog, name='help'):

    def __init__(self, bot):
        self.bot = bot

    def cog_load(self):
      
      print("Help was loaded")
    def cog_unload(self):
        print(f'Help was unloaded')

    @commands.group(invoke_without_command=True,aliases=['h'])
    @commands.cooldown(1, 5, commands.BucketType.user)
    async def help(self,ctx):
        em = discord.Embed(
            title="Help", description="Use ``?enable`` and ``?disable`` to disable and enable only commands you want", colour=randint(0, 0xffffff))
        em.set_thumbnail(
            url="https://cdn.discordapp.com/avatars/839421874646548530/0c3f5a2ee26def577afe60154cd106cd.webp?size=1024")
        em.add_field(name="Moderation",
                    value="kick,ban,mute,unmute,unban,clear,button_role,voice_logs,cancel_voice_logs,action_logs,cancel_action_logs,check,lock", inline=False)
        em.add_field(name="Giveaway",
                    value="Warning :Need specific role(fixed by ``grole``) to use.\ncommands:greroll,gend,gstart,gcreate,grole,gdrop", inline=False)
        em.add_field(
            name="Games", value="start,beg,resources,fight,scout,profile,potion,train,train_cost", inline=False)
        em.add_field(name="Music",value="warning:⚠️⚠️Repair command clear all queued and playing song. Use this if music commands are not working⚠️⚠️\nrepair,join,leave,play,pause,resume,loop,queue,np,skip,volume,remove,song,track",inline=False)    
        em.add_field(
            name="Fun", value="punch,slap,meme,quote,fact_cat,dog,ip,bored,avatar,hack,aki,caki,truth,dare,rip,wanted,count_channel,count_reset,cancel_count,change_count,current_count,eball", inline=False)
        em.add_field(name="Utils", value="wikipedia,youtube,calculator,remember,tran,ping,poll,send", inline=False)    
        em.add_field(name="Ticket", value="ticketmention,createticket,closeticket,dropticket", inline=False)   
        em.add_field(name="Greetings", value="set_welcome,set_leave,cancel_welcome,cancel_leave", inline=False) 
        em.add_field(name="Others", value="serverinfo,info,globalchatstart,globalchatstop,fact,emoji,emoji_search,emoji_list,channel_status", inline=False)    
        em.add_field(name="Disable-commands", value="enable,disable", inline=False)
        em.set_footer(text="Use ?help <command or category> to understand how to use that")
        await ctx.send(embed=em)
      
    @help.command()
    @commands.cooldown(1, 3, commands.BucketType.user)
    async def poll(self,ctx):
        em = discord.Embed(
            title="Poll", description="Used to make a poll", colour=randint(0, 0xffffff))
        em.set_thumbnail(
            url="https://cdn.discordapp.com/avatars/839421874646548530/0c3f5a2ee26def577afe60154cd106cd.webp?size=1024")
        em.add_field(
            name="Syntax:", value="?poll <time in mins> <max votes> <Title> <choices......> ", inline=False)
        em.add_field(
            name="Note:", value="1)Time should be greater than 15 minutes\n2)Max votes should not be greater than million\n3)Your title and choices should be within ``double quotes`` otherwise it will consider the text after space as next command", inline=False)  
        em.add_field(
            name="Example:", value='?poll 17 5 "Select your favorite sports" "cricket" "football" "baseball" "volleyball" ', inline=False)      
        await ctx.send(embed=em)   

    @help.command()
    @commands.cooldown(1, 3, commands.BucketType.user)
    async def button_role(self,ctx):#1-blue,2-grey,3-green,4-red
        em = discord.Embed(
            title="Button-Role", description="Used to make button-roles.1-blue,2-grey,3-green,4-red", colour=randint(0, 0xffffff))
        em.set_thumbnail(
            url="https://cdn.discordapp.com/avatars/839421874646548530/0c3f5a2ee26def577afe60154cd106cd.webp?size=1024")
        em.add_field(
            name="Syntax:", value="?button_role #channel <title> <description> <<button-name1> <role-granted1> <color1> <button-name2> <role-granted2> <color2> <button-name3> <role-granted3> <color3>...> ", inline=False)
        em.add_field(
            name="Note:", value='1)Color: 1-blue,2-grey,3-green,4-red\n2)Can assign a maximum of ten roles at a time\n3)Title and description are optional if you want to skip any of the thing use "" at the place of the the thing you want to skip\n4)Cant skip button-name,button-color,channel and role given\5)Each button name should be unique', inline=False)  
        em.add_field(
            name="Example-1:", value='?button_role #self-roles "Please select the button properly" "Select as ur wish" "power-3" @power-3 "1"  "power-4" @power-4  2  "power-1" @power-1  "3"  "power-5" @power-5  "4"', inline=False)  
        em.add_field(
            name="Example-2:", value='?button_role #self-roles "" "Select as ur wish" "power-3" @power-3 "1"  "power-4" @power-4  2  "power-1" @power-1  "3"  "power-5" @power-5  "4"- In this way you can skip title or description if you dont need', inline=False) 
        em.set_footer(text="If you want to send buttons alone without embed you can delete the embed. By same way if you want to cancel this self-roles you can delete the message")             
        await ctx.send(embed=em)        


    @help.command()
    @commands.cooldown(1, 3, commands.BucketType.user)
    async def createticket(self,ctx):
        em = discord.Embed(
            title="Ticket-Creation", description="Used to create ticket in the specified channel", colour=randint(0, 0xffffff))
        em.set_thumbnail(
            url="https://cdn.discordapp.com/avatars/839421874646548530/0c3f5a2ee26def577afe60154cd106cd.webp?size=1024")
        em.add_field(name="Syntax",value="?createticket <channel to send the ticket msg> <Any argument you want to give as title for the ticket>",inline=False)
        em.add_field(name="Example:",value="?createticket #general Create tickets if you have any query in this server ")   
        em.set_footer(text="Once the people reacts it will create a channel for them only the roles specified in ticket mention and the person reacted can see. Only one ticket can be created in a server") 
        await ctx.send(embed=em)

    @help.command()
    @commands.cooldown(1, 3, commands.BucketType.user)
    async def closeticket(self,ctx):
        em = discord.Embed(
            title="Ticket-closing", description="Used to close the ticket of the mentioned member", colour=randint(0, 0xffffff))
        em.set_thumbnail(
            url="https://cdn.discordapp.com/avatars/839421874646548530/0c3f5a2ee26def577afe60154cd106cd.webp?size=1024")
        em.add_field(name="Syntax",value="?closeticket <member>",inline=False)
        em.add_field(name="Example:",value="?closeticket @never-fall-down ")   
        em.set_footer(text="Note:You should only mention that member not his roles") 
        await ctx.send(embed=em)
#"eball","wikipedia","youtube"

    @help.command()
    @commands.cooldown(1, 3, commands.BucketType.user)
    async def eball(self,ctx):
        em = discord.Embed(
            title="Eight ball", description="Used to play 8 ball game", colour=randint(0, 0xffffff))
        em.set_thumbnail(
            url="https://cdn.discordapp.com/avatars/839421874646548530/0c3f5a2ee26def577afe60154cd106cd.webp?size=1024")
        em.add_field(name="Syntax",value="?eball <qn>",inline=False)
        em.add_field(name="Example:",value="?eball have u voted me? ")   
        await ctx.send(embed=em)


    @help.command()
    @commands.cooldown(1, 3, commands.BucketType.user)
    async def wikipedia(self,ctx):
        em = discord.Embed(
            title="Wikipedia", description="Used to search the query in wikipedia", colour=randint(0, 0xffffff))
        em.set_thumbnail(
            url="https://cdn.discordapp.com/avatars/839421874646548530/0c3f5a2ee26def577afe60154cd106cd.webp?size=1024")
        em.add_field(name="Syntax",value="?wikipedia <query>",inline=False)
        em.add_field(name="Example:",value="?wikipedia Jackiechan")   
        em.set_footer(text="Note: Sends upto upto 3 sentences. All queries won't work/ Try to use different names if it is not working") 
        await ctx.send(embed=em)


    @help.command()
    @commands.cooldown(1, 3, commands.BucketType.user)
    async def youtube(self,ctx):
        em = discord.Embed(
            title="Youtube", description="Search the query in youtube and sends the link", colour=randint(0, 0xffffff))
        em.set_thumbnail(
            url="https://cdn.discordapp.com/avatars/839421874646548530/0c3f5a2ee26def577afe60154cd106cd.webp?size=1024")
        em.add_field(name="Syntax",value="?youtube <query>",inline=False)
        em.add_field(name="Example:",value="?youtube Hello World")   
        em.set_footer(text="Note: sends the link of first result") 
        await ctx.send(embed=em)        

    @help.command()
    @commands.cooldown(1, 3, commands.BucketType.user)
    async def send(self,ctx):
        em = discord.Embed(
            title="Sender", description="This sends your message in embed form", colour=randint(0, 0xffffff))
        em.set_thumbnail(
            url="https://cdn.discordapp.com/avatars/839421874646548530/0c3f5a2ee26def577afe60154cd106cd.webp?size=1024")
        em.add_field(name="Syntax",value="?send <Message you want to send as embed>",inline=False)
        em.add_field(name="Example:",value="?send Hi guys How are you ")   
        em.set_footer(text="Note: Once you use this command your original message will be deleted") 
        await ctx.send(embed=em)


    @help.command()
    @commands.cooldown(1, 3, commands.BucketType.user)
    async def dropticket(self,ctx):
        em = discord.Embed(
            title="Drop-Ticket", description="Used to drop the ticket created in your server", colour=randint(0, 0xffffff))
        em.set_thumbnail(
            url="https://cdn.discordapp.com/avatars/839421874646548530/0c3f5a2ee26def577afe60154cd106cd.webp?size=1024")
        em.set_footer(text="Note:Please delete the ticket embed to avoid confusion in future")    
        em.add_field(name="Command",value="?dropticket",inline=False)
        await ctx.send(embed=em)  

    @help.command()
    @commands.cooldown(1, 3, commands.BucketType.user)
    async def moderation(self,ctx):
        em = discord.Embed(
            title="Moderation", description="Used for moderating people in server", colour=randint(0, 0xffffff))
        em.set_thumbnail(
            url="https://cdn.discordapp.com/avatars/839421874646548530/0c3f5a2ee26def577afe60154cd106cd.webp?size=1024")
        em.add_field(name="Category",value="Moderation",inline=True)
        em.add_field(name="Commands are",value=f"{moderation_available}",inline=False)
        em.set_footer(text="To see how to use each command use ?help <command>")
        await ctx.send(embed=em)
        

    @help.command()
    @commands.cooldown(1, 3, commands.BucketType.user)
    async def giveaway(self,ctx):
        em = discord.Embed(
            title="Giveaway", description="Used to make  giveaway in your server", colour=randint(0, 0xffffff))
        em.set_thumbnail(
            url="https://cdn.discordapp.com/avatars/839421874646548530/0c3f5a2ee26def577afe60154cd106cd.webp?size=1024")
        em.add_field(name="Category",value="Giveaway",inline=True)
        em.add_field(name="Commands are",value=f"{giveaway_available}",inline=False)
        em.set_footer(text="To see how to use each command use ?help <command>")
        await ctx.send(embed=em)

    @help.command()
    @commands.cooldown(1, 3, commands.BucketType.user)
    async def games(self,ctx):
        em = discord.Embed(
            title="Games", description="Used to play a minigame in ur server", colour=randint(0, 0xffffff))
        em.set_thumbnail(
            url="https://cdn.discordapp.com/avatars/839421874646548530/0c3f5a2ee26def577afe60154cd106cd.webp?size=1024")
        em.add_field(name="Category",value="Games",inline=True)
        em.add_field(name="Commands are",value=f"{games_available}",inline=False)
        em.set_footer(text="To see how to use each command use ?help <command>")
        await ctx.send(embed=em)

    @help.command()
    @commands.cooldown(1, 3, commands.BucketType.user)
    async def music(self,ctx):
        em = discord.Embed(
            title="Music", description="Used to control music in server", colour=randint(0, 0xffffff))
        em.set_thumbnail(
            url="https://cdn.discordapp.com/avatars/839421874646548530/0c3f5a2ee26def577afe60154cd106cd.webp?size=1024")
        em.add_field(name="Category",value="Music",inline=True)
        em.add_field(name="Commands are",value=f"{music_available}",inline=False)
        em.set_footer(text="To see how to use each command use ?help <command>")
        await ctx.send(embed=em)        

    @help.command()
    @commands.cooldown(1, 3, commands.BucketType.user)
    async def fun(self,ctx):
        em = discord.Embed(
            title="Fun", description="These commands gives fun ", colour=randint(0, 0xffffff))
        em.set_thumbnail(
            url="https://cdn.discordapp.com/avatars/839421874646548530/0c3f5a2ee26def577afe60154cd106cd.webp?size=1024")
        em.add_field(name="Category",value="Fun",inline=True)
        em.add_field(name="Commands are",value=f"{fun_available}",inline=False)
        em.set_footer(text="To see how to use each command use ?help <command>")
        await ctx.send(embed=em)

    @help.command()
    @commands.cooldown(1, 3, commands.BucketType.user)
    async def utils(self,ctx):
        em = discord.Embed(
            title="Utils", description="These commands are hepful for server people and server moderator for understanding the server", colour=randint(0, 0xffffff))
        em.set_thumbnail(
            url="https://cdn.discordapp.com/avatars/839421874646548530/0c3f5a2ee26def577afe60154cd106cd.webp?size=1024")
        em.add_field(name="Category",value="Utils",inline=True)
        em.add_field(name="Commands are",value=f"{utils_available}",inline=False)
        em.set_footer(text="To see how to use each command use ?help <command>")
        await ctx.send(embed=em)


    @help.command()
    @commands.cooldown(1, 3, commands.BucketType.user)
    async def ticket(self,ctx):
        em = discord.Embed(
            title="Ticket", description="These are ticket commands used to interact with people anonymously", colour=randint(0, 0xffffff))
        em.set_thumbnail(
            url="https://cdn.discordapp.com/avatars/839421874646548530/0c3f5a2ee26def577afe60154cd106cd.webp?size=1024")
        em.add_field(name="Category",value="Ticket",inline=True)
        em.add_field(name="Commands are",value=f"{ticket_available}",inline=False)
        em.set_footer(text="To see how to use each command use ?help <command>")
        await ctx.send(embed=em)    

    @help.command()
    @commands.cooldown(1, 3, commands.BucketType.user)
    async def others(self,ctx):
        em = discord.Embed(
            title="Others", description="These commands make people globally interact with others and used to understand the condition of server", colour=randint(0, 0xffffff))
        em.set_thumbnail(
            url="https://cdn.discordapp.com/avatars/839421874646548530/0c3f5a2ee26def577afe60154cd106cd.webp?size=1024")
        em.add_field(name="Category",value="Others",inline=True)
        em.add_field(name="Commands are",value=f"{others_available}",inline=False)
        em.set_footer(text="To see how to use each command use ?help <command>")
        await ctx.send(embed=em)


    @help.command()
    @commands.cooldown(1, 3, commands.BucketType.user)
    async def enable(self,ctx):
        em = discord.Embed(
            title="Enable", description="Used to enable the disabled commands or category", colour=randint(0, 0xffffff))
        em.set_thumbnail(
            url="https://cdn.discordapp.com/avatars/839421874646548530/0c3f5a2ee26def577afe60154cd106cd.webp?size=1024")
        em.add_field(
            name="Syntax:", value="?enable <command or category>", inline=False)
        em.add_field(name="Categories are",value=f"{modes_available}",inline=False)
        em.add_field(name="Commands are",value=f"{commands_available}.\nSome commands can not be disabled",inline=False)    
        em.add_field(name="Example1:",
                    value="?enable fight", inline=False) 
        em.add_field(name="Example2:",
                    value="?enable moderation", inline=False)
        em.set_footer(text="To see the commands on each categories use ?help <category>")
        await ctx.send(embed=em)

    @help.command()
    @commands.cooldown(1, 3, commands.BucketType.user)
    async def disable(self,ctx):
        em = discord.Embed(
            title="Enable", description="Used to disable the commands or category", colour=randint(0, 0xffffff))
        em.set_thumbnail(
            url="https://cdn.discordapp.com/avatars/839421874646548530/0c3f5a2ee26def577afe60154cd106cd.webp?size=1024")
        em.add_field(
            name="Syntax:", value="?disable <command or category>", inline=False)
        em.add_field(name="Categories are",value=f"{modes_available}",inline=False)
        em.add_field(name="Commands are",value=f"{commands_available}",inline=False)    
        em.add_field(name="Example1:",
                    value="?disable fight", inline=False) 
        em.add_field(name="Example2:",
                    value="?disable moderation", inline=False)
        em.set_footer(text="To see the commands on each categories use ?help <category>")
        await ctx.send(embed=em)


    @help.command()
    @commands.cooldown(1, 3, commands.BucketType.user)
    async def ticketmention(self,ctx):
        em = discord.Embed(
            title="Mentioning a specific role people", description="Used to ping role people once someone created ticket", colour=randint(0, 0xffffff))
        em.set_thumbnail(
            url="https://cdn.discordapp.com/avatars/839421874646548530/0c3f5a2ee26def577afe60154cd106cd.webp?size=1024")
        em.add_field(
            name="Syntax:", value="?ticketmention <roles...>", inline=False)
        em.add_field(name="Example:",
                    value="?ticketmention @owner @mod", inline=False)
        em.set_footer(text="In this way you can add which are the roles to be pinged when someone create ticket")            
        await ctx.send(embed=em)


    @help.command()
    @commands.cooldown(1, 3, commands.BucketType.user)
    async def kick(self,ctx):
        em = discord.Embed(
            title="Kick", description="Kicks a member from the server", colour=randint(0, 0xffffff))
        em.set_thumbnail(
            url="https://cdn.discordapp.com/avatars/839421874646548530/0c3f5a2ee26def577afe60154cd106cd.webp?size=1024")
        em.add_field(
            name="Syntax:", value="?kick <member> <reason for kick(optional)>", inline=False)
        em.add_field(name="Example:",
                    value="?kick @Exploiter checking", inline=False)
        await ctx.send(embed=em)


    @help.command()
    @commands.cooldown(1, 3, commands.BucketType.user)
    async def ban(self,ctx):
        em = discord.Embed(
            title="Ban", description="Bans a member from the server", colour=randint(0, 0xffffff))
        em.set_thumbnail(
            url="https://cdn.discordapp.com/avatars/839421874646548530/0c3f5a2ee26def577afe60154cd106cd.webp?size=1024")
        em.add_field(
            name="Syntax:", value="?ban <member> <reason for ban(optional)>", inline=False)
        em.add_field(name="Example:",
                    value="?ban @Exploiter checking", inline=False)
        await ctx.send(embed=em)


    @help.command()
    @commands.cooldown(1, 3, commands.BucketType.user)
    async def mute(self,ctx):
        em = discord.Embed(
            title="Mute", description="Mutes a member in the server", colour=randint(0, 0xffffff))
        em.set_thumbnail(
            url="https://cdn.discordapp.com/avatars/839421874646548530/0c3f5a2ee26def577afe60154cd106cd.webp?size=1024")
        em.add_field(
            name="Syntax:", value="?mute <(Required time to mute in int)+``s-seconds,m-minutes,h-hours,d-days> <reason for mute(optional)>", inline=False)
        em.add_field(name="Example:",
                    value="?mute 10m @Exploiter checking", inline=False)
        await ctx.send(embed=em)


    @help.command()
    @commands.cooldown(1, 3, commands.BucketType.user)
    async def unmute(self,ctx):
        em = discord.Embed(
            title="Unmute", description="Unmutes a member in the server", colour=randint(0, 0xffffff))
        em.set_thumbnail(
            url="https://cdn.discordapp.com/avatars/839421874646548530/0c3f5a2ee26def577afe60154cd106cd.webp?size=1024")
        em.add_field(
            name="Syntax:", value="?unmute <member>", inline=False)
        em.add_field(name="Example:",
                    value="?unmute @Exploiter", inline=False)
        await ctx.send(embed=em)


    @help.command()
    @commands.cooldown(1, 3, commands.BucketType.user)
    async def unban(self,ctx):
        em = discord.Embed(
            title="Unban", description="Unbans a member in the server", colour=randint(0, 0xffffff))
        em.set_thumbnail(
            url="https://cdn.discordapp.com/avatars/839421874646548530/0c3f5a2ee26def577afe60154cd106cd.webp?size=1024")
        em.add_field(
            name="Syntax:", value="?unban <member> ", inline=False)
        em.add_field(name="Example:",
                    value="?unban @Exploiter", inline=False)
        await ctx.send(embed=em)


    @help.command()
    @commands.cooldown(1, 3, commands.BucketType.user)
    async def clear(self,ctx):
        em = discord.Embed(
            title="Clear", description="Clears the n-number of messages in the channel", colour=randint(0, 0xffffff))
        em.set_thumbnail(
            url="https://cdn.discordapp.com/avatars/839421874646548530/0c3f5a2ee26def577afe60154cd106cd.webp?size=1024")
        em.add_field(
            name="Syntax:", value="?clear <amount of messages to be cleared(optional and default=2)>", inline=False)
        em.add_field(name="Example:",
                    value="?clear 100", inline=False)
        await ctx.send(embed=em)


    @help.command()
    @commands.cooldown(1, 3, commands.BucketType.user)
    async def check(self,ctx):
        em = discord.Embed(
            title="Checking number of messages", description="Used to check the number of messages sent by a specific person on specific channel at a specific time", colour=randint(0, 0xffffff))
        em.set_thumbnail(
            url="https://cdn.discordapp.com/avatars/839421874646548530/0c3f5a2ee26def577afe60154cd106cd.webp?size=1024")
        em.add_field(
            name="Syntax:", value="?check <(integer(only available for day)) <#channel> <member>", inline=False)
        em.add_field(name="Example:",
                    value="?check 7 #chat @LifeOnWheels!#5395", inline=False)
        await ctx.send(embed=em)


    @help.command()
    @commands.cooldown(1, 3, commands.BucketType.user)
    async def gstart(self,ctx):
        em = discord.Embed(
            title="Gstart", description="Starts the give away in the current channel", colour=randint(0, 0xffffff))
        em.set_thumbnail(
            url="https://cdn.discordapp.com/avatars/839421874646548530/0c3f5a2ee26def577afe60154cd106cd.webp?size=1024")
        em.add_field(name="Warning:",
                    value="Need specific role(fixed by ``grole``) to use", inline=False)
        em.add_field(
            name="Syntax:", value="?gstart <(time in int)+``s-seconds,m-minutes,h-hours,d-days``> <(number of winners)+``w``> <prize>", inline=False)
        em.add_field(name="Example:",
                    value="?gstart 1m 1w Coins", inline=False)
        await ctx.send(embed=em)


    @help.command()
    @commands.cooldown(1, 3, commands.BucketType.user)
    async def gcreate(self,ctx):
        em = discord.Embed(
            title="Gcreate", description="Starts the give away in the given channel. Once the qns are answered", colour=randint(0, 0xffffff))
        em.set_thumbnail(
            url="https://cdn.discordapp.com/avatars/839421874646548530/0c3f5a2ee26def577afe60154cd106cd.webp?size=1024")
        em.add_field(name="Warning:",
                    value="Need specific role(fixed by ``grole``) to use", inline=False)
        em.add_field(name="Q1 Syntax:",
                    value="<#channel> Eg:``#giveaway``", inline="false")
        em.add_field(name="Q2 Syntax:",
                    value="<(time in int)+``s-seconds,m-minutes,h-hours,d-days``> Eg:``10m``", inline=False)
        em.add_field(name="Q3 Syntax:",
                    value="<Number of winners>. Eg:``2``", inline=False)
        em.add_field(name="Q4 Syntax:",
                    value="<prize of giveaway> Eg:``Coins``", inline=False)
        await ctx.send(embed=em)


    @help.command()
    @commands.cooldown(1, 3, commands.BucketType.user)
    async def set_welcome(self,ctx):
        em = discord.Embed(
            title="Welcome-Set-up", description="Used to setup welcome page when someone join your server", colour=randint(0, 0xffffff))
        em.set_thumbnail(
            url="https://cdn.discordapp.com/avatars/839421874646548530/0c3f5a2ee26def577afe60154cd106cd.webp?size=1024")
        em.add_field(name="Warning:",
                    value="if you need to cancel that welcome page. Use ``?cancel_welcome``", inline=False)
        em.add_field(name="Q1 Syntax:",
                    value="<#channel> Eg:``#welcome``", inline="false")
        em.add_field(name="Q2 Syntax:",
                    value="<Any message you want> Eg:``Welcome to our server``", inline=False)
        em.set_footer(text="Note:It will automatically mention the new joiners and then your msg will be added with it. \nUse ?cancel_welcome to cancel this welcome page")
        await ctx.send(embed=em)

    @help.command()
    @commands.cooldown(1, 3, commands.BucketType.user)
    async def set_leave(self,ctx):
        em = discord.Embed(
            title="Leave-Page-Set-up", description="Used to setup the leaver's page who left your server", colour=randint(0, 0xffffff))
        em.set_thumbnail(
            url="https://cdn.discordapp.com/avatars/839421874646548530/0c3f5a2ee26def577afe60154cd106cd.webp?size=1024")
        em.add_field(name="Warning:",
                    value="if you need to cancel that leave page. Use ``?cancel_leave``", inline=False)
        em.add_field(name="Q1 Syntax:",
                    value="<#channel> Eg:``#leave``", inline="false")
        em.add_field(name="Q2 Syntax:",
                    value="<Any message you want> Eg:``Bye man hope we see you soon``", inline=False)
        em.set_footer(text="Note:It will automatically mention the leaving people once they leave and then your msg will be added with it.\nUse ?cancel_leave to cancel the leave page")
        await ctx.send(embed=em)


    @help.command()
    @commands.cooldown(1, 3, commands.BucketType.user)
    async def remember(self,ctx):
        em = discord.Embed(
            title="Remember", description="Used to remember any tasks", colour=randint(0, 0xffffff))
        em.set_thumbnail(
            url="https://cdn.discordapp.com/avatars/839421874646548530/0c3f5a2ee26def577afe60154cd106cd.webp?size=1024")
        em.add_field(name="Command:",
                    value="``?remember``", inline=False)
        em.add_field(name="Q1 Syntax:",
                    value="<%yyyy/%mm/%dd hh:mm:ss> Eg:``2021-11-09 23:50:41``", inline="false")
        em.add_field(name="Q2 Syntax:",
                    value="``<Any tasks you want to remind>`` Eg:``My friend's birthday``", inline=False)
        em.add_field(name="Q3 Syntax:",
                    value="``<Ping the people whom you want to remind>`` Eg:``@EXPLOITER @OWNER``", inline=False) 
        em.set_footer(text="Note: Enter the time in 24hrs format and you can only schedule future tasks")                       
        await ctx.send(embed=em)

    @help.command()
    @commands.cooldown(1, 3, commands.BucketType.user)
    async def greroll(self,ctx):
        em = discord.Embed(
            title="Greroll", description="Reroll the ended giveaway", colour=randint(0, 0xffffff))
        em.set_thumbnail(
            url="https://cdn.discordapp.com/avatars/839421874646548530/0c3f5a2ee26def577afe60154cd106cd.webp?size=1024")
        em.add_field(name="Warning:",
                    value="Need specific role(fixed by ``grole``) to use", inline=False)
        em.add_field(
            name="Syntax:", value="?greroll <#channel-name in which the giveaway ended> <id of the ended giveaway>", inline=False)
        em.add_field(name="Example:",
                    value="?greroll #giveaway 897425147110232094", inline=False)
        await ctx.send(embed=em)


    @help.command()
    @commands.cooldown(1, 3, commands.BucketType.user)
    async def gend(self,ctx):
        em = discord.Embed(
            title="Gend", description="Ends the active giveaway", colour=randint(0, 0xffffff))
        em.set_thumbnail(
            url="https://cdn.discordapp.com/avatars/839421874646548530/0c3f5a2ee26def577afe60154cd106cd.webp?size=1024")
        em.add_field(name="Warning:",
                    value="Need specific role(fixed by ``grole``) to use", inline=False)
        em.add_field(
            name="Syntax:", value="?gend <#channel-name in which the giveaway is going> <id of the active giveaway>", inline=False)
        em.add_field(name="Example:",
                    value="?gend #giveaway 897425147110232094", inline=False)
        await ctx.send(embed=em)

    @help.command()
    @commands.cooldown(1, 3, commands.BucketType.user)
    async def gdrop(self,ctx):
        em = discord.Embed(
            title="Gdrop", description="Used to drop the giveaway", colour=randint(0, 0xffffff))
        em.set_thumbnail(
            url="https://cdn.discordapp.com/avatars/839421874646548530/0c3f5a2ee26def577afe60154cd106cd.webp?size=1024")
        em.add_field(name="Warning:",
                    value="Need specific role(fixed by ``grole``) to use", inline=False)
        em.add_field(
            name="Syntax:", value="?gdrop <#channel-name in which the giveaway is going> <id of the active giveaway>", inline=False)
        em.add_field(name="Example:",
                    value="?gdrop #giveaway 897425147110232094", inline=False)
        await ctx.send(embed=em)

    @help.command()
    @commands.cooldown(1, 3, commands.BucketType.user)
    async def grole(self,ctx):
        em = discord.Embed(
            title="Grole", description="Use this command to fix a role for the giveaway", colour=randint(0, 0xffffff))
        em.set_thumbnail(
            url="https://cdn.discordapp.com/avatars/839421874646548530/0c3f5a2ee26def577afe60154cd106cd.webp?size=1024")
        em.add_field(name="Syntax:",
                    value="``?grole<@specific_role>``", inline=False) 
        em.add_field(name="Example:",
                    value="``?grole @giveaway``", inline=False)
        await ctx.send(embed=em)

    @help.command()
    @commands.cooldown(1, 3, commands.BucketType.user)
    async def start(self,ctx):
        em = discord.Embed(
            title="Start", description="Use this command to start playing the games", colour=randint(0, 0xffffff))
        em.set_thumbnail(
            url="https://cdn.discordapp.com/avatars/839421874646548530/0c3f5a2ee26def577afe60154cd106cd.webp?size=1024")
        em.add_field(name="Command:",
                    value="``?start``", inline=False)
        await ctx.send(embed=em)


    @help.command()
    @commands.cooldown(1, 3, commands.BucketType.user)
    async def beg(self,ctx):
        em = discord.Embed(
            title="Beg", description="Use this command to get training potion(Less amount high probability)", colour=randint(0, 0xffffff))
        em.set_thumbnail(
            url="https://cdn.discordapp.com/avatars/839421874646548530/0c3f5a2ee26def577afe60154cd106cd.webp?size=1024")
        em.add_field(name="Command:",
                    value="``?beg``", inline=False)
        await ctx.send(embed=em)


    @help.command()
    @commands.cooldown(1, 3, commands.BucketType.user)
    async def resources(self,ctx):
        em = discord.Embed(
            title="Resources", description="Use this command to get training potion(Higher amount less probability)", colour=randint(0, 0xffffff))
        em.set_thumbnail(
            url="https://cdn.discordapp.com/avatars/839421874646548530/0c3f5a2ee26def577afe60154cd106cd.webp?size=1024")
        em.add_field(name="Command:",
                    value="``?resources``", inline=False)
        await ctx.send(embed=em)


    @help.command()
    @commands.cooldown(1, 3, commands.BucketType.user)
    async def fight(self,ctx):
        em = discord.Embed(
            title="Fight", description="Use this command to attack other players and gain potions", colour=randint(0, 0xffffff))
        em.set_thumbnail(
            url="https://cdn.discordapp.com/avatars/839421874646548530/0c3f5a2ee26def577afe60154cd106cd.webp?size=1024")
        em.add_field(name="Syntax:",
                    value="?fight <Tag other player>", inline=False)
        em.add_field(name="Example:",
                    value="``?fight @EXPLOITER#6889``", inline=False)
        await ctx.send(embed=em)


    @help.command()
    @commands.cooldown(1, 3, commands.BucketType.user)
    async def scout(self,ctx):
        em = discord.Embed(
            title="Scout", description="Used to scout other players might,potions and troop count", colour=randint(0, 0xffffff))
        em.set_thumbnail(
            url="https://cdn.discordapp.com/avatars/839421874646548530/0c3f5a2ee26def577afe60154cd106cd.webp?size=1024")
        em.add_field(name="Syntax:",
                    value="?scout <Tag other player>", inline=False)
        em.add_field(name="Example:",
                    value="``?scout @EXPLOITER#6889``", inline=False)
        await ctx.send(embed=em)


    @help.command()
    @commands.cooldown(1, 3, commands.BucketType.user)
    async def profile(self,ctx):
        em = discord.Embed(
            title="Profile", description="Used to see our troops, might and potions count and enemies might", colour=randint(0, 0xffffff))
        em.set_thumbnail(
            url="https://cdn.discordapp.com/avatars/839421874646548530/0c3f5a2ee26def577afe60154cd106cd.webp?size=1024")
        em.add_field(
            name="Type1:", value="``?profile``- Sends our troops,potion and might total in dm. If it is blocked it will send in the channel", inline=False)
        em.add_field(name="Type2:",
                    value="?profile <Tag others> Eg:``?profile @EXPLOITER#6889``. Sends enemy might", inline=False)
        await ctx.send(embed=em)

    @help.command()
    @commands.cooldown(1, 3, commands.BucketType.user)
    async def song(self,ctx):
        em = discord.Embed(
            title="Song", description="It sends the url of the spotify song if playing", colour=randint(0, 0xffffff))
        em.set_thumbnail(
            url="https://cdn.discordapp.com/avatars/839421874646548530/0c3f5a2ee26def577afe60154cd106cd.webp?size=1024")
        em.add_field(
            name="Type1:", value="``?song``- Sends the url of your playing song", inline=False)
        em.add_field(name="Type2:",
                    value="?song <Tag others> Eg:``?song @EXPLOITER#6889``. Sends the url of the playing song of exploiter", inline=False)
        await ctx.send(embed=em)

    @help.command()
    @commands.cooldown(1, 3, commands.BucketType.user)
    async def track(self,ctx):
        em = discord.Embed(
            title="Track", description="Just send the photo of track of the playing song", colour=randint(0, 0xffffff))
        em.set_thumbnail(
            url="https://cdn.discordapp.com/avatars/839421874646548530/0c3f5a2ee26def577afe60154cd106cd.webp?size=1024")
        em.add_field(
            name="Type1:", value="``?track``- Sends your playing song photo", inline=False)
        em.add_field(name="Type2:",
                    value="?track <Tag others> Eg:``?track @EXPLOITER#6889``. Sends the photo of track of playing song of the tagged member", inline=False)
        await ctx.send(embed=em)        



    @help.command()
    @commands.cooldown(1, 3, commands.BucketType.user)
    async def rip(self,ctx):
        em = discord.Embed(
            title="RIP :skull_crossbones: :skull_crossbones:", description="Used to make rip images of others", colour=randint(0, 0xffffff))
        em.set_thumbnail(
            url="https://cdn.discordapp.com/avatars/839421874646548530/0c3f5a2ee26def577afe60154cd106cd.webp?size=1024")
        em.add_field(
            name="Type1:", value="``?rip``- Sends your rip image", inline=False)
        em.add_field(name="Type2:",
                    value="?profile <Tag others> Eg:``?rip @EXPLOITER#6889``. Sends the rip image of EXPLOITER", inline=False)
        await ctx.send(embed=em)

    @help.command()
    @commands.cooldown(1, 3, commands.BucketType.user)
    async def wanted(self,ctx):
        em = discord.Embed(
            title="Wanted :moneybag: :moneybag:", description="Sends the wanted poster", colour=randint(0, 0xffffff))
        em.set_thumbnail(
            url="https://cdn.discordapp.com/avatars/839421874646548530/0c3f5a2ee26def577afe60154cd106cd.webp?size=1024")
        em.add_field(
            name="Type1:", value="``?wanted``- Sends the wanted poster of you", inline=False)
        em.add_field(name="Type2:",
                    value="?wanted <Tag others> Eg:``?wanted @EXPLOITER#6889``. Sends the wanted poster of EXPLOITER", inline=False)
        await ctx.send(embed=em)        



    @help.command()
    @commands.cooldown(1, 3, commands.BucketType.user)
    async def info(self,ctx):
        em = discord.Embed(
            title="Information of Members", description="Used to get the information of the mentioned user", colour=randint(0, 0xffffff))
        em.set_thumbnail(
            url="https://cdn.discordapp.com/avatars/839421874646548530/0c3f5a2ee26def577afe60154cd106cd.webp?size=1024")
        em.add_field(
            name="Type1:", value="``?info``- Sends the information of the author", inline=False)
        em.add_field(name="Type2:",
                    value="?info <Mention people whose inf u want to know> Eg:``?info @EXPLOITER#6889``. Sends the mentioned people information", inline=False)
        await ctx.send(embed=em)


    @help.command()
    @commands.cooldown(1, 3, commands.BucketType.user)
    async def tran(self,ctx):
        em = discord.Embed(
            title="Translator", description="Used to translate message in our required language", colour=randint(0, 0xffffff))
        em.set_thumbnail(
            url="https://cdn.discordapp.com/avatars/839421874646548530/0c3f5a2ee26def577afe60154cd106cd.webp?size=1024")
        em.add_field(
            name="Type1:", value="``?tran <lang> <msg>``- Translates the message", inline=False)
        em.add_field(
            name="Example:", value="``?tran en Guten Morgen`` -Output: Good Morning", inline=False)    
        em.add_field(name="Type2:",
                    value="``?tran <lang> <msg id>``- Translates the content of the msg id", inline=False)
        em.add_field(
            name="Example:", value="``?tran en 906530461784866826``", inline=False) 
        em.set_footer(text="You can refer the below file to translate to any of the languages that is available")             
        await ctx.send(embed=em)
        await ctx.send(file=discord.File(".//assets//trans_prefix.txt"))

    @help.command()
    @commands.cooldown(1, 3, commands.BucketType.user)
    async def potion(self,ctx):
        em = discord.Embed(
            title="Potion", description="Used to see our potion count", colour=randint(0, 0xffffff))
        em.set_thumbnail(
            url="https://cdn.discordapp.com/avatars/839421874646548530/0c3f5a2ee26def577afe60154cd106cd.webp?size=1024")
        em.add_field(name="Command:",
                    value="``?potion``", inline=False)
        await ctx.send(embed=em)


    @help.command()
    @commands.cooldown(1, 3, commands.BucketType.user)
    async def train(self,ctx):
        em = discord.Embed(
            title="Train", description="Used to train troops from tier 1-3", colour=randint(0, 0xffffff))
        em.set_thumbnail(
            url="https://cdn.discordapp.com/avatars/839421874646548530/0c3f5a2ee26def577afe60154cd106cd.webp?size=1024")
        em.add_field(name="Syntax:",
                    value="?train <tier> <amount>", inline=False)
        em.add_field(name="Example:", value="``?train 3 1000``")
        await ctx.send(embed=em)


    @help.command()
    @commands.cooldown(1, 3, commands.BucketType.user)
    async def train_cost(self,ctx):
        em = discord.Embed(
            title="Cost and Might of troops", description="Use this command to see the troops might and cost of training", colour=randint(0, 0xffffff))
        em.set_thumbnail(
            url="https://cdn.discordapp.com/avatars/839421874646548530/0c3f5a2ee26def577afe60154cd106cd.webp?size=1024")
        em.add_field(name="Command:",
                    value="``?train_cost``", inline=False)
        await ctx.send(embed=em)




    @help.command()
    @commands.cooldown(1, 3, commands.BucketType.user)
    async def cancel_voice_logs(self,ctx):
        em = discord.Embed(
            title="Cancelling voice logs", description="Use this to cancel voice loging", colour=randint(0, 0xffffff))
        em.set_thumbnail(
            url="https://cdn.discordapp.com/avatars/839421874646548530/0c3f5a2ee26def577afe60154cd106cd.webp?size=1024")
        em.add_field(name="Command:",
                    value="``?cancel_voice_logs``", inline=False)
        await ctx.send(embed=em)

    @help.command()
    @commands.cooldown(1, 3, commands.BucketType.user)
    async def cancel_action_logs(self,ctx):
        em = discord.Embed(
            title="Cancelling action logging", description="Used to cancel the action log", colour=randint(0, 0xffffff))
        em.set_thumbnail(
            url="https://cdn.discordapp.com/avatars/839421874646548530/0c3f5a2ee26def577afe60154cd106cd.webp?size=1024")
        em.add_field(name="Command:",
                    value="``?cancel_action_logs``", inline=False)
        await ctx.send(embed=em)



    @help.command()
    @commands.cooldown(1, 3, commands.BucketType.user)
    async def fact(self,ctx):
        em = discord.Embed(
            title="Facts", description="Sends a random facte", colour=randint(0, 0xffffff))
        em.set_thumbnail(
            url="https://cdn.discordapp.com/avatars/839421874646548530/0c3f5a2ee26def577afe60154cd106cd.webp?size=1024")
        em.add_field(name="Command:",
                    value="``?fact``", inline=False)
        await ctx.send(embed=em)

    @help.command()
    @commands.cooldown(1, 3, commands.BucketType.user)
    async def lock(self,ctx):
        em = discord.Embed(
            title="Lock and unlock channel", description="Used to lock and unlock channel to prevent default roles from messaging", colour=randint(0, 0xffffff))
        em.set_thumbnail(
            url="https://cdn.discordapp.com/avatars/839421874646548530/0c3f5a2ee26def577afe60154cd106cd.webp?size=1024")
        em.add_field(name="Command:",
                    value="``?lock``", inline=False)
        em.set_footer(text="If the channel is locked it will unlock the channel else it will lock the channel")            
        await ctx.send(embed=em)


    @help.command()
    @commands.cooldown(1, 3, commands.BucketType.user)
    async def current_count(self,ctx):
        em = discord.Embed(
            title="Current_count", description="Sends the last count in the counting channel", colour=randint(0, 0xffffff))
        em.set_thumbnail(
            url="https://cdn.discordapp.com/avatars/839421874646548530/0c3f5a2ee26def577afe60154cd106cd.webp?size=1024")
        em.add_field(name="Command:",
                    value="``?current_count``", inline=False)
        await ctx.send(embed=em)

    @help.command()
    @commands.cooldown(1, 3, commands.BucketType.user)
    async def repair(self,ctx):
        em = discord.Embed(
            title="Repair", description="Use this command to repair bot if music commands are not working properly", colour=randint(0, 0xffffff))
        em.set_thumbnail(
            url="https://cdn.discordapp.com/avatars/839421874646548530/0c3f5a2ee26def577afe60154cd106cd.webp?size=1024")
        em.add_field(name="Command:",
                    value="``?repair``", inline=False)
        em.set_footer(text="⚠️⚠️T️h️i️s️ ️w️i️l️️l️ ️s️top and remove and every queued song if u done already⚠️⚠️")            
        await ctx.send(embed=em)

    @help.command()
    @commands.cooldown(1, 3, commands.BucketType.user)
    async def meme(self,ctx):
        em = discord.Embed(
            title="Meme", description="Sends a random meme", colour=randint(0, 0xffffff))
        em.set_thumbnail(
            url="https://cdn.discordapp.com/avatars/839421874646548530/0c3f5a2ee26def577afe60154cd106cd.webp?size=1024")
        em.add_field(name="Command:",
                    value="``?meme``", inline=False)
        await ctx.send(embed=em)

    @help.command()
    @commands.cooldown(1, 3, commands.BucketType.user)
    async def calculator(self,ctx):
        em = discord.Embed(
            title="calculator", description="Sends a calculator full of buttons which you can interact", colour=randint(0, 0xffffff))
        em.set_thumbnail(
            url="https://cdn.discordapp.com/avatars/839421874646548530/0c3f5a2ee26def577afe60154cd106cd.webp?size=1024")
        em.add_field(name="Command:",
                    value="``?calculator``", inline=False)
        em.set_footer(text="It has both normal and scientific calculator!")            
        await ctx.send(embed=em)    

    @help.command()
    @commands.cooldown(1, 3, commands.BucketType.user)
    async def command(self,ctx):
        em = discord.Embed(
            title="Commands", description="Shows the commands available", colour=randint(0, 0xffffff))
        em.set_thumbnail(
            url="https://cdn.discordapp.com/avatars/839421874646548530/0c3f5a2ee26def577afe60154cd106cd.webp?size=1024")
        em.add_field(name="Commands:",
                    value=f"{commands_available}", inline=False)
        em.set_footer(text="To know how to use each command use ?help <command>")            
        await ctx.send(embed=em)

    @help.command()
    @commands.cooldown(1, 3, commands.BucketType.user)
    async def category(self,ctx):
        em = discord.Embed(
            title="Category", description="Shows the categories that are available", colour=randint(0, 0xffffff))
        em.set_thumbnail(
            url="https://cdn.discordapp.com/avatars/839421874646548530/0c3f5a2ee26def577afe60154cd106cd.webp?size=1024")
        em.add_field(name="Categories:",
                    value=f"{modes_available}", inline=False)
        em.set_footer(text="To know how to use each command use ?help <command>")                 
        await ctx.send(embed=em)


    @help.command()
    @commands.cooldown(1, 3, commands.BucketType.user)
    async def globalchatstart(self,ctx):
        em = discord.Embed(
            title="Global-Chat-Starter", description="Starts the global chat in the specified channel", colour=randint(0, 0xffffff))
        em.set_thumbnail(
            url="https://cdn.discordapp.com/avatars/839421874646548530/0c3f5a2ee26def577afe60154cd106cd.webp?size=1024")
        em.add_field(name="Syntax:",
                    value="``?globalchatstart <channel where you want to start global chat>``", inline=False)
        em.add_field(name="Value:",
                    value="``?globalchatstart #global-chat``-It starts the global chat in the #global-chat channel", inline=False)                    
        await ctx.send(embed=em)    

    @help.command()
    @commands.cooldown(1, 3, commands.BucketType.user)
    async def globalchatstop(self,ctx):
        em = discord.Embed(
            title="Global-Chat-Stop", description="Stops the global-chat in your server", colour=randint(0, 0xffffff))
        em.set_thumbnail(
            url="https://cdn.discordapp.com/avatars/839421874646548530/0c3f5a2ee26def577afe60154cd106cd.webp?size=1024")
        em.add_field(name="Command:",
                    value="``?globalchatstop``", inline=False)
        await ctx.send(embed=em)            


    @help.command()
    @commands.cooldown(1, 3, commands.BucketType.user)
    async def cancel_welcome(self,ctx):
        em = discord.Embed(
            title="Cancel-Welcome", description="Used to cancel the welcome page", colour=randint(0, 0xffffff))
        em.set_thumbnail(
            url="https://cdn.discordapp.com/avatars/839421874646548530/0c3f5a2ee26def577afe60154cd106cd.webp?size=1024")
        em.add_field(name="Command:",
                    value="``?cancel_welcome``", inline=False)
        await ctx.send(embed=em)


    @help.command()
    @commands.cooldown(1, 3, commands.BucketType.user)
    async def cancel_leave(self,ctx):
        em = discord.Embed(
            title="Cancelling-leave", description="Used to cancel the leave page", colour=randint(0, 0xffffff))
        em.set_thumbnail(
            url="https://cdn.discordapp.com/avatars/839421874646548530/0c3f5a2ee26def577afe60154cd106cd.webp?size=1024")
        em.add_field(name="Command:",
                    value="``?cancel_leave``", inline=False)
        await ctx.send(embed=em)        



    @help.command()
    @commands.cooldown(1, 3, commands.BucketType.user)
    async def serverinfo(self,ctx):
        em = discord.Embed(
            title="Server Info", description="Sends many information about the server", colour=randint(0, 0xffffff))
        em.set_thumbnail(
            url="https://cdn.discordapp.com/avatars/839421874646548530/0c3f5a2ee26def577afe60154cd106cd.webp?size=1024")
        em.add_field(name="Command:",
                    value="``?serverinfo``", inline=False)
        await ctx.send(embed=em)        

    @help.command()
    @commands.cooldown(1, 3, commands.BucketType.user)
    async def ping(self,ctx):
        em = discord.Embed(
            title="Ping", description="Shows the bot latency", colour=randint(0, 0xffffff))
        em.set_thumbnail(
            url="https://cdn.discordapp.com/avatars/839421874646548530/0c3f5a2ee26def577afe60154cd106cd.webp?size=1024")
        em.add_field(name="Command:",
                    value="``?ping``", inline=False)
        await ctx.send(embed=em)


    @help.command()
    @commands.cooldown(1, 3, commands.BucketType.user)
    async def fact_cat(self,ctx):
        em = discord.Embed(
            title="Cat facts", description="Sends a random fact about cat", colour=randint(0, 0xffffff))
        em.set_thumbnail(
            url="https://cdn.discordapp.com/avatars/839421874646548530/0c3f5a2ee26def577afe60154cd106cd.webp?size=1024")
        em.add_field(name="Command:",
                    value="``?fact_cat``", inline=False)
        await ctx.send(embed=em)  

    @help.command()
    @commands.cooldown(1, 3, commands.BucketType.user)
    async def dog(self,ctx):
        em = discord.Embed(
            title="Dog", description="Sends a random dog photo", colour=randint(0, 0xffffff))
        em.set_thumbnail(
            url="https://cdn.discordapp.com/avatars/839421874646548530/0c3f5a2ee26def577afe60154cd106cd.webp?size=1024")
        em.add_field(name="Command:",
                    value="``?dog``", inline=False)
        await ctx.send(embed=em)    


    @help.command()
    @commands.cooldown(1, 3, commands.BucketType.user)
    async def bored(self,ctx):
        em = discord.Embed(
            title="Bored", description="Tells some tasks to do to prevent booooooring :sleepy: :sleepy:", colour=randint(0, 0xffffff))
        em.set_thumbnail(
            url="https://cdn.discordapp.com/avatars/839421874646548530/0c3f5a2ee26def577afe60154cd106cd.webp?size=1024")
        em.add_field(name="Command:",
                    value="``?bored``", inline=False)
        await ctx.send(embed=em)    

    @help.command()
    @commands.cooldown(1, 3, commands.BucketType.user)
    async def ip(self,ctx):
        em = discord.Embed(
            title="Ip", description="Used to find the landmark near the ip address", colour=randint(0, 0xffffff))
        em.set_thumbnail(
            url="https://cdn.discordapp.com/avatars/839421874646548530/0c3f5a2ee26def577afe60154cd106cd.webp?size=1024")
        em.add_field(name="Syntax:",
                    value="Command: ``?ip 117.200.149.23`` -Sends the landmark near the ip address. \nNote:ip-address will be in the above example format.You can change the interger to find the landmark near that ip address ", inline=False)
        await ctx.send(embed=em)         


    @help.command()
    @commands.cooldown(1, 3, commands.BucketType.user)
    async def hack(self,ctx):
        em = discord.Embed(
            title="Hacking", description="Used to hack others", colour=randint(0, 0xffffff))
        em.set_thumbnail(
            url="https://cdn.discordapp.com/avatars/839421874646548530/0c3f5a2ee26def577afe60154cd106cd.webp?size=1024")
        em.add_field(name="Syntax:",
                    value="Command: ``?hack @EXPLOITER#6889`` -Sends some hacking messages", inline=False)
        await ctx.send(embed=em)

    
    @help.command()
    @commands.cooldown(1, 3, commands.BucketType.user)
    async def slap(self,ctx):
        em = discord.Embed(
            title="Slap", description="Used to slap others", colour=randint(0, 0xffffff))
        em.set_thumbnail(
            url="https://cdn.discordapp.com/avatars/839421874646548530/0c3f5a2ee26def577afe60154cd106cd.webp?size=1024")
        em.add_field(name="Syntax:",
                    value="Command: ``?slap @DANKMEMER`` -Slaps Dank Memer", inline=False)
        await ctx.send(embed=em)    

    @help.command()
    @commands.cooldown(1, 3, commands.BucketType.user)
    async def punch(self,ctx):
        em = discord.Embed(
            title="Punch", description="Used to punch others", colour=randint(0, 0xffffff))
        em.set_thumbnail(
            url="https://cdn.discordapp.com/avatars/839421874646548530/0c3f5a2ee26def577afe60154cd106cd.webp?size=1024")
        em.add_field(name="Syntax:",
                    value="Command: ``?punch @DANKMEMER`` -punches Dank Memer", inline=False)
        await ctx.send(embed=em)        

    @help.command()
    @commands.cooldown(1, 3, commands.BucketType.user)
    async def quote(self,ctx):
        em = discord.Embed(
            title="Quote", description="Sends the quote randomly and for each day", colour=randint(0, 0xffffff))
        em.set_thumbnail(
            url="https://cdn.discordapp.com/avatars/839421874646548530/0c3f5a2ee26def577afe60154cd106cd.webp?size=1024")
        em.add_field(name="Type 1:",
                    value="Command: ``?quote`` -Sends a random quote", inline=False)
        em.add_field(name="Type 2:",
                    value="Command: ``?quote today`` -Sends the quote of today", inline=False)
        await ctx.send(embed=em)


    @help.command()
    @commands.cooldown(1, 3, commands.BucketType.user)
    async def invite(self,ctx):
        em = discord.Embed(
            title="Invite", description="Sends the invite link of the bot", colour=randint(0, 0xffffff))
        em.set_thumbnail(
            url="https://cdn.discordapp.com/avatars/839421874646548530/0c3f5a2ee26def577afe60154cd106cd.webp?size=1024")
        em.add_field(name="Command:",
                    value="``?invite``", inline=False)
        await ctx.send(embed=em)

    @help.command()
    @commands.cooldown(1, 3, commands.BucketType.user)
    async def vote(self,ctx):
        em = discord.Embed(
            title="Upvote", description="Sends the upvote link for the bot", colour=randint(0, 0xffffff))
        em.set_thumbnail(
            url="https://cdn.discordapp.com/avatars/839421874646548530/0c3f5a2ee26def577afe60154cd106cd.webp?size=1024")
        em.add_field(name="Command:",
                    value="``?vote``", inline=False)
        await ctx.send(embed=em)


    @help.command()
    @commands.cooldown(1, 3, commands.BucketType.user)
    async def close(self,ctx):
        em = discord.Embed(
            title="Close", description="Used to close the bot for updates(Only available for developers)", colour=randint(0, 0xffffff))
        em.set_thumbnail(
            url="https://cdn.discordapp.com/avatars/839421874646548530/0c3f5a2ee26def577afe60154cd106cd.webp?size=1024")
        em.add_field(name="Command:",
                    value="``?close``", inline=False)
        await ctx.send(embed=em)


    @help.command()
    @commands.cooldown(1, 3, commands.BucketType.user)
    async def avatar(self,ctx):
        em = discord.Embed(
            title="Avatar", description="Sends the avatar of required one link", colour=randint(0, 0xffffff))
        em.set_thumbnail(
            url="https://cdn.discordapp.com/avatars/839421874646548530/0c3f5a2ee26def577afe60154cd106cd.webp?size=1024")
        em.add_field(name="Type 1:",
                    value="Command: ``?avatar`` -Sends our own avatar with link", inline=False)
        em.add_field(name="Type 2:",
                    value="Command: ``?avatar @EXPLOITER#6889`` -Sends the avatar of @EXPLOITER#6889", inline=False)
        await ctx.send(embed=em)



    @help.command()
    @commands.cooldown(1, 3, commands.BucketType.user)
    async def aki(self,ctx):
        desc_helpme = '__**HOW TO PLAY**__\n\nUse the `?aki` command followed by the game mode you want to play. Here is ' \
          'a list of currently available game modes : **people, animals, objects**.\nFor example : `.guess people`\n\n__**GAME MODES**__\n\n' \
          '**People** : This is the game mode for guessing people (fictional or real)\n**Animals** : ' \
          'This is the game mode for guessing animals\n**Objects** : This is the game mode for guessing objects' \
          '\n\n__**MISCELLANEOUS**__\n\n**1.**Wait until all emojis are displayed before adding your reaction, or' \
          ' else it will not register it and you will have to react again once it is done displaying' \
          '\n**2.**The game ends in 45 seconds if you do not answer the question by reacting with the right' \
          ' emoji\n**3.** The bot might sometimes be slow, please be patient and wait for it to ask you the questions. If it is stuck, do not worry the game will automatically end in 30 seconds and you can start playing again\n**4.** Only one person can play at a time\n\n' \
          '__**EMOJI MEANINGS**__\n\n✅ = This emoji means "yes"\n❌ = This emoji means "no"\n🤷 = This emoji means' \
          '"I do not know"\n👍 = This emoji means "probably"\n👎 = This emoji means "probably not"\n⏮ = This ' \
          'emoji repeats the question before\n🛑 = This emoji ends the game being played'
        embed_var_helpme = discord.Embed(description=desc_helpme, color=0x00FF00)
        embed_var_helpme.set_thumbnail(
            url="https://cdn.discordapp.com/avatars/839421874646548530/0c3f5a2ee26def577afe60154cd106cd.webp?size=1024")
        await ctx.send(embed=embed_var_helpme)



    @help.command()
    @commands.cooldown(1, 3, commands.BucketType.user)
    async def voice_logs(self,ctx):
        em = discord.Embed(
            title="Channel for voice logging", description="Use this command to fix the channel for voice log", colour=randint(0, 0xffffff))
        em.set_thumbnail(
            url="https://cdn.discordapp.com/avatars/839421874646548530/0c3f5a2ee26def577afe60154cd106cd.webp?size=1024")
        em.add_field(name="Syntax:",
                    value="``?voice_logs<#specific channel>``", inline=False) 
        em.add_field(name="Example:",
                    value="``?voice_logs #general``", inline=False)
        await ctx.send(embed=em)


    @help.command()
    @commands.cooldown(1, 3, commands.BucketType.user)
    async def action_logs(self,ctx):
        em = discord.Embed(
            title="Channel for action logging", description="Use this command to fix the channel for action log", colour=randint(0, 0xffffff))
        em.set_thumbnail(
            url="https://cdn.discordapp.com/avatars/839421874646548530/0c3f5a2ee26def577afe60154cd106cd.webp?size=1024")
        em.add_field(name="Syntax:",
                    value="``?action_logs<#specific channel>``", inline=False) 
        em.add_field(name="Example:",
                    value="``?action_logs #general``", inline=False)
        await ctx.send(embed=em)



    @help.command()
    @commands.cooldown(1, 3, commands.BucketType.user)
    async def emoji_list(self,ctx):
        em = discord.Embed(
            title="Sends the list of emoji names based on ur query", description="Use this command to send the list of emojis available on your message", colour=randint(0, 0xffffff))
        em.set_thumbnail(
            url="https://cdn.discordapp.com/avatars/839421874646548530/0c3f5a2ee26def577afe60154cd106cd.webp?size=1024")
        em.add_field(name="Syntax:",
                    value="``?emoji_list<message>``", inline=False) 
        em.add_field(name="Example:",
                    value="``?emoji_list bye``", inline=False)
        em.set_footer(text="Some emojis doesn't match with the thing you search")            
        await ctx.send(embed=em)


    @help.command()
    @commands.cooldown(1, 3, commands.BucketType.user)
    async def emoji_search(self,ctx):
        em = discord.Embed(
            title="Sends 5 emojis based on ur query", description="Use this command to send 5 emoji based on the title", colour=randint(0, 0xffffff))
        em.set_thumbnail(
            url="https://cdn.discordapp.com/avatars/839421874646548530/0c3f5a2ee26def577afe60154cd106cd.webp?size=1024")
        em.add_field(name="Syntax:",
                    value="``?emoji_search<message>``", inline=False) 
        em.add_field(name="Example:",
                    value="``?emoji_search bye``", inline=False)
        em.set_footer(text="Some emojis doesn't match with the thing you search")            
        await ctx.send(embed=em)


    @help.command()
    @commands.cooldown(1, 3, commands.BucketType.user)
    async def emoji(self,ctx):
        em = discord.Embed(
            title="Sends the emoji based on ur query", description="Use this command to send the emoji based on the title", colour=randint(0, 0xffffff))
        em.set_thumbnail(
            url="https://cdn.discordapp.com/avatars/839421874646548530/0c3f5a2ee26def577afe60154cd106cd.webp?size=1024")
        em.add_field(name="Syntax:",
                    value="``?emoji<message>``", inline=False) 
        em.add_field(name="Example:",
                    value="``?emoji bye``", inline=False)
        em.set_footer(text="Some emojis doesn't match with the thing you search. You can use ?emoji_list<message> to get the names of emoji available")            
        await ctx.send(embed=em)


    @help.command()
    @commands.cooldown(1, 3, commands.BucketType.user)
    async def channel_status(self,ctx):
        em = discord.Embed(
            title="Find average message per day of each person and check the health of channel", description="used to send the number of messages in this channel on specific days", colour=randint(0, 0xffffff))
        em.set_thumbnail(
            url="https://cdn.discordapp.com/avatars/839421874646548530/0c3f5a2ee26def577afe60154cd106cd.webp?size=1024")
        em.add_field(name="Syntax:",
                    value="``?channel_status <integer(days of messages)> <#specific channel>``", inline=False) 
        em.add_field(name="Example:",
                    value="``?channel_status 20 #general``", inline=False)
        await ctx.send(embed=em)


    @help.command()
    @commands.cooldown(1, 3, commands.BucketType.user)
    async def caki(self,ctx):
        em = discord.Embed(
            title="Channel for akinator", description="Use this command to fix the channel for akinator", colour=randint(0, 0xffffff))
        em.set_thumbnail(
            url="https://cdn.discordapp.com/avatars/839421874646548530/0c3f5a2ee26def577afe60154cd106cd.webp?size=1024")
        em.add_field(name="Syntax:",
                    value="``?caki<#specific channel>``", inline=False) 
        em.add_field(name="Example:",
                    value="``?caki #general``", inline=False)
        await ctx.send(embed=em)


    @help.command()
    @commands.cooldown(1, 3, commands.BucketType.user)
    async def change_count(self,ctx):
        em = discord.Embed(
            title="Change the Channel for Counting game", description="Use this command to change the channel for counting game without resetting the counter", colour=randint(0, 0xffffff))
        em.set_thumbnail(
            url="https://cdn.discordapp.com/avatars/839421874646548530/0c3f5a2ee26def577afe60154cd106cd.webp?size=1024")
        em.add_field(name="Syntax:",
                    value="``?change_count <#specific channel>``", inline=False) 
        em.add_field(name="Example:",
                    value="``?change_count #counter``", inline=False)
        await ctx.send(embed=em)


    @help.command()
    @commands.cooldown(1, 3, commands.BucketType.user)
    async def cancel_count(self,ctx):
        em = discord.Embed(
            title="Stops count game", description="Use this command to stop the count game", colour=randint(0, 0xffffff))
        em.set_thumbnail(
            url="https://cdn.discordapp.com/avatars/839421874646548530/0c3f5a2ee26def577afe60154cd106cd.webp?size=1024")
        em.add_field(name="Commands",
                    value="``?cancel_count``", inline=False) 
        em.set_footer(text="Warning: This can't be undone. Only you can start the new game by ``?count_channel``")            
        await ctx.send(embed=em)


    @help.command()
    @commands.cooldown(1, 3, commands.BucketType.user)
    async def count_reset(self,ctx):
        em = discord.Embed(
            title="Resets counter in count game", description="Use this command to reset the counter in counting game", colour=randint(0, 0xffffff))
        em.set_thumbnail(
            url="https://cdn.discordapp.com/avatars/839421874646548530/0c3f5a2ee26def577afe60154cd106cd.webp?size=1024")
        em.add_field(name="Commands",
                    value="``?count_reset``", inline=False) 
        await ctx.send(embed=em)


    @help.command()
    @commands.cooldown(1, 3, commands.BucketType.user)
    async def count_channel(self,ctx):
        em = discord.Embed(
            title="Channel for Counting game", description="Use this command to fix the channel for counting game", colour=randint(0, 0xffffff))
        em.set_thumbnail(
            url="https://cdn.discordapp.com/avatars/839421874646548530/0c3f5a2ee26def577afe60154cd106cd.webp?size=1024")
        em.add_field(name="Syntax:",
                    value="``?count_channel <#specific channel>``", inline=False) 
        em.add_field(name="Example:",
                    value="``?count_channel #chat``", inline=False)
        await ctx.send(embed=em)

    @help.command()
    @commands.cooldown(1, 3, commands.BucketType.user)
    async def join(self,ctx):
        em = discord.Embed(
            title="Join", description="Use this command to join the bot in voice channel", colour=randint(0, 0xffffff))
        em.set_thumbnail(
            url="https://cdn.discordapp.com/avatars/839421874646548530/0c3f5a2ee26def577afe60154cd106cd.webp?size=1024")
        em.add_field(name="Command:",
                    value="``?join``", inline=False)
        await ctx.send(embed=em)

    @help.command()
    @commands.cooldown(1, 3, commands.BucketType.user)
    async def leave(self,ctx):
        em = discord.Embed(
            title="Leave", description="Use this command to leave the bot from voice channel", colour=randint(0, 0xffffff))
        em.set_thumbnail(
            url="https://cdn.discordapp.com/avatars/839421874646548530/0c3f5a2ee26def577afe60154cd106cd.webp?size=1024")
        em.add_field(name="Command:",
                    value="``?leave``", inline=False)
        await ctx.send(embed=em)

    @help.command()
    @commands.cooldown(1, 3, commands.BucketType.user)
    async def play(self,ctx):
        em = discord.Embed(
            title="Play", description="Use this command to play a song", colour=randint(0, 0xffffff))
        em.set_thumbnail(
            url="https://cdn.discordapp.com/avatars/839421874646548530/0c3f5a2ee26def577afe60154cd106cd.webp?size=1024")
        em.add_field(name="Syntax:",
                    value="``?play <song name>``", inline=False)
        em.add_field(name="Example:",
                    value="``?play arcade``", inline=False)
        await ctx.send(embed=em)

    @help.command()
    @commands.cooldown(1, 3, commands.BucketType.user)
    async def pause(self,ctx):
        em = discord.Embed(
            title="Pause", description="Use this command to pause a song that is playing currently", colour=randint(0, 0xffffff))
        em.set_thumbnail(
            url="https://cdn.discordapp.com/avatars/839421874646548530/0c3f5a2ee26def577afe60154cd106cd.webp?size=1024")
        em.add_field(name="Command:",
                    value="``?pause``", inline=False)
        await ctx.send(embed=em)


    @help.command()
    @commands.cooldown(1, 3, commands.BucketType.user)
    async def resume(self,ctx):
        em = discord.Embed(
            title="Resume", description="Use this command to resume the song that is currently paused", colour=randint(0, 0xffffff))
        em.set_thumbnail(
            url="https://cdn.discordapp.com/avatars/839421874646548530/0c3f5a2ee26def577afe60154cd106cd.webp?size=1024")
        em.add_field(name="Command:",
                    value="``?resume``", inline=False)
        await ctx.send(embed=em)


    @help.command()
    @commands.cooldown(1, 3, commands.BucketType.user)
    async def loop(self,ctx):
        em = discord.Embed(
            title="Loop", description="Use this command to loop the song that is currently playing", colour=randint(0, 0xffffff))
        em.set_thumbnail(
            url="https://cdn.discordapp.com/avatars/839421874646548530/0c3f5a2ee26def577afe60154cd106cd.webp?size=1024")
        em.add_field(name="Command:",
                    value="``?loop``", inline=False)
        await ctx.send(embed=em)

    @help.command()
    @commands.cooldown(1, 3, commands.BucketType.user)
    async def queue(self,ctx):
        em = discord.Embed(
            title="Queue", description="Used to view the queued song", colour=randint(0, 0xffffff))
        em.set_thumbnail(
            url="https://cdn.discordapp.com/avatars/839421874646548530/0c3f5a2ee26def577afe60154cd106cd.webp?size=1024")
        em.add_field(name="Command:",
                    value="``?queue``", inline=False)
        await ctx.send(embed=em)

    @help.command()
    @commands.cooldown(1, 3, commands.BucketType.user)
    async def np(self,ctx):
        em = discord.Embed(
            title="Now-Playing", description="Used to view the currently playing song", colour=randint(0, 0xffffff))
        em.set_thumbnail(
            url="https://cdn.discordapp.com/avatars/839421874646548530/0c3f5a2ee26def577afe60154cd106cd.webp?size=1024")
        em.add_field(name="Command:",
                    value="``?np``", inline=False)
        await ctx.send(embed=em)


    @help.command()
    @commands.cooldown(1, 3, commands.BucketType.user)
    async def skip(self,ctx):
        em = discord.Embed(
            title="Skip", description="Used to skip the song and moves to next song in queue", colour=randint(0, 0xffffff))
        em.set_thumbnail(
            url="https://cdn.discordapp.com/avatars/839421874646548530/0c3f5a2ee26def577afe60154cd106cd.webp?size=1024")
        em.add_field(name="Command:",
                    value="``?skip``", inline=False)
        await ctx.send(embed=em)

    @help.command()
    @commands.cooldown(1, 3, commands.BucketType.user)
    async def volume(self,ctx):
        em = discord.Embed(
            title="volume", description="Used to fix the volume of the song", colour=randint(0, 0xffffff))
        em.set_thumbnail(
            url="https://cdn.discordapp.com/avatars/839421874646548530/0c3f5a2ee26def577afe60154cd106cd.webp?size=1024")
        em.add_field(name="Syntax:",
                    value="``?volume <required percentage(0-200%)>``", inline=False)    
        em.add_field(name="Example:",
                    value="``?volume 75``", inline=False)
        await ctx.send(embed=em)

    @help.command()
    @commands.cooldown(1, 3, commands.BucketType.user)
    async def remove(self,ctx):
        em = discord.Embed(
            title="Remove", description="Removes the song in the given index", colour=randint(0, 0xffffff))
        em.set_thumbnail(
            url="https://cdn.discordapp.com/avatars/839421874646548530/0c3f5a2ee26def577afe60154cd106cd.webp?size=1024")
        em.add_field(name="Syntax:",
                    value="``?remove <index of song in queue>``", inline=False)    
        em.add_field(name="Example:",
                    value="``?remove 3`` Used to remove 3rd index", inline=False)
        await ctx.send(embed=em)

    @help.command()
    @commands.cooldown(1, 3, commands.BucketType.user)
    async def truth(self,ctx):
        em = discord.Embed(
            title="Truth", description="Use this command to ask truth question", colour=randint(0, 0xffffff))
        em.set_thumbnail(
            url="https://cdn.discordapp.com/avatars/839421874646548530/0c3f5a2ee26def577afe60154cd106cd.webp?size=1024")
        em.add_field(name="Command:",
                    value="``?truth``", inline=False)
        await ctx.send(embed=em)

    @help.command()
    @commands.cooldown(1, 3, commands.BucketType.user)
    async def dare(self,ctx):
        em = discord.Embed(
            title="Dare", description="Use this command to ask dare questions", colour=randint(0, 0xffffff))
        em.set_thumbnail(
            url="https://cdn.discordapp.com/avatars/839421874646548530/0c3f5a2ee26def577afe60154cd106cd.webp?size=1024")
        em.add_field(name="Command:",
                    value="``?dare``", inline=False)
        await ctx.send(embed=em)

def setup(bot):
    # asyncio.sleep(1)
    bot.add_cog(Help(bot))
    print(f'Help was loaded!')  