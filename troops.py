m_t1=2;m_t2=8;m_t3=24 ##might of t1,t2,t3
p_t1=1;p_t2=8;p_t3=20##training potions of t1,t2,t3
train_pot=0
##player might details
def might(t1,t2,t3):
    return (t1*m_t1+t2*m_t2+t3*m_t3)

##troop_count train information
def train(troop_count,train_pot,tier,t1,t2,t3):    
    if(tier==1):
        if(troop_count*p_t1>train_pot):     ##checks whether we have enough training costs for training t1
            result="Not enough training potions"
            return result
        else:
            train_pot=train_pot-troop_count*p_t1        ##if yes train the tier 1 troops
            t1+=troop_count
            result={
                'training_train_pot':train_pot,
                'tier1':t1,
                'tier2':t2,
                'tier3':t3
            }
            return result    
    elif(tier==2):
        if(troop_count*p_t2>train_pot):      ##checks whether we have enough training costs for training t2
            result="Not enough training potions"
            return result
        else:                                ##if yes train the tier 2 troops
            train_pot=train_pot-troop_count*p_t2
            t2+=troop_count
            result={
                'training_train_pot':train_pot,
                'tier1':t1,
                'tier2':t2,
                'tier3':t3
            }
            return result  
    elif(tier==3):                          ##checks whether we have enough training costs for training t3
        if(troop_count*p_t3>train_pot):
            result="Not enough training potions"
            return result
        else:                                ##if yes train the tier 3 troops
            train_pot=train_pot-troop_count*p_t3
            t3+=troop_count
            result={
                'training_train_pot':train_pot,
                'tier1':t1,
                'tier2':t2,
                'tier3':t3
            }
            return result   
    else:
        result="No such tier troops exist"  ##if we gave invalid tier print no such tier exist
        return result   


##For fighting but not sure of this code//just copy pasted
def fight(t1, t2, t3,train_pot, et1, et2, et3,etrain_pot):
    b = 0
    eb = 0
    loss1 = 0
    loss2 = 0
    loss3 = 0
    eloss1 = 0
    eloss2 = 0
    eloss3 = 0  # 10,20,30,5,6,32
    edamage = t1*2+t2*8+t3*24  # edamage=51380
    damage = et1*2+et2*8+et3*24  # damage=16958
    if(damage <= edamage):
        win = True
        train_pot+=int(etrain_pot/5)
        etrain_pot-=int(etrain_pot/5)
    else:
        win = False
        etrain_pot+=int(train_pot/5)
        train_pot-=int(train_pot)
    if(edamage > damage):
        damage = damage/8.85
        edamage = edamage/2.9
        damage = int(damage)
        edamage = int(edamage)
    elif(edamage < damage):
        edamage = edamage/8.3
        damage = damage/1.8
        damage = int(damage)
        edamage = int(edamage)
    else:
        damage = damage/4.2
        edamage = edamage/4.2
        damage = int(damage)
        edamage = int(edamage)
    d_t1 = (damage/2)
    d_t1 = int(d_t1)  # d_t1=816
    if(d_t1 >= t1):
        loss1 = t1  # loss1=10
        t1 = 0  # t1(left)=0
        exdamage1 = damage-loss1*2  # extradamage1=9800
    else:
        loss1 = d_t1
        t1 = (t1-d_t1)
        exdamage1 = 0
        ++b
    if(b == 0):
        d_t2 = exdamage1/8  # d_t2=245
        d_t2 = int(d_t2)
        if(d_t2 >= t2):
            loss2 = t2  # loss2=20
            t2 = 0  # t2(left)=0
            exdamage2 = exdamage1-loss2*8  # extradamage2=9000
        else:
            loss2 = d_t2
            t2 = (t2-d_t2)
            exdamage2 = 0
            ++b
    if(b == 0):
        d_t3 = exdamage2/24  # d_t3=30
        d_t3 = int(d_t3)
        if(d_t3 >= t3):
            loss3 = t3
            t3 = 0
        else:
            loss3 = d_t3  # loss3=30
            t3 = (t3-d_t3)  # t3(left)=2

    ed_t1 = (edamage/2)  # d_t1=816
    ed_t1 = int(ed_t1)
    if(ed_t1 >= et1):
        eloss1 = et1  # loss1=10
        et1 = 0  # t1(left)=0
        eexdamage1 = edamage-loss1*2  # extradamage1=9800
    else:
        eloss1 = ed_t1
        et1 = (et1-ed_t1)
        eexdamage1 = 0
        ++eb
    if(eb == 0):
        ed_t2 = eexdamage1/8  # d_t2=245
        ed_t2 = int(ed_t2)
        if(ed_t2 >= et2):
            eloss2 = et2  # loss2=20
            et2 = 0  # t2(left)=0
            eexdamage2 = eexdamage1-eloss2*8  # extradamage2=9000
        else:
            eloss2 = ed_t2
            et2 = (et2-ed_t2)
            eexdamage2 = 0
            ++eb
    if(eb == 0):
        ed_t3 = eexdamage2/24  # d_t3=30
        ed_t3 = int(ed_t3)
        if(ed_t3 >= et3):
            eloss3 = et3
            et3 = 0
        else:
            eloss3 = ed_t3  # loss3=30
            et3 = (et3-ed_t3)  # t3(left)=2  
    edamage = eloss1*2+eloss2*8+eloss3*24  # edamage=9920
    damage = loss1*2+loss2*8+loss3*24  # damage=9900                 
    dmg_stats = (damage, edamage, t1, t2, t3,train_pot,et1,et2,et3,etrain_pot)
    return win, dmg_stats

# bluh = train(1,1905,3,2,3,4)
# print(bluh)
