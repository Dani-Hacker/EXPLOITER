from discord.ext import commands
import discord
import akinator
from akinator.async_aki import Akinator
from mongodbs import *
from discord.ext.commands import cooldown, BucketType
import asyncio
from random import randint
import json

global aki, emojis_c, emojis_w
aki = Akinator()
emojis_c = ['‚úÖ', '‚ùå', 'ü§∑', 'üëç', 'üëé', '‚èÆ', 'üõë']
emojis_w = ['‚úÖ', '‚ùå']


class Akinator(commands.Cog, name='akinator'):
    """Commands to use aki."""

    def __init__(self, bot):
        self.bot = bot

    def cog_load(self):
        print("akinator was loaded")

    def cog_unload(self):
        print(f'akinator was unloaded')

# Just append all embed names in here, in the right order ofcourse

        # an example event with cogs

    @staticmethod
    def w(name, desc, picture):
        embed_win = discord.Embed(title=f"It's {name} ({desc})! Was I correct?",
                                  colour=randint(0, 0xffffff))
        embed_win.set_image(url=picture)
        return embed_win

    @commands.command()
    @commands.cooldown(1, 30, commands.BucketType.user)
    @commands.has_permissions(kick_members=True)
    async def changeprefix(self, ctx, prefix):
        with open("prefixes.json", "r") as f:
            prefixes = json.load(f)
        prefixes[str(ctx.guild.id)] = prefix
        with open('prefixes.json', "w") as f:
            json.dump(prefixes, f, indent=4)

    @commands.command(aliases=['ck'])
    @commands.guild_only()
    @commands.has_permissions(administrator=True)
    @commands.cooldown(1, 10, commands.BucketType.user)
    async def caki(self, ctx, answers):
        try:
            serverId = ctx.message.guild.id
            c_id = int(answers[2:-1])
            channel = self.bot.get_channel(c_id)
            serverId = ctx.message.guild.id
            if server_info.find_one({'id': serverId}):
                server_info.update_one({'id': serverId}, {
                    '$set': {'caki': c_id}})
                await ctx.reply(f"You fixed {channel.mention} as akinator channel")
            else:
                server_Doc = {
                    'id': int(serverId), 'caki': c_id
                }
                server_info.insert_one(server_Doc)
                await ctx.reply(f"You fixed {channel.mention} as akinator channel")
        except:
            # await ctx.reply("You can send ephemeral messages too!", flags = MessageFlags().EPHEMERAL)
            await ctx.reply("Enter a proper channel")

    # @commands.command(aliases=['ck'])
    # @commands.guild_only()
    # @commands.has_permissions(administrator=True)
    # @commands.cooldown(1, 10, commands.BucketType.user)
    # async def caki(self,ctx,answers):
    #   try:
    #       serverId=ctx.message.guild.id
    #       try:
    #         x=await server_info.find_one({'id':serverId })
    #         x=x['disabled']
    #         if "caki" in x:
    #           return
    #       except:
    #         pass
    #       c_id = int(answers[2:-1])
    #       channel = self.bot.get_channel(c_id)
    #       serverId = ctx.message.guild.id
    #       if await server_info.find_one({'id': serverId}):
    #         await server_info.update_one({'id': serverId}, {'$set': {'caki': c_id}})
    #         # server_info.update_one({'id': serverId}, {
    #         #         '$set': {'caki': c_id}})
    #         await ctx.reply(f"You fixed {channel.mention} as akinator channel")
    #       else:
    #         server_Doc = {
    #                 'id': int(serverId)
    #                 ,'caki':c_id
    #             }
    #         await server_info.insert_one(server_Doc)
    #         await ctx.reply(f"You fixed {channel.mention} as akinator channel")
    #   except:
    #       # await ctx.reply("You can send ephemeral messages too!", flags = MessageFlags().EPHEMERAL)
    #       await ctx.reply("Enter a proper channel")

    @commands.command(aliases=['a'])
    @commands.guild_only()
    @commands.max_concurrency(1, wait=False)
    @commands.cooldown(1, 30, commands.BucketType.user)
    async def aki(self, ctx, *, extra):
        try:
            serverId = ctx.message.guild.id
            channel_id = str(server_info.find_one(
                {'id': serverId})['caki'])
            channel_id = int(channel_id)
        except:
            await ctx.send("Ask admin to set a channel for akinator by using ``?caki`` command!")
            return
        if ctx.channel.id == channel_id:
            desc_loss = ''
            d_loss = ''
            # aki = Akinator()

            def check_c(reaction, user):
                return user == ctx.author and str(reaction.emoji) in emojis_c

            def check_w(reaction, user):
                return user == ctx.author and str(reaction.emoji) in emojis_w

            async with ctx.typing():
                if extra == 'people':
                    q = await aki.start_game(child_mode=True)
                elif extra == 'objects' or extra == 'animals':
                    q = await aki.start_game(language=f'en_{extra}',
                                             child_mode=True)
                else:
                    title_error_three = 'This game mode does not exist'
                    desc_error_three = 'Use **.help** to see a list of all the game modes available'
                    embed_var_three = discord.Embed(title=title_error_three,
                                                    description=desc_error_three,
                                                    colour=randint(0, 0xffffff))
                    await ctx.reply(embed=embed_var_three)
                    return

                embed_question = discord.Embed(
                    title='Tip : Wait until all emojis finish being added before reacting'
                    ' or you will have to unreact and react again',
                    colour=randint(0, 0xffffff))
                msg = await ctx.reply(embed=embed_question)
                await asyncio.sleep(3)
                x = 0
            while aki.progression <= 85:
                message = await ctx.fetch_message(msg.id)
                embed_question1 = discord.Embed(
                    title=f"{q}",
                    colour=randint(0, 0xffffff))
                await message.edit(embed=embed_question1)
                if(x == 0):
                    for m in emojis_c:
                        await message.add_reaction(m)
                x = x+1
                try:
                    symbol, username = await self.bot.wait_for('reaction_add', timeout=45.0, check=check_c)
                except asyncio.TimeoutError:
                    embed_game_ended = discord.Embed(
                        title='You took too long,the game has ended',
                        colour=randint(0, 0xffffff))
                    await message.edit(embed=embed_game_ended)
                    return

                if str(symbol) == emojis_c[0]:
                    a = 'y'
                    await message.remove_reaction(emojis_c[0], ctx.author)
                elif str(symbol) == emojis_c[1]:
                    a = 'n'
                    await message.remove_reaction(emojis_c[1], ctx.author)
                elif str(symbol) == emojis_c[2]:
                    a = 'idk'
                    await message.remove_reaction(emojis_c[2], ctx.author)
                elif str(symbol) == emojis_c[3]:
                    a = 'p'
                    await message.remove_reaction(emojis_c[3], ctx.author)
                elif str(symbol) == emojis_c[4]:
                    a = 'pn'
                    await message.remove_reaction(emojis_c[4], ctx.author)
                elif str(symbol) == emojis_c[5]:
                    a = 'b'
                    await message.remove_reaction(emojis_c[5], ctx.author)
                elif str(symbol) == emojis_c[6]:
                    await message.remove_reaction(emojis_c[6], ctx.author)
                    embed_game_end = discord.Embed(
                        title='I ended the game because you asked me to do it',
                        colour=randint(0, 0xffffff))
                    await message.edit(embed=embed_game_end)
                    return

                if a == "b":
                    try:
                        q = await aki.back()
                    except akinator.CantGoBackAnyFurther:
                        pass
                else:
                    q = await aki.answer(a)

            await aki.win()

            wm = await ctx.reply(
                embed=self.w(aki.first_guess['name'], aki.first_guess['description'],
                             aki.first_guess['absolute_picture_path']))

            for e in emojis_w:
                await wm.add_reaction(e)

            try:
                s, u = await self.bot.wait_for('reaction_add',
                                               timeout=30.0,
                                               check=check_w)
            except asyncio.TimeoutError:
                for times in aki.guesses:
                    d_loss = d_loss + times['name'] + '\n'
                t_loss = 'Here is a list of all the people I had in mind :'
                embed_loss = discord.Embed(title=t_loss,
                                           description=d_loss,
                                           colour=randint(0, 0xffffff))
                await ctx.reply(embed=embed_loss)
                return

            if str(s) == emojis_w[0]:
                embed_win = discord.Embed(
                    title='Great, guessed right one more time!', colour=randint(0, 0xffffff))
                await ctx.reply(embed=embed_win)
            elif str(s) == emojis_w[1]:
                for times in aki.guesses:
                    desc_loss = desc_loss + times['name'] + '\n'
                title_loss = 'No problem, I will win next time! But here is a list of all the people I had in mind :'
                embed_loss = discord.Embed(title=title_loss,
                                           description=desc_loss,
                                           colour=randint(0, 0xffffff))
                await ctx.reply(embed=embed_loss)
        else:
            right_channel = self.bot.get_channel(channel_id)
            channel_mention = right_channel.name
            wrong_channel = discord.Embed(
                title='You can only play in the channel ' + "#" +
                      channel_mention,
                colour=randint(0, 0xffffff))
            await ctx.reply(embed=wrong_channel)


def setup(bot):
    bot.add_cog(Akinator(bot))
    print(f'Akinator was loaded!')
